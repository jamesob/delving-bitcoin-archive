{
  "id": 2599,
  "name": "",
  "username": "setavenger",
  "avatar_template": "/user_avatar/delvingbitcoin.org/setavenger/{size}/573_2.png",
  "created_at": "2024-06-02T13:07:30.186Z",
  "cooked": "<aside class=\"quote no-group quote-modified\" data-username=\"josibake\" data-post=\"10\" data-topic=\"891\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/josibake/48/83_2.png\" class=\"avatar\"> josibake:</div>\n<blockquote>\n<p>The two benefits I see for providing outputs grouped by txidtxidtxid are reduced bandwidth and less computation for the client in the event an output is found</p>\n</blockquote>\n</aside>\n<p>No doubt there.</p>\n<aside class=\"quote no-group\" data-username=\"josibake\" data-post=\"10\" data-topic=\"891\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/josibake/48/83_2.png\" class=\"avatar\"> josibake:</div>\n<blockquote>\n<p>if every client will end up grouping it seems better to do the work one time on the server</p>\n</blockquote>\n</aside>\n<p>This is a valid statement. I was coming from a perspective of doing these transformations on-the-fly per request. As of now the BB Oracle architecture would require on-the-fly mapping. The reason being that UTXOs need to be updated individually to change the spent state. Grouping UTXOs in storage would probably generate some overhead for sync times. Might be negligible though.</p>\n<aside class=\"quote no-group\" data-username=\"josibake\" data-post=\"10\" data-topic=\"891\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/josibake/48/83_2.png\" class=\"avatar\"> josibake:</div>\n<blockquote>\n<p>It\u2019s not immediately clear to what the additional fields are for, i.e. block hash, block number, timestamp. In the case of block info, seems like we could use block hash or block number, depending on what the wallet needs it for?</p>\n</blockquote>\n</aside>\n<p>It\u2019s just an optional metadata field. <code>block_height</code> or <code>block_hash</code> should suffice if the wallet does extra requests to get block meta data. <code>timestamp</code> seemed like an obvious use case. The optional fields are not very refined yet and just ideas I threw out there. None of these fields are technically required to spend the outputs which is why I put them in optional to begin with.\nIf included it does make sense to not have them repeated in every output and rather aggregate on a higher level.</p>",
  "post_number": 11,
  "post_type": 1,
  "updated_at": "2024-06-02T13:07:30.186Z",
  "reply_count": 0,
  "reply_to_post_number": 10,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 10,
  "readers_count": 9,
  "score": 17.0,
  "yours": false,
  "topic_id": 891,
  "topic_slug": "silent-payments-light-client-protocol",
  "topic_title": "Silent Payments: Light Client Protocol",
  "topic_html_title": "Silent Payments: Light Client Protocol",
  "category_id": 12,
  "display_username": "",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"josibake, post:10, topic:891\"]\nThe two benefits I see for providing outputs grouped by txidtxidtxid are reduced bandwidth and less computation for the client in the event an output is found\n[/quote]\n\nNo doubt there.\n\n[quote=\"josibake, post:10, topic:891\"]\nif every client will end up grouping it seems better to do the work one time on the server\n[/quote]\n\nThis is a valid statement. I was coming from a perspective of doing these transformations on-the-fly per request. As of now the BB Oracle architecture would require on-the-fly mapping. The reason being that UTXOs need to be updated individually to change the spent state. Grouping UTXOs in storage would probably generate some overhead for sync times. Might be negligible though.\n\n[quote=\"josibake, post:10, topic:891\"]\nIt\u2019s not immediately clear to what the additional fields are for, i.e. block hash, block number, timestamp. In the case of block info, seems like we could use block hash or block number, depending on what the wallet needs it for?\n[/quote]\n\nIt's just an optional metadata field. `block_height` or `block_hash` should suffice if the wallet does extra requests to get block meta data. `timestamp` seemed like an obvious use case. The optional fields are not very refined yet and just ideas I threw out there. None of these fields are technically required to spend the outputs which is why I put them in optional to begin with.\nIf included it does make sense to not have them repeated in every output and rather aggregate on a higher level.",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 435,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false
}