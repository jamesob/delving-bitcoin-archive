{
  "id": 2743,
  "name": "Matt Morehouse",
  "username": "morehouse",
  "avatar_template": "/letter_avatar_proxy/v4/letter/m/df705f/{size}.png",
  "created_at": "2024-06-18T17:48:35.668Z",
  "cooked": "<p>LND versions prior to 0.17.0 are vulnerable to a DoS attack where malicious onion packets cause the node to instantly run out of memory (OOM) and crash. If you are running an LND release older than this, your funds are at risk! Update to at least <a href=\"https://github.com/lightningnetwork/lnd/releases/tag/v0.17.0-beta\" rel=\"noopener nofollow ugc\">0.17.0</a> to protect your node.</p>\n<h2><a name=\"the-vulnerability-1\" class=\"anchor\" href=\"#the-vulnerability-1\"></a>The Vulnerability</h2>\n<p>When decoding onion payloads, LND did not do proper bounds checking on the decoded length of the payload.  The sender of the onion payload could set a length of up to 4 GB, and LND would allocate that much memory to decode the rest of the payload.</p>\n<p>By sending multiple malicious onion payloads, an attacker could cause LND nodes to OOM crash within seconds.  Due to onion routing, the source of the attack would be trivially concealed.</p>\n<h2><a name=\"protecting-your-node-2\" class=\"anchor\" href=\"#protecting-your-node-2\"></a>Protecting Your Node</h2>\n<p>Update to at least LND <a href=\"https://github.com/lightningnetwork/lnd/releases/tag/v0.17.0-beta\" rel=\"noopener nofollow ugc\">0.17.0</a>, which added a bounds check on onion payload lengths.</p>\n<h2><a name=\"more-details-3\" class=\"anchor\" href=\"#more-details-3\"></a>More Details</h2>\n<p>For more details about the vulnerability, root causes, and prevention, see my <a href=\"https://morehouse.github.io/lightning/lnd-onion-bomb/\" rel=\"noopener nofollow ugc\">blog post</a>.</p>",
  "post_number": 1,
  "post_type": 1,
  "updated_at": "2024-06-18T17:48:35.668Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 115,
  "reads": 19,
  "readers_count": 18,
  "score": 623.6,
  "yours": false,
  "topic_id": 979,
  "topic_slug": "dos-disclosure-lnd-onion-bomb",
  "topic_title": "DoS Disclosure: LND Onion Bomb",
  "topic_html_title": "DoS Disclosure: LND Onion Bomb",
  "category_id": 8,
  "display_username": "Matt Morehouse",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "LND versions prior to 0.17.0 are vulnerable to a DoS attack where malicious onion packets cause the node to instantly run out of memory (OOM) and crash. If you are running an LND release older than this, your funds are at risk! Update to at least [0.17.0](https://github.com/lightningnetwork/lnd/releases/tag/v0.17.0-beta) to protect your node.\n\n## The Vulnerability\n\nWhen decoding onion payloads, LND did not do proper bounds checking on the decoded length of the payload.  The sender of the onion payload could set a length of up to 4 GB, and LND would allocate that much memory to decode the rest of the payload.\n\nBy sending multiple malicious onion payloads, an attacker could cause LND nodes to OOM crash within seconds.  Due to onion routing, the source of the attack would be trivially concealed.\n\n## Protecting Your Node\n\nUpdate to at least LND [0.17.0](https://github.com/lightningnetwork/lnd/releases/tag/v0.17.0-beta), which added a bounds check on onion payload lengths.\n\n## More Details\n\nFor more details about the vulnerability, root causes, and prevention, see my [blog post](https://morehouse.github.io/lightning/lnd-onion-bomb/).",
  "actions_summary": [
    {
      "id": 2,
      "count": 3
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 47,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 2
    },
    {
      "id": "clap",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 3,
  "current_user_used_main_reaction": false
}