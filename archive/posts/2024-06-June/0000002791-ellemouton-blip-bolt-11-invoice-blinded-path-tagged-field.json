{
  "id": 2791,
  "name": "Elle",
  "username": "ellemouton",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ellemouton/{size}/662_2.png",
  "created_at": "2024-06-26T00:05:52.519Z",
  "cooked": "<p>Hey y\u2019all!</p>\n<p>Want to generate some discussion around this new bLIP proposal before opening a more formal PR to the bLIP repo. See the \" Some Questions, Discussion Points &amp; TODO\" section at the end for some specific questions &amp; discussion points from my side. Thanks in advance for any feedback!</p>\n<pre><code class=\"lang-auto\">bLIP: xx \nTitle: BOLT 11 Invoice Blinded Path Tagged Field\nAuthor: Elle Mouton &lt;elle.mouton@gmail.com&gt;\nStatus: Draft\nCreated: 2024-06-20\n* Post-History: dates of postings to lightning-dev mailing list, or link to thread in \n  mailing list archive\nLicense: CC0\n</code></pre>\n<h2><a name=\"abstract-1\" class=\"anchor\" href=\"#abstract-1\"></a>Abstract</h2>\n<p>This bLIP defines a new <a href=\"https://github.com/lightning/bolts/blob/c562d91ace0e95bec3c6f8758969eaf3627f23c8/11-payment-encoding.md#tagged-fields\" rel=\"noopener nofollow ugc\">tagged field</a> for the payment invoice\nencoding described by <a href=\"https://github.com/lightning/bolts/blob/c562d91ace0e95bec3c6f8758969eaf3627f23c8/11-payment-encoding.md\" rel=\"noopener nofollow ugc\">BOLT 11</a> which can be used to communicate\nencoded blinded path information to the payer of the invoice.</p>\n<h2><a name=\"copyright-2\" class=\"anchor\" href=\"#copyright-2\"></a>Copyright</h2>\n<p>This bLIP is licensed under the CC0 license.</p>\n<h2><a name=\"rational-3\" class=\"anchor\" href=\"#rational-3\"></a>Rational</h2>\n<p>Blinded paths have been included in the <a href=\"https://github.com/lightning/bolts/blob/c562d91ace0e95bec3c6f8758969eaf3627f23c8/04-onion-routing.md#route-blinding\" rel=\"noopener nofollow ugc\">BOLT 4 specification</a>\nand using them in the context of receiving payments is natively supported in\nthe <a href=\"https://github.com/lightning/bolts/pull/798\" rel=\"noopener nofollow ugc\">BOLT 12 Offers proposal</a>. However, the Offers proposal also\nincludes various other dependencies such as onion messaging and various new\nprotocol message all of which will require a network wide upgrade before full\nadvantage can be taken of the new protocol. Blinded paths themselves are a\nuseful tool for privacy and potentially more reliable payment delivery and so\nthis document proposes a carve-out to the existing <a href=\"https://github.com/lightning/bolts/blob/c562d91ace0e95bec3c6f8758969eaf3627f23c8/11-payment-encoding.md\" rel=\"noopener nofollow ugc\">BOLT 11</a> invoice\nformat so that advantage can be taken of the blinded paths protocol in the\ncontext of payments in a sooner time frame. This will be done by adding a new\ntagged-field type to the BOLT 11 invoice specification that will encode a\nblinded payment path. With this bLIP, the sender and the receiver of a payment\nwill need to be aware of the new tagged-field and the receiver will need to\nsupport route blinding and ideally have direct channel peers who also support\nroute blinding in order to start widening their anonymity set.</p>\n<h2><a name=\"specification-4\" class=\"anchor\" href=\"#specification-4\"></a>Specification</h2>\n<h3><a name=\"feature-bit-5\" class=\"anchor\" href=\"#feature-bit-5\"></a>Feature Bit</h3>\n<p>A new feature bit, <code>bolt11_blinded_path</code>, for the <code>I</code> context will be added\nusing bits from the experimental range. This is required because the BOLT 11\ntagged-fields pre-date the TLV format and so nodes parsing the invoice will just\nskip fields they don\u2019t know as there is no concept of \u201cIt\u2019s OK to be odd\u201d. This\nfeature bit thus allows nodes to fail fast if they do not yet understand the new\ntagged field.</p>\n<h3><a name=\"tagged-field-6\" class=\"anchor\" href=\"#tagged-field-6\"></a>Tagged Field</h3>\n<p>The proposal is to add the following new <a href=\"https://github.com/lightning/bolts/blob/c562d91ace0e95bec3c6f8758969eaf3627f23c8/11-payment-encoding.md#tagged-fields\" rel=\"noopener nofollow ugc\">tagged field</a> to the\nset defined in <a href=\"https://github.com/lightning/bolts/blob/c562d91ace0e95bec3c6f8758969eaf3627f23c8/11-payment-encoding.md\" rel=\"noopener nofollow ugc\">BOLT 11</a>:</p>\n<ul>\n<li><code>b</code> (20): <code>data_length</code> variable. One or more entries each containing a\nblinded payment path for a private route; there may be more than one <code>b</code>\nfield. The field uses the <code>blinded_payinfo</code> type described below which draws\nheavily on the proposed encoding of the <code>blinded_payinfo</code> subtype defined in\nthe <a href=\"https://github.com/lightning/bolts/pull/798\" rel=\"noopener nofollow ugc\">Offers proposal</a>.</li>\n</ul>\n<ol>\n<li>subtype: <code>blinded_payinfo</code></li>\n<li>data:</li>\n</ol>\n<ul>\n<li>[<code>u32</code>:<code>fee_base_msat</code>]</li>\n<li>[<code>u32</code>:<code>fee_proportional_millionths</code>]</li>\n<li>[<code>u16</code>:<code>cltv_expiry_delta</code>]</li>\n<li>[<code>u64</code>:<code>htlc_minimum_msat</code>]</li>\n<li>[<code>u64</code>:<code>htlc_maximum_msat</code>]</li>\n<li>[<code>u16</code>:<code>flen</code>]</li>\n<li>[<code>flen*byte</code>:<code>features</code>]</li>\n<li>[<code>33*byte</code>:<code>first_ephemeral_blinding_point</code>]</li>\n<li>[<code>byte</code>:<code>num_hops</code>]</li>\n<li>[<code>num_hops*blinded_hop</code>:<code>blinded_hops</code>]</li>\n</ul>\n<ol>\n<li>subtype: <code>blinded_hop</code></li>\n<li>data:\n<ul>\n<li>[<code>33*byte</code>:<code>blinded_node_pubkey</code>]</li>\n<li>[<code>bigsize</code>: <code>cipher_text_length</code>]</li>\n<li>[<code>cipher_text_length*byte</code>:<code>cipher_text</code>]</li>\n</ul>\n</li>\n</ol>\n<p>The <code>blinded_node_pubkey</code> of the first <code>blinded_hop</code> in a <code>blinded_payinfo</code> is\nthe real public key of the blinded path\u2019s introduction node.</p>\n<p>** Note: see discussion section for question around communicating\n<code>max_cltv_expiry</code> **</p>\n<h3><a name=\"requirements-7\" class=\"anchor\" href=\"#requirements-7\"></a>Requirements</h3>\n<p>An invoice containing the <code>b</code> field type:</p>\n<ul>\n<li>MUST not contain the <code>r</code> field type.</li>\n<li>MUST not contain the <code>s</code> field type since a payment address in the context of\nblinded payments does not make sense since the recipient is able to use the\n<code>path_id</code> in the <code>encrypted_recipient_data</code> for the same purpose.</li>\n<li>SHOULD sign the invoice with a private key that is not the same as their\npublic node ID and should not set the destination node (<code>n</code> field).</li>\n<li>Each <code>blinded_path</code> must fit within the <code>data_length</code> size limit. This places\nan upper limit of approximately 7 <code>blinded_hops</code> on each path. See the\nappendix for the estimation calculation.</li>\n<li>If the invoice will be displayed in QR form, then this also places an upper\nlimit on the number of <code>blinded_path</code> fields that can be added to the\ninvoice.</li>\n</ul>\n<h2><a name=\"universality-8\" class=\"anchor\" href=\"#universality-8\"></a>Universality</h2>\n<p>This proposal is a temporary measure that will allow users to start making use\nof blinded paths in the context of payments and thereby taking advantage of the\npotential privacy and payment success rate benefits that in they will in theory\nprovide. Once the Offers protocol along with its new invoice format has been\nwidely deployed, then there will be no use for this BOLT 11 carve-out. Due to\nthe forcasted temporary use of the new field, it makes sense to be in bLIP form\nrather than adding this in a more temporary way to the spec via a BOLT update\nproposal.</p>\n<h2><a name=\"backwards-compatibility-9\" class=\"anchor\" href=\"#backwards-compatibility-9\"></a>Backwards Compatibility</h2>\n<p>BOLT 11 states that the reader of an invoice \u201cMUST skip over unknown fields\u201d.\nThis means that an un-updated reader of an invoice that includes the new tagged\nfield would skip it when parsing the invoice. The proposal also adds a new\nfeature bit to the invoice feature bit vector and so this gives nodes an\nindication that the invoice includes something they do not yet understand.</p>\n<h2><a name=\"reference-implementations-10\" class=\"anchor\" href=\"#reference-implementations-10\"></a>Reference Implementations</h2>\n<p>The proposed encoding of the new BOLT 11 tagged-field is added to the LND\nimplementation in <a href=\"https://github.com/lightningnetwork/lnd/pull/8752\" rel=\"noopener nofollow ugc\">this PR</a>.</p>\n<h2><a name=\"appendix-11\" class=\"anchor\" href=\"#appendix-11\"></a>Appendix</h2>\n<h3><a name=\"example-invoice-string-12\" class=\"anchor\" href=\"#example-invoice-string-12\"></a>Example invoice string</h3>\n<p>The following string is an example of a BOLT11 invoice containing 2 blinded\npaths, one with 1 hop and one with 3 hops. Note that this uses the\n79 approximation for the cipher text calculated in the \u201cSize Restrictions\u201d\ncalculation further along in the appendix. Without the hrp part, this is 1153\nbytes which is still under the QR-code limit.</p>\n<pre><code class=\"lang-auto\">lnbc241pveeq09pp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqdqq55zqqqqq2qqqqqpgqyzqqqqqqqqqqqqyqqqqqqqqqqqvsqqqqlnxy0ffrlt2y2jgtzw89kgr3zg4dlwtlfycn3yuek8x5eucnuchqps82xf0m2u6sx5wnjw7xxgnxz5kf09quqsv5zvkgj7d5kpzttp4qz7qp8qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqgszjwfxyxwcalnnxvmw9dn52uxaj648vwktx4jwdcm8kwzdscdq5qzwqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk8t6endgpc99824amqzk9japgu8synwf3wx4qp4ej2r0h8rghypsqyuqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq5gcqqqqqpqqqqqqyqq2qqqqqqqqqqqqqqqqqqqqqqqqpgqqqqk8t6endgpc99824amqzk9japgu8synwf3wx4qp4ej2r0h8rghypsqsygpf8ynzr8vwleenxdhzke69wrwed2nk8t9n2e8xudnm8pxcvxs2qp8qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqnp4q0n326hr8v9zprg8gsvezcch06gfaqqhde2aj730yg0durunfhv667625ha7mj2grjtpfqhzdwdp5ej26ff4zk7lth0e7caprk0pzd49jj5jg89e5ppny8e6lmhv4ak3wvr76z5d66qxdseda3jeauz8fmmsqq2gke3\n</code></pre>\n<h3><a name=\"size-restrictions-13\" class=\"anchor\" href=\"#size-restrictions-13\"></a>Size Restrictions</h3>\n<h4><a name=\"data_length-limit-14\" class=\"anchor\" href=\"#data_length-limit-14\"></a><code>data_length</code> Limit</h4>\n<p>In order to conform to any existing BOLT 11 invoice parser, each new tagged\nfield must use the <code>data_length</code> encoding defined there. This means that the\nmaximum size of any <em>single</em> encoded blinded path is 639 bytes.</p>\n<p>What follows is a rough estimation of the maximum number of hops we can include\nin a single blinded path. It assumes that each hop\u2019s cipher text is the same\nlength.</p>\n<h5><a name=\"cipher-text-size-estimation-15\" class=\"anchor\" href=\"#cipher-text-size-estimation-15\"></a>Cipher Text Size Estimation</h5>\n<p>First, a rough estimation of the average cipher text length is required. A\nforwarding node in a blinded path will receive a cipher text payload containing\nthe following data:</p>\n<ul>\n<li><code>padding</code>: optional</li>\n<li><code>short_channel_id</code> of 8 bytes</li>\n<li><code>payment_relay</code>:\n<ul>\n<li>2 byte <code>cltv_expiry_delta</code></li>\n<li>4 byte <code>fee_proportional_millionths</code></li>\n<li>4 byte <code>fee_base_msat</code></li>\n</ul>\n</li>\n<li><code>payment_constraints</code>:\n<ul>\n<li>4 byte <code>max_cltv_expiry</code></li>\n<li>8 byte <code>htlc_minimum_msat</code></li>\n</ul>\n</li>\n<li><code>allowed_features</code>: optional</li>\n</ul>\n<p>If we <a href=\"https://github.com/lightning/bolts/blob/c562d91ace0e95bec3c6f8758969eaf3627f23c8/04-onion-routing.md?plain=1#L253\" rel=\"noopener nofollow ugc\">assume that the <code>allowed_features</code> vector is not\nset</a>, then this comes to a total of 30 mandatory bytes.</p>\n<p>For the recipient node, it will receive a cipher text payload containing:</p>\n<ul>\n<li><code>padding</code>: optional</li>\n<li><code>path_id</code>: let\u2019s assume that this is 32 bytes like the existing payment\naddress.</li>\n<li><code>payment_constraints</code>:\n<ul>\n<li>4 byte <code>max_cltv_expiry</code></li>\n<li>8 byte <code>htlc_minimum_msat</code></li>\n</ul>\n</li>\n</ul>\n<p>This comes to a total of 44 bytes for the recipient\u2019s cipher text.</p>\n<p>The padding field should be used by recipients to pad cipher text blobs so that\nall are the same size. Since the calculated recipient cipher text blob size (44)\nis larger than that of the forwarding nodes (30), we can assume that all the\ncipher text blobs will have a size of around 44 bytes.</p>\n<h5><a name=\"blinded_hop-size-estimation-16\" class=\"anchor\" href=\"#blinded_hop-size-estimation-16\"></a><code>blinded_hop</code> Size Estimation</h5>\n<p>The total number of bytes required for a single <code>blinded_hop</code> is:</p>\n<pre><code>= 33+bigsize_len(cipher_text)+len(cipher_text)\n</code></pre>\n<p>If we use the estimated <code>cipher_text</code> size of 44 bytes, then\n<code>bigsize_len(cipher_text)</code> is 1 and so this comes to 78 bytes for a single\n<code>blinded_hop</code>.</p>\n<h5><a name=\"blinded_payinfo-size-estimation-17\" class=\"anchor\" href=\"#blinded_payinfo-size-estimation-17\"></a><code>blinded_payinfo</code> Size Estimation</h5>\n<p>The total number of bytes required for the encoding of a single\n<code>blinded_payinfo</code> entry is:</p>\n<pre><code>= 4+4+2+8+8+2+len(features)+33+1+(num_hops*len(blinded_hop))\n= 68+len(features)+(num_hops*len(blinded_hop))\n</code></pre>\n<p>If we take the estimate of 78 bytes per <code>blinded_hop</code> and if we assume an empty\nfeature vector then this comes to:</p>\n<pre><code>= 68+(num_hops*78)\n</code></pre>\n<p>The maximum number of hops in a single blinded path can then be calculated to\nbe:</p>\n<pre><code>639 = 68+(num_hops*78)\nnum_hops = 7\n</code></pre>\n<h4><a name=\"qr-code-limit-18\" class=\"anchor\" href=\"#qr-code-limit-18\"></a>QR code limit</h4>\n<p>Another soft maximum value to keep in mind is the maximum number of bytes that\ncan fit into a <a href=\"https://en.wikipedia.org/wiki/QR_code#Information_capacity\" rel=\"noopener nofollow ugc\">QR code</a> which is 2,953 bytes. This is a soft maximum\nbecause this only applies if the invoice is in fact being transmitted via QR\ncode. This limit does not apply if the invoice is being transmitted via other\nprotocols such as LNURL. In the cases where the limit does apply, then two\nvariables will be at play:</p>\n<ul>\n<li>The number of blinded paths</li>\n<li>The number of blinded hops within each path (which will always also be\nrestricted by the <code>data_length</code> maximum).</li>\n</ul>\n<p>The exact limit on the number of blinded paths that can be included depends on\nthe size of other fields in the invoice. It is worth noting that an invoice with\na blinded path should not contain any <code>r</code> (route hint) fields.</p>\n<h1><a name=\"some-questions-discussion-points-todos-19\" class=\"anchor\" href=\"#some-questions-discussion-points-todos-19\"></a>Some Questions, Discussion Points &amp; TODOs:</h1>\n<ol>\n<li>In terms of communicating the <code>max_cltv_expiry</code> value to the sender, <a href=\"https://github.com/lightning/bolts/blob/c562d91ace0e95bec3c6f8758969eaf3627f23c8/proposals/route-blinding.md?plain=1#L274\" rel=\"noopener nofollow ugc\">the\nroute blinding proposal doc</a> suggests the possibility of just\nre-using the existing BOLT 11 expiry field. However, I think it could\npotentially be better to communicate it more explicitly as mentioned by\nt-bast <a href=\"https://github.com/lightning/bolts/pull/798/files#r1053000804\" rel=\"noopener nofollow ugc\">here</a> for <a href=\"https://github.com/lightning/bolts/pull/798\" rel=\"noopener nofollow ugc\">Offers</a>. The question then is, do\nwe add <em>another</em> BOLT 11 field for this value where one expiry will apply to\nall the routes or is there an argument for having an expiry <em>per</em> route?</li>\n<li>Currently, we swap the first \u201cblinded_node_id\u201d out for the real introduction\nkey as a way to save space (since we don\u2019t need the introduction node\u2019s\nblinded key but still want to give it encrypted data). But perhaps this is too\nhacky/confusing, and we should instead just create separate \u201cintro_node\u201d and\n\u201cintro_node_encrypted_data\u201d fields. The downside to that would be that\n\u201cnum_hops\u201d is then off-by-one.</li>\n<li>In terms of the invoice signature, currently it doesn\u2019t mean much other than\n\u201cthis has not been tampered with since creation\u201d. This isn\u2019t really worse than\ntoday for a node that only has connection via hop hints. But potentially\nworth doing something like an <code>n</code>-of-<code>n</code> MuSig2 using the <code>n</code> destination\npublic keys used for the <code>n</code> blinded paths.</li>\n<li>Does it make sense to add an experimental tagged field range for BOLT 11 in\nthe bLIP2 spec or would this be over-kill since BOLT 11 is in any-case being\nphased out?</li>\n</ol>",
  "post_number": 1,
  "post_type": 1,
  "updated_at": "2024-06-26T00:10:57.337Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 7,
  "reads": 5,
  "readers_count": 4,
  "score": 36.0,
  "yours": false,
  "topic_id": 991,
  "topic_slug": "blip-bolt-11-invoice-blinded-path-tagged-field",
  "topic_title": "bLIP: BOLT 11 Invoice Blinded Path Tagged Field",
  "topic_html_title": "bLIP: BOLT 11 Invoice Blinded Path Tagged Field",
  "category_id": 7,
  "display_username": "Elle",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": "",
  "bookmarked": false,
  "raw": "Hey y'all! \n\nWant to generate some discussion around this new bLIP proposal before opening a more formal PR to the bLIP repo. See the \" Some Questions, Discussion Points & TODO\" section at the end for some specific questions & discussion points from my side. Thanks in advance for any feedback!\n\n```\nbLIP: xx \nTitle: BOLT 11 Invoice Blinded Path Tagged Field\nAuthor: Elle Mouton <elle.mouton@gmail.com>\nStatus: Draft\nCreated: 2024-06-20\n* Post-History: dates of postings to lightning-dev mailing list, or link to thread in \n  mailing list archive\nLicense: CC0\n```\n\n## Abstract\n\nThis bLIP defines a new [tagged field][tagged-fields] for the payment invoice\nencoding described by [BOLT 11][bolt11] which can be used to communicate \nencoded blinded path information to the payer of the invoice. \n\n## Copyright\n\nThis bLIP is licensed under the CC0 license.\n\n## Rational\n\nBlinded paths have been included in the [BOLT 4 specification][blinded-paths] \nand using them in the context of receiving payments is natively supported in \nthe [BOLT 12 Offers proposal][offers]. However, the Offers proposal also \nincludes various other dependencies such as onion messaging and various new \nprotocol message all of which will require a network wide upgrade before full \nadvantage can be taken of the new protocol. Blinded paths themselves are a \nuseful tool for privacy and potentially more reliable payment delivery and so\nthis document proposes a carve-out to the existing [BOLT 11][bolt11] invoice\nformat so that advantage can be taken of the blinded paths protocol in the\ncontext of payments in a sooner time frame. This will be done by adding a new \ntagged-field type to the BOLT 11 invoice specification that will encode a \nblinded payment path. With this bLIP, the sender and the receiver of a payment \nwill need to be aware of the new tagged-field and the receiver will need to \nsupport route blinding and ideally have direct channel peers who also support \nroute blinding in order to start widening their anonymity set.\n\n## Specification\n\n### Feature Bit\n\nA new feature bit, `bolt11_blinded_path`, for the `I` context will be added \nusing bits from the experimental range. This is required because the BOLT 11 \ntagged-fields pre-date the TLV format and so nodes parsing the invoice will just\nskip fields they don't know as there is no concept of \"It's OK to be odd\". This\nfeature bit thus allows nodes to fail fast if they do not yet understand the new\ntagged field.\n\n### Tagged Field\n\nThe proposal is to add the following new [tagged field][tagged-fields] to the \nset defined in [BOLT 11][bolt11]:\n\n- `b` (20): `data_length` variable. One or more entries each containing a \n   blinded payment path for a private route; there may be more than one `b` \n   field. The field uses the `blinded_payinfo` type described below which draws \n   heavily on the proposed encoding of the `blinded_payinfo` subtype defined in \n   the [Offers proposal][offers].\n\n1. subtype: `blinded_payinfo`\n2. data:\n  * [`u32`:`fee_base_msat`]\n  * [`u32`:`fee_proportional_millionths`]\n  * [`u16`:`cltv_expiry_delta`]\n  * [`u64`:`htlc_minimum_msat`]\n  * [`u64`:`htlc_maximum_msat`]\n  * [`u16`:`flen`]\n  * [`flen*byte`:`features`]\n  * [`33*byte`:`first_ephemeral_blinding_point`]\n  * [`byte`:`num_hops`]\n  * [`num_hops*blinded_hop`:`blinded_hops`]\n\n1. subtype: `blinded_hop`\n2. data:\n   * [`33*byte`:`blinded_node_pubkey`]\n   * [`bigsize`: `cipher_text_length`]\n   * [`cipher_text_length*byte`:`cipher_text`]\n\nThe `blinded_node_pubkey` of the first `blinded_hop` in a `blinded_payinfo` is\nthe real public key of the blinded path's introduction node. \n\n** Note: see discussion section for question around communicating \n`max_cltv_expiry` **\n\n### Requirements\n\nAn invoice containing the `b` field type:\n- MUST not contain the `r` field type.\n- MUST not contain the `s` field type since a payment address in the context of\n  blinded payments does not make sense since the recipient is able to use the\n  `path_id` in the `encrypted_recipient_data` for the same purpose.\n- SHOULD sign the invoice with a private key that is not the same as their \n  public node ID and should not set the destination node (`n` field).\n- Each `blinded_path` must fit within the `data_length` size limit. This places\n  an upper limit of approximately 7 `blinded_hops` on each path. See the \n  appendix for the estimation calculation.\n- If the invoice will be displayed in QR form, then this also places an upper\n  limit on the number of `blinded_path` fields that can be added to the \n  invoice.\n\n## Universality\n\nThis proposal is a temporary measure that will allow users to start making use\nof blinded paths in the context of payments and thereby taking advantage of the \npotential privacy and payment success rate benefits that in they will in theory \nprovide. Once the Offers protocol along with its new invoice format has been \nwidely deployed, then there will be no use for this BOLT 11 carve-out. Due to \nthe forcasted temporary use of the new field, it makes sense to be in bLIP form\nrather than adding this in a more temporary way to the spec via a BOLT update \nproposal.\n\n## Backwards Compatibility\n\nBOLT 11 states that the reader of an invoice \"MUST skip over unknown fields\". \nThis means that an un-updated reader of an invoice that includes the new tagged \nfield would skip it when parsing the invoice. The proposal also adds a new \nfeature bit to the invoice feature bit vector and so this gives nodes an \nindication that the invoice includes something they do not yet understand. \n\n## Reference Implementations\n\nThe proposed encoding of the new BOLT 11 tagged-field is added to the LND \nimplementation in [this PR][impl].\n\n## Appendix\n\n### Example invoice string\n\nThe following string is an example of a BOLT11 invoice containing 2 blinded \npaths, one with 1 hop and one with 3 hops. Note that this uses the \n79 approximation for the cipher text calculated in the \"Size Restrictions\" \ncalculation further along in the appendix. Without the hrp part, this is 1153 \nbytes which is still under the QR-code limit. \n\n```\nlnbc241pveeq09pp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqdqq55zqqqqq2qqqqqpgqyzqqqqqqqqqqqqyqqqqqqqqqqqvsqqqqlnxy0ffrlt2y2jgtzw89kgr3zg4dlwtlfycn3yuek8x5eucnuchqps82xf0m2u6sx5wnjw7xxgnxz5kf09quqsv5zvkgj7d5kpzttp4qz7qp8qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqgszjwfxyxwcalnnxvmw9dn52uxaj648vwktx4jwdcm8kwzdscdq5qzwqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk8t6endgpc99824amqzk9japgu8synwf3wx4qp4ej2r0h8rghypsqyuqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq5gcqqqqqpqqqqqqyqq2qqqqqqqqqqqqqqqqqqqqqqqqpgqqqqk8t6endgpc99824amqzk9japgu8synwf3wx4qp4ej2r0h8rghypsqsygpf8ynzr8vwleenxdhzke69wrwed2nk8t9n2e8xudnm8pxcvxs2qp8qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqnp4q0n326hr8v9zprg8gsvezcch06gfaqqhde2aj730yg0durunfhv667625ha7mj2grjtpfqhzdwdp5ej26ff4zk7lth0e7caprk0pzd49jj5jg89e5ppny8e6lmhv4ak3wvr76z5d66qxdseda3jeauz8fmmsqq2gke3\n```\n\n### Size Restrictions\n\n#### `data_length` Limit\n\nIn order to conform to any existing BOLT 11 invoice parser, each new tagged\nfield must use the `data_length` encoding defined there. This means that the\nmaximum size of any _single_ encoded blinded path is 639 bytes.\n\nWhat follows is a rough estimation of the maximum number of hops we can include\nin a single blinded path. It assumes that each hop's cipher text is the same\nlength.\n\n##### Cipher Text Size Estimation\n\nFirst, a rough estimation of the average cipher text length is required. A\nforwarding node in a blinded path will receive a cipher text payload containing\nthe following data:\n\n- `padding`: optional\n- `short_channel_id` of 8 bytes\n- `payment_relay`:\n    * 2 byte `cltv_expiry_delta`\n    * 4 byte `fee_proportional_millionths`\n    * 4 byte `fee_base_msat`\n- `payment_constraints`:\n    * 4 byte `max_cltv_expiry`\n    * 8 byte `htlc_minimum_msat`\n- `allowed_features`: optional\n\nIf we [assume that the `allowed_features` vector is not\nset][empty-allowed-features], then this comes to a total of 30 mandatory bytes.\n\nFor the recipient node, it will receive a cipher text payload containing:\n\n- `padding`: optional\n- `path_id`: let's assume that this is 32 bytes like the existing payment\n  address.\n- `payment_constraints`:\n    * 4 byte `max_cltv_expiry`\n    * 8 byte `htlc_minimum_msat`\n\nThis comes to a total of 44 bytes for the recipient's cipher text.\n\nThe padding field should be used by recipients to pad cipher text blobs so that\nall are the same size. Since the calculated recipient cipher text blob size (44)\nis larger than that of the forwarding nodes (30), we can assume that all the\ncipher text blobs will have a size of around 44 bytes.\n\n##### `blinded_hop` Size Estimation\n\nThe total number of bytes required for a single `blinded_hop` is:\n\n    = 33+bigsize_len(cipher_text)+len(cipher_text)\n\nIf we use the estimated `cipher_text` size of 44 bytes, then \n`bigsize_len(cipher_text)` is 1 and so this comes to 78 bytes for a single \n`blinded_hop`.\n\n##### `blinded_payinfo` Size Estimation\n\nThe total number of bytes required for the encoding of a single\n`blinded_payinfo` entry is:\n\n    = 4+4+2+8+8+2+len(features)+33+1+(num_hops*len(blinded_hop))\n    = 68+len(features)+(num_hops*len(blinded_hop))\n\nIf we take the estimate of 78 bytes per `blinded_hop` and if we assume an empty\nfeature vector then this comes to:\n\n    = 68+(num_hops*78)\n\nThe maximum number of hops in a single blinded path can then be calculated to\nbe:\n\n    639 = 68+(num_hops*78)\n    num_hops = 7\n\n#### QR code limit\n\nAnother soft maximum value to keep in mind is the maximum number of bytes that\ncan fit into a [QR code][qr] which is 2,953 bytes. This is a soft maximum\nbecause this only applies if the invoice is in fact being transmitted via QR\ncode. This limit does not apply if the invoice is being transmitted via other\nprotocols such as LNURL. In the cases where the limit does apply, then two\nvariables will be at play:\n\n- The number of blinded paths\n- The number of blinded hops within each path (which will always also be\n  restricted by the `data_length` maximum).\n\nThe exact limit on the number of blinded paths that can be included depends on\nthe size of other fields in the invoice. It is worth noting that an invoice with\na blinded path should not contain any `r` (route hint) fields.\n\n\n# Some Questions, Discussion Points & TODOs: \n\n1. In terms of communicating the `max_cltv_expiry` value to the sender, [the \n   route blinding proposal doc][rb-proposal] suggests the possibility of just \n   re-using the existing BOLT 11 expiry field. However, I think it could \n   potentially be better to communicate it more explicitly as mentioned by \n   t-bast [here][max_cltv_expiry] for [Offers][offers]. The question then is, do\n   we add _another_ BOLT 11 field for this value where one expiry will apply to \n   all the routes or is there an argument for having an expiry _per_ route?\n2. Currently, we swap the first \"blinded_node_id\" out for the real introduction \n   key as a way to save space (since we don't need the introduction node's \n   blinded key but still want to give it encrypted data). But perhaps this is too\n   hacky/confusing, and we should instead just create separate \"intro_node\" and \n   \"intro_node_encrypted_data\" fields. The downside to that would be that \n   \"num_hops\" is then off-by-one.\n3. In terms of the invoice signature, currently it doesn't mean much other than \n   \"this has not been tampered with since creation\". This isn't really worse than\n   today for a node that only has connection via hop hints. But potentially \n   worth doing something like an `n`-of-`n` MuSig2 using the `n` destination \n   public keys used for the `n` blinded paths. \n4. Does it make sense to add an experimental tagged field range for BOLT 11 in \n   the bLIP2 spec or would this be over-kill since BOLT 11 is in any-case being \n   phased out?\n\n[tagged-fields]: https://github.com/lightning/bolts/blob/c562d91ace0e95bec3c6f8758969eaf3627f23c8/11-payment-encoding.md#tagged-fields\n[bolt11]: https://github.com/lightning/bolts/blob/c562d91ace0e95bec3c6f8758969eaf3627f23c8/11-payment-encoding.md\n[blinded-paths]: https://github.com/lightning/bolts/blob/c562d91ace0e95bec3c6f8758969eaf3627f23c8/04-onion-routing.md#route-blinding\n[offers]: https://github.com/lightning/bolts/pull/798\n[impl]: https://github.com/lightningnetwork/lnd/pull/8752\n[qr]: https://en.wikipedia.org/wiki/QR_code#Information_capacity\n[lnurl]: https://github.com/lnurl/luds\n[rb-proposal]: https://github.com/lightning/bolts/blob/c562d91ace0e95bec3c6f8758969eaf3627f23c8/proposals/route-blinding.md?plain=1#L274\n[max_cltv_expiry]: https://github.com/lightning/bolts/pull/798/files#r1053000804\n[empty-allowed-features]: https://github.com/lightning/bolts/blob/c562d91ace0e95bec3c6f8758969eaf3627f23c8/04-onion-routing.md?plain=1#L253",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 309,
  "hidden": false,
  "trust_level": 0,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": "Github link was replaced with a permanent link",
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}