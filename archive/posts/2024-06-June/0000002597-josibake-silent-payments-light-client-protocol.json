{
  "id": 2597,
  "name": "josie",
  "username": "josibake",
  "avatar_template": "/user_avatar/delvingbitcoin.org/josibake/{size}/83_2.png",
  "created_at": "2024-06-02T09:21:55.991Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"setavenger\" data-post=\"9\" data-topic=\"891\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/setavenger/48/573_2.png\" class=\"avatar\"> setavenger:</div>\n<blockquote>\n<p>Is there any noticeable overhead created by converting on the client side?</p>\n</blockquote>\n</aside>\n<p>The two benefits I see for providing outputs grouped by <span class=\"math\">txid</span> are reduced bandwidth and less computation for the client in the event an output is found</p>\n<h2><a name=\"bandwidth-1\" class=\"anchor\" href=\"#bandwidth-1\"></a>Bandwidth</h2>\n<p>Outputs coming from the same transaction will all have the same <span class=\"math\">txid</span>, so we can reduce the data sent to the client by <span class=\"math\">(n_{outputs} -1)\\cdot n_{transactions} \\cdot 32</span> bytes. Similarly, it looks like there are a few more repeated fields for each UTXO, namely blockhash and block number<sup class=\"footnote-ref\"><a href=\"#footnote-2597-1\" id=\"footnote-ref-2597-1\">[1]</a></sup>. So the final result would be something like <code>block_hash: { txid1: [output1, output2..], txid2: [output3, output4..] }</code></p>\n<h2><a name=\"computation-2\" class=\"anchor\" href=\"#computation-2\"></a>Computation</h2>\n<p>Once an output is found and the simplified UTXOs have been fetched, assuming outputs are not grouped by <span class=\"math\">txid</span>, a client would need to do the following:</p>\n<ol>\n<li>Verify <span class=\"math\">SPK_{k=0}</span> is not a false positive by finding it in the list and removing it</li>\n<li>Create <span class=\"math\">SPK_{k=1}</span> and check the entire list</li>\n<li>Repeat with <span class=\"math\">k++</span> every time an output is found</li>\n</ol>\n<p>Whereas if the list is grouped by <span class=\"math\">txid</span> (either by the client or the server), the client finds the <span class=\"math\">txid</span> in step one and iterates over the outputs corresponding to <span class=\"math\">txid</span> vs outputs for the entire block. This is arguably only a small improvement, but server side grouping means we can save bandwidth for the client and, as <a class=\"mention\" href=\"/u/cygnet3\">@cygnet3</a> points out, if every client will end up grouping it seems better to do the work one time on the server.</p>\n<hr class=\"footnotes-sep\">\n\n<ol class=\"footnotes-list\">\n<li id=\"footnote-2597-1\" class=\"footnote-item\"><p>It\u2019s not immediately clear to what the additional fields are for, i.e. block hash, block number, timestamp. In the case of block info, seems like we could use block hash or block number, depending on what the wallet needs it for? <a href=\"#footnote-ref-2597-1\" class=\"footnote-backref\">\u21a9\ufe0e</a></p>\n</li>\n</ol>",
  "post_number": 10,
  "post_type": 1,
  "posts_count": 16,
  "updated_at": "2024-06-02T09:25:01.067Z",
  "reply_count": 1,
  "reply_to_post_number": 9,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 28,
  "readers_count": 27,
  "score": 10.6,
  "yours": false,
  "topic_id": 891,
  "topic_slug": "silent-payments-light-client-protocol",
  "topic_title": "Silent Payments: Light Client Protocol",
  "topic_html_title": "Silent Payments: Light Client Protocol",
  "category_id": 12,
  "display_username": "josie",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"setavenger, post:9, topic:891\"]\nIs there any noticeable overhead created by converting on the client side?\n[/quote]\n\nThe two benefits I see for providing outputs grouped by $txid$ are reduced bandwidth and less computation for the client in the event an output is found\n\n## Bandwidth\n\nOutputs coming from the same transaction will all have the same $txid$, so we can reduce the data sent to the client by $(n_{outputs} -1)\\cdot n_{transactions} \\cdot 32$ bytes. Similarly, it looks like there are a few more repeated fields for each UTXO, namely blockhash and block number[^1]. So the final result would be something like `block_hash: { txid1: [output1, output2..], txid2: [output3, output4..] }`\n\n## Computation\n\nOnce an output is found and the simplified UTXOs have been fetched, assuming outputs are not grouped by $txid$, a client would need to do the following:\n\n1. Verify $SPK_{k=0}$ is not a false positive by finding it in the list and removing it\n2. Create $SPK_{k=1}$ and check the entire list\n3. Repeat with $k++$ every time an output is found\n\nWhereas if the list is grouped by $txid$ (either by the client or the server), the client finds the $txid$ in step one and iterates over the outputs corresponding to $txid$ vs outputs for the entire block. This is arguably only a small improvement, but server side grouping means we can save bandwidth for the client and, as @cygnet3 points out, if every client will end up grouping it seems better to do the work one time on the server.\n\n[^1]: It's not immediately clear to what the additional fields are for, i.e. block hash, block number, timestamp. In the case of block info, seems like we could use block hash or block number, depending on what the wallet needs it for?",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 92,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "The two benefits I see for providing outputs grouped by txid are reduced bandwidth and less computation for the client in the event an output is found \n<a name=\"bandwidth-1\" class=\"anchor\" href=\"#bandwidth-1\"></a>Bandwidth\nOutputs coming from the same transaction will all have the same txid, so we can reduce the data sent to the client by (n_{outputs} -1)\\cd&hellip;",
  "truncated": true,
  "post_url": "/t/silent-payments-light-client-protocol/891/10",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}