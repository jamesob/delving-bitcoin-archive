{
  "id": 2810,
  "name": "Bastien Teinturier",
  "username": "t-bast",
  "avatar_template": "/user_avatar/delvingbitcoin.org/t-bast/{size}/98_2.png",
  "created_at": "2024-06-27T07:06:39.378Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"roasbeef\" data-post=\"4\" data-topic=\"991\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/roasbeef/48/160_2.png\" class=\"avatar\"> roasbeef:</div>\n<blockquote>\n<p>Since then, based on <a href=\"https://github.com/ACINQ/eclair/pull/2843#discussion_r1544662941\">comments like this</a>, it appears there\u2019s a sort of gentleman\u2019s agreement to <em>not</em> expose an encoding format for BOLT12 invoices. Has your thinking here evolved since May?</p>\n</blockquote>\n</aside>\n<p>I\u2019d rather not expose Bolt 12 invoices and use the full offer flow every time, but if I had to choose between adding blinded paths to Bolt 11 invoices or exposing Bolt 12 invoice, I\u2019d rather expose Bolt 12 invoices. This requires less code and less additional spec work.</p>\n<p>To be honest, I don\u2019t think we should waste time with such intermediate steps (that will need to be maintained for a long time, create technical debt and confusion for users). I find it more useful to focus that time on shipping Bolt 12 code, but that\u2019s just my opinion.</p>\n<aside class=\"quote no-group\" data-username=\"ellemouton\" data-post=\"3\" data-topic=\"991\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ellemouton/48/662_2.png\" class=\"avatar\"> ellemouton:</div>\n<blockquote>\n<p>users who are not aware of the new addition will get a useful error message from the parser saying \u201cthe invoice uses unknown required feature bit x\u201d which will then give the user an idea of what has gone wrong.</p>\n</blockquote>\n</aside>\n<p>I don\u2019t think this is very useful\u2026I don\u2019t believe this will prompt users to ask wallet developers to implement stuff, and the only result of that is a bad UX where users scan a QR code and they\u2019re told it doesn\u2019t work.</p>\n<aside class=\"quote no-group\" data-username=\"roasbeef\" data-post=\"4\" data-topic=\"991\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/roasbeef/48/160_2.png\" class=\"avatar\"> roasbeef:</div>\n<blockquote>\n<p>Ignoring any user-facing wallet uptake (implications re QR code encoding and multi-formats), there exist fully programmatic flows like the L402 protocol (or sub-swap services like Loop) that can use the BOLT 11 extensions to leverage blinded paths and all their benefits. I think blinded paths are super interesting in the context of sub-swap services as they\u2019d allow a receiver to curate the route to them, potentially picking certain routes they know to be lower fee or more reliable.</p>\n</blockquote>\n</aside>\n<p>I haven\u2019t looked at the details in a while, but at a high-level it seems to me that L402 would benefit a lot from using offers rather than hacking blinded paths on top of Bolt 11 invoices? That requires more work to upgrade L402, but I\u2019m a strong believer that doing short-term intermediate \u201chacks\u201d is always a waste of time in the long term because of the maintenance cost.</p>",
  "post_number": 5,
  "post_type": 1,
  "posts_count": 7,
  "updated_at": "2024-06-27T07:06:39.378Z",
  "reply_count": 1,
  "reply_to_post_number": null,
  "quote_count": 2,
  "incoming_link_count": 68,
  "reads": 27,
  "readers_count": 26,
  "score": 350.4,
  "yours": false,
  "topic_id": 991,
  "topic_slug": "blip-bolt-11-invoice-blinded-path-tagged-field",
  "topic_title": "bLIP: BOLT 11 Invoice Blinded Path Tagged Field",
  "topic_html_title": "bLIP: BOLT 11 Invoice Blinded Path Tagged Field",
  "category_id": 7,
  "display_username": "Bastien Teinturier",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"roasbeef, post:4, topic:991\"]\nSince then, based on [comments like this](https://github.com/ACINQ/eclair/pull/2843#discussion_r1544662941), it appears there\u2019s a sort of gentleman\u2019s agreement to *not* expose an encoding format for BOLT12 invoices. Has your thinking here evolved since May?\n[/quote]\n\nI'd rather not expose Bolt 12 invoices and use the full offer flow every time, but if I had to choose between adding blinded paths to Bolt 11 invoices or exposing Bolt 12 invoice, I'd rather expose Bolt 12 invoices. This requires less code and less additional spec work.\n\nTo be honest, I don't think we should waste time with such intermediate steps (that will need to be maintained for a long time, create technical debt and confusion for users). I find it more useful to focus that time on shipping Bolt 12 code, but that's just my opinion.\n\n[quote=\"ellemouton, post:3, topic:991\"]\nusers who are not aware of the new addition will get a useful error message from the parser saying \u201cthe invoice uses unknown required feature bit x\u201d which will then give the user an idea of what has gone wrong.\n[/quote]\n\nI don't think this is very useful...I don't believe this will prompt users to ask wallet developers to implement stuff, and the only result of that is a bad UX where users scan a QR code and they're told it doesn't work.\n\n[quote=\"roasbeef, post:4, topic:991\"]\nIgnoring any user-facing wallet uptake (implications re QR code encoding and multi-formats), there exist fully programmatic flows like the L402 protocol (or sub-swap services like Loop) that can use the BOLT 11 extensions to leverage blinded paths and all their benefits. I think blinded paths are super interesting in the context of sub-swap services as they\u2019d allow a receiver to curate the route to them, potentially picking certain routes they know to be lower fee or more reliable.\n[/quote]\n\nI haven't looked at the details in a while, but at a high-level it seems to me that L402 would benefit a lot from using offers rather than hacking blinded paths on top of Bolt 11 invoices? That requires more work to upgrade L402, but I'm a strong believer that doing short-term intermediate \"hacks\" is always a waste of time in the long term because of the maintenance cost.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 101,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "I\u2019d rather not expose Bolt 12 invoices and use the full offer flow every time, but if I had to choose between adding blinded paths to Bolt 11 invoices or exposing Bolt 12 invoice, I\u2019d rather expose Bolt 12 invoices. This requires less code and less additional spec work. \nTo be honest, I don\u2019t think&hellip;",
  "truncated": true,
  "post_url": "/t/blip-bolt-11-invoice-blinded-path-tagged-field/991/5",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}