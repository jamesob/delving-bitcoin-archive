{
  "id": 2773,
  "name": "Andrew Toth",
  "username": "andrewtoth",
  "avatar_template": "/user_avatar/delvingbitcoin.org/andrewtoth/{size}/576_2.png",
  "created_at": "2024-06-20T18:34:01.718Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"josibake\" data-post=\"23\" data-topic=\"877\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/josibake/48/83_2.png\" class=\"avatar\"> josibake:</div>\n<blockquote>\n<p><code>SINGLE | ACP</code></p>\n<ul>\n<li>Signers exchange shares and A generates the correct script from A and B shares, signs with <code>SINGLE | ACP</code> where <code>SINGLE</code> commits to the output of the generated script</li>\n<li>B verifies the output is correct and signs with <code>ALL</code></li>\n</ul>\n</blockquote>\n</aside>\n<p>Here A has signed their input, which can then be broadcast by itself or with another input attached by an outside observer to meet the correct amount, and the output will go to an invalid destination. Regardless of whether B signs with ALL or not, the outside observer can strip B and add their own input or not. Therefore it is insecure for A to sign at all with ACP. Am I missing something?</p>\n<aside class=\"quote no-group\" data-username=\"josibake\" data-post=\"23\" data-topic=\"877\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/josibake/48/83_2.png\" class=\"avatar\"> josibake:</div>\n<blockquote>\n<p>I think it\u2019s sufficient to say a silent payments signer must:</p>\n<ol>\n<li>Never use <code>ACP</code> without fully trusting the other signers</li>\n</ol>\n</blockquote>\n</aside>\n<p>Even with trusting the other signers, an outside observer can strip out your ACP inputs and add their own to them right?</p>",
  "post_number": 24,
  "post_type": 1,
  "updated_at": "2024-06-20T20:29:14.700Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 6,
  "readers_count": 5,
  "score": 1.0,
  "yours": false,
  "topic_id": 877,
  "topic_slug": "bip352-psbt-support",
  "topic_title": "BIP352: PSBT support",
  "topic_html_title": "BIP352: PSBT support",
  "category_id": 12,
  "display_username": "Andrew Toth",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 3,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"josibake, post:23, topic:877\"]\n`SINGLE | ACP`\n\n* Signers exchange shares and A generates the correct script from A and B shares, signs with `SINGLE | ACP` where `SINGLE` commits to the output of the generated script\n* B verifies the output is correct and signs with `ALL`\n[/quote]\n\nHere A has signed their input, which can then be broadcast by itself or with another input attached by an outside observer to meet the correct amount, and the output will go to an invalid destination. Regardless of whether B signs with ALL or not, the outside observer can strip B and add their own input or not. Therefore it is insecure for A to sign at all with ACP. Am I missing something?\n\n[quote=\"josibake, post:23, topic:877\"]\nI think it\u2019s sufficient to say a silent payments signer must:\n\n1. Never use `ACP` without fully trusting the other signers\n[/quote]\n\nEven with trusting the other signers, an outside observer can strip out your ACP inputs and add their own to them right?",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 438,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}