{
  "id": 2777,
  "name": "Andrew Toth",
  "username": "andrewtoth",
  "avatar_template": "/user_avatar/delvingbitcoin.org/andrewtoth/{size}/576_2.png",
  "created_at": "2024-06-21T13:35:34.305Z",
  "cooked": "<aside class=\"quote no-group quote-modified\" data-username=\"josibake\" data-post=\"23\" data-topic=\"877\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/josibake/48/83_2.png\" class=\"avatar\"> josibake:</div>\n<blockquote>\n<aside class=\"quote no-group\" data-username=\"andrewtoth\" data-post=\"22\" data-topic=\"877\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/andrewtoth/48/576_2.png\" class=\"avatar\"> andrewtoth:</div>\n<blockquote>\n<p>which for silent payment aware signers they would check for any <code>ACP</code> on any inputs and fail if there are any silent payment outputs.</p>\n</blockquote>\n</aside>\n<p>I don\u2019t think a silent payment signer cares if anyone else has used <code>ACP</code>.</p>\n</blockquote>\n</aside>\n<p>I think I see the confusion. What I meant was the silent payment aware signers must check for any <code>ACP</code> on any inputs <em>they will sign for</em> and fail if there are any silent payment outputs. If all signers are following the BIP spec, then there should not be any inputs signed with <code>ACP</code> anyways. Actually, the signer should probably fail if there is any sighash flag other than <code>ALL</code> if there are any silent payment outputs.</p>\n<aside class=\"quote no-group quote-modified\" data-username=\"josibake\" data-post=\"23\" data-topic=\"877\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/josibake/48/83_2.png\" class=\"avatar\"> josibake:</div>\n<blockquote>\n<aside class=\"quote no-group\" data-username=\"andrewtoth\" data-post=\"22\" data-topic=\"877\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/andrewtoth/48/576_2.png\" class=\"avatar\"> andrewtoth:</div>\n<blockquote>\n<p>How about adding the shares and proofs as globals, and the key data would be the scan key followed by the set of input outpoints instead of input indexes? That would let the psbt change input order and would not duplicate the shares and proofs for each input.</p>\n</blockquote>\n</aside>\n<p>I don\u2019t have a strong opinion here. If we have nnn inputs covered by the same proof, this would be n\\cdot 36 + (33 + 64)n\u22c536+(33+64)n\\cdot 36 + (33 + 64) bytes vs n\\cdot (33 + 64)n\u22c5(33+64)n\\cdot (33 + 64) bytes. So better in some cases, worse in others?</p>\n</blockquote>\n</aside>\n<p>One other possibility that could simplify things. If a signer is able to sign for all inputs, they could add a global share and proof covering all inputs with the key data being the scan key. If a signer is unable to sign for all inputs, then they add a per input share and proof covering only that input as described by <a class=\"mention\" href=\"/u/achow101\">@achow101</a> above.\nThis keeps the key data clean and optimizes for the common scenario of a single signer wallet using a hardware signing device.</p>",
  "post_number": 26,
  "post_type": 1,
  "updated_at": "2024-06-21T13:41:15.741Z",
  "reply_count": 1,
  "reply_to_post_number": 25,
  "quote_count": 2,
  "incoming_link_count": 0,
  "reads": 8,
  "readers_count": 7,
  "score": 6.6,
  "yours": false,
  "topic_id": 877,
  "topic_slug": "bip352-psbt-support",
  "topic_title": "BIP352: PSBT support",
  "topic_html_title": "BIP352: PSBT support",
  "category_id": 12,
  "display_username": "Andrew Toth",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "username": "josibake",
    "name": "josie",
    "avatar_template": "/user_avatar/delvingbitcoin.org/josibake/{size}/83_2.png"
  },
  "bookmarked": false,
  "raw": "[quote=\"josibake, post:23, topic:877\"]\n[quote=\"andrewtoth, post:22, topic:877\"]\nwhich for silent payment aware signers they would check for any `ACP` on any inputs and fail if there are any silent payment outputs.\n[/quote]\n\nI don\u2019t think a silent payment signer cares if anyone else has used `ACP`.\n[/quote]\n\nI think I see the confusion. What I meant was the silent payment aware signers must check for any `ACP` on any inputs *they will sign for* and fail if there are any silent payment outputs. If all signers are following the BIP spec, then there should not be any inputs signed with `ACP` anyways. Actually, the signer should probably fail if there is any sighash flag other than `ALL` if there are any silent payment outputs.\n\n[quote=\"josibake, post:23, topic:877\"]\n[quote=\"andrewtoth, post:22, topic:877\"]\nHow about adding the shares and proofs as globals, and the key data would be the scan key followed by the set of input outpoints instead of input indexes? That would let the psbt change input order and would not duplicate the shares and proofs for each input.\n[/quote]\n\nI don\u2019t have a strong opinion here. If we have nnn inputs covered by the same proof, this would be n\\cdot 36 + (33 + 64)n\u22c536+(33+64)n\\cdot 36 + (33 + 64) bytes vs n\\cdot (33 + 64)n\u22c5(33+64)n\\cdot (33 + 64) bytes. So better in some cases, worse in others?\n[/quote]\n\nOne other possibility that could simplify things. If a signer is able to sign for all inputs, they could add a global share and proof covering all inputs with the key data being the scan key. If a signer is unable to sign for all inputs, then they add a per input share and proof covering only that input as described by @achow101 above.\nThis keeps the key data clean and optimizes for the common scenario of a single signer wallet using a hardware signing device.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 438,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}