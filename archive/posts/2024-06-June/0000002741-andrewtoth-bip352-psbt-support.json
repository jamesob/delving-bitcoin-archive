{
  "id": 2741,
  "name": "Andrew Toth",
  "username": "andrewtoth",
  "avatar_template": "/user_avatar/delvingbitcoin.org/andrewtoth/{size}/576_2.png",
  "created_at": "2024-06-18T15:28:41.613Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"josibake\" data-post=\"21\" data-topic=\"877\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/josibake/48/83_2.png\" class=\"avatar\"> josibake:</div>\n<blockquote>\n<p>I don\u2019t see how this situation would be possible, so long as we require silent payments aware signers to never use <code>ALL | ACP</code>, right?</p>\n</blockquote>\n</aside>\n<p>Right, we need to require silent payments aware signers to never use <code>ACP</code> at all if there are any silent payment outputs present. If there are no silent payment outputs they can sign with whatever sighash they wish. I suppose we don\u2019t need to track that state for Constructor and Updater, since in BIP174 the Signer has the check:</p>\n<blockquote>\n<ul>\n<li>If a sighash type is provided, the signer must check that the sighash is acceptable. If unacceptable, they must fail.</li>\n</ul>\n</blockquote>\n<p>which for silent payment aware signers they would check for any <code>ACP</code> on any eligible inputs and fail if there are any silent payment outputs.</p>\n<p>However, the next rule for Signer needs to be modified for silent payment aware signers:</p>\n<blockquote>\n<ul>\n<li>If a sighash type is not provided, the signer should sign using SIGHASH_ALL, but may use any sighash type they wish.</li>\n</ul>\n</blockquote>\n<p>should be:</p>\n<blockquote>\n<ul>\n<li>If a sighash type is not provided and there are silent payment outputs present, the signer must sign using SIGHASH_ALL. If a sighash type is not provided and there are no silent payment outputs present, the signer should sign using SIGHASH_ALL, but may use any sighash type they wish.</li>\n</ul>\n</blockquote>\n<aside class=\"quote no-group\" data-username=\"josibake\" data-post=\"21\" data-topic=\"877\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/josibake/48/83_2.png\" class=\"avatar\"> josibake:</div>\n<blockquote>\n<p>One alternative is to allow the proof to be duplicated for inputs belong to the same signer.</p>\n</blockquote>\n</aside>\n<p>How about adding the shares and proofs as globals, and the key data would be the scan key followed by the set of input outpoints instead of input indexes? That would let the psbt change input order and would not duplicate the shares and proofs for each input.</p>\n<aside class=\"quote no-group\" data-username=\"josibake\" data-post=\"21\" data-topic=\"877\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/josibake/48/83_2.png\" class=\"avatar\"> josibake:</div>\n<blockquote>\n<p>and more work for the verifier.</p>\n</blockquote>\n</aside>\n<p>This would be less work for the verifier too, right? Less proofs to verify.</p>",
  "post_number": 22,
  "post_type": 1,
  "updated_at": "2024-06-18T15:28:41.613Z",
  "reply_count": 0,
  "reply_to_post_number": 21,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 1,
  "readers_count": 0,
  "score": 0,
  "yours": false,
  "topic_id": 877,
  "topic_slug": "bip352-psbt-support",
  "topic_title": "BIP352: PSBT support",
  "topic_html_title": "BIP352: PSBT support",
  "category_id": 12,
  "display_username": "Andrew Toth",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"josibake, post:21, topic:877\"]\nI don\u2019t see how this situation would be possible, so long as we require silent payments aware signers to never use `ALL | ACP`, right?\n[/quote]\n\nRight, we need to require silent payments aware signers to never use `ACP` at all if there are any silent payment outputs present. If there are no silent payment outputs they can sign with whatever sighash they wish. I suppose we don't need to track that state for Constructor and Updater, since in BIP174 the Signer has the check:\n> * If a sighash type is provided, the signer must check that the sighash is acceptable. If unacceptable, they must fail.\n\nwhich for silent payment aware signers they would check for any `ACP` on any eligible inputs and fail if there are any silent payment outputs.\n\nHowever, the next rule for Signer needs to be modified for silent payment aware signers:\n> * If a sighash type is not provided, the signer should sign using SIGHASH_ALL, but may use any sighash type they wish.\n\nshould be:\n\n> * If a sighash type is not provided and there are silent payment outputs present, the signer must sign using SIGHASH_ALL. If a sighash type is not provided and there are no silent payment outputs present, the signer should sign using SIGHASH_ALL, but may use any sighash type they wish.\n\n[quote=\"josibake, post:21, topic:877\"]\nOne alternative is to allow the proof to be duplicated for inputs belong to the same signer.\n[/quote]\n\nHow about adding the shares and proofs as globals, and the key data would be the scan key followed by the set of input outpoints instead of input indexes? That would let the psbt change input order and would not duplicate the shares and proofs for each input.\n\n[quote=\"josibake, post:21, topic:877\"]\nand more work for the verifier.\n[/quote]\n\nThis would be less work for the verifier too, right? Less proofs to verify.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 438,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}