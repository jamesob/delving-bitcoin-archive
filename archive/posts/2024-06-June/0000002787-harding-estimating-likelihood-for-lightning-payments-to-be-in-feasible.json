{
  "id": 2787,
  "name": "David A. Harding",
  "username": "harding",
  "avatar_template": "/user_avatar/delvingbitcoin.org/harding/{size}/6_2.png",
  "created_at": "2024-06-25T19:29:50.980Z",
  "cooked": "<p>Thanks for this research, Rene!  I was wondering if this is something you imagine being incorporated into user and business software.  For example:</p>\n<ul>\n<li>\n<p>Businessperson Bob typically receives payments up to 0.05 BTC.  His node management software occasionally runs a background job that calculates the average likelihood of feasibility of a 0.05 BTC payment from every node on the network to his node.  The node management software also looks at current liquidity advertisements and simulates what would happen if Bob had a channel with the advertiser, calculating a hypothetical alternative average likelihood of feasibility.  If the hypothetical alternative with a new channel has a significantly higher average likelihood of feasibility, Bob\u2019s node management software automatically accepts the liquidity advertisement and opens the new channel.</p>\n</li>\n<li>\n<p>User Alice makes a regular monthly bill payment set up through BOLT12 offers.  She\u2019s configures her wallet to start to try paying 5 business days before the due date.  The first try and first few automatic retries don\u2019t succeed.  Before her wallet marks the payment attempt as a failure or takes other steps, it checks the likelihood of feasibility.  If it\u2019s low but still practical, it will keep retrying at lengthening intervals for another few hours or days before finally marking the payment attempt as a failure.</p>\n</li>\n</ul>",
  "post_number": 3,
  "post_type": 1,
  "updated_at": "2024-06-25T19:29:50.980Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 5,
  "readers_count": 4,
  "score": 0.8,
  "yours": false,
  "topic_id": 973,
  "topic_slug": "estimating-likelihood-for-lightning-payments-to-be-in-feasible",
  "topic_title": "Estimating Likelihood for Lightning Payments to be (in)feasible",
  "topic_html_title": "Estimating Likelihood for Lightning Payments to be (in)feasible",
  "category_id": 7,
  "display_username": "David A. Harding",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Thanks for this research, Rene!  I was wondering if this is something you imagine being incorporated into user and business software.  For example:\n\n- Businessperson Bob typically receives payments up to 0.05 BTC.  His node management software occasionally runs a background job that calculates the average likelihood of feasibility of a 0.05 BTC payment from every node on the network to his node.  The node management software also looks at current liquidity advertisements and simulates what would happen if Bob had a channel with the advertiser, calculating a hypothetical alternative average likelihood of feasibility.  If the hypothetical alternative with a new channel has a significantly higher average likelihood of feasibility, Bob's node management software automatically accepts the liquidity advertisement and opens the new channel.\n\n- User Alice makes a regular monthly bill payment set up through BOLT12 offers.  She's configures her wallet to start to try paying 5 business days before the due date.  The first try and first few automatic retries don't succeed.  Before her wallet marks the payment attempt as a failure or takes other steps, it checks the likelihood of feasibility.  If it's low but still practical, it will keep retrying at lengthening intervals for another few hours or days before finally marking the payment attempt as a failure.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 6,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}