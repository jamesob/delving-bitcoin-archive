{
  "id": 2669,
  "name": "",
  "username": "setavenger",
  "avatar_template": "/user_avatar/delvingbitcoin.org/setavenger/{size}/573_2.png",
  "created_at": "2024-06-08T19:50:22.585Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"harding\" data-post=\"12\" data-topic=\"891\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/harding/48/6_2.png\" class=\"avatar\"> harding:</div>\n<blockquote>\n<p>I\u2019m concerned clients only performing step 5 (fetching transaction data) in response to untrusted data from step 1 (tweaks) and step 3 (pubkeys). If a client fetches all three pieces of data from the same server (or from different servers that are colluding), the server can potentially unmask users in step five by lying in steps 1 and 3.</p>\n</blockquote>\n</aside>\n<p>Thanks for raising this issue!</p>\n<aside class=\"quote no-group\" data-username=\"harding\" data-post=\"12\" data-topic=\"891\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/harding/48/6_2.png\" class=\"avatar\"> harding:</div>\n<blockquote>\n<p>What I think is best is similar to what Wasabi does with its custom BIP158 implementation:</p>\n<ol>\n<li>Client downloads untrusted tweaks and filter from the server (ideally using something like an ephemeral Tor connection)</li>\n<li>On match, client downloads the corresponding full block from a random full node (ideally using a different network identity, such as a different ephemeral Tor connection)</li>\n</ol>\n</blockquote>\n</aside>\n<p>While I do agree with the general approach, I\u2019m not sure downloading tweak data via tor will be feasible for everyone. I think an always/often-on scanning server with no hard time constraints can do that. Using mobile this might be a bit tricky.</p>\n<aside class=\"quote no-group\" data-username=\"josibake\" data-post=\"15\" data-topic=\"891\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/josibake/48/83_2.png\" class=\"avatar\"> josibake:</div>\n<blockquote>\n<p>You\u2019ve convinced me that always using the full block is best, especially taking into consideration the savings from not downloading the full block is minor optimization w.r.t expected light client payment activity.</p>\n</blockquote>\n</aside>\n<p>Would like to run a benchmark to see what the actual difference is w.r.t bandwidth. I can imagine cases where a wallet for donations might receive frequent payments leading to several blocks needing to be downloaded.\nIf the actual bandwidth savings are low, going with blocks is a good way to go.</p>",
  "post_number": 16,
  "post_type": 1,
  "updated_at": "2024-06-08T19:50:22.585Z",
  "reply_count": 0,
  "reply_to_post_number": 15,
  "quote_count": 2,
  "incoming_link_count": 0,
  "reads": 6,
  "readers_count": 5,
  "score": 1.2,
  "yours": false,
  "topic_id": 891,
  "topic_slug": "silent-payments-light-client-protocol",
  "topic_title": "Silent Payments: Light Client Protocol",
  "topic_html_title": "Silent Payments: Light Client Protocol",
  "category_id": 12,
  "display_username": "",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"harding, post:12, topic:891\"]\nI\u2019m concerned clients only performing step 5 (fetching transaction data) in response to untrusted data from step 1 (tweaks) and step 3 (pubkeys). If a client fetches all three pieces of data from the same server (or from different servers that are colluding), the server can potentially unmask users in step five by lying in steps 1 and 3.\n[/quote]\n\nThanks for raising this issue!\n\n[quote=\"harding, post:12, topic:891\"]\nWhat I think is best is similar to what Wasabi does with its custom BIP158 implementation:\n\n1. Client downloads untrusted tweaks and filter from the server (ideally using something like an ephemeral Tor connection)\n2. On match, client downloads the corresponding full block from a random full node (ideally using a different network identity, such as a different ephemeral Tor connection)\n[/quote]\n\nWhile I do agree with the general approach, I'm not sure downloading tweak data via tor will be feasible for everyone. I think an always/often-on scanning server with no hard time constraints can do that. Using mobile this might be a bit tricky. \n\n[quote=\"josibake, post:15, topic:891\"]\nYou\u2019ve convinced me that always using the full block is best, especially taking into consideration the savings from not downloading the full block is minor optimization w.r.t expected light client payment activity.\n[/quote]\n\nWould like to run a benchmark to see what the actual difference is w.r.t bandwidth. I can imagine cases where a wallet for donations might receive frequent payments leading to several blocks needing to be downloaded. \nIf the actual bandwidth savings are low, going with blocks is a good way to go.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 435,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}