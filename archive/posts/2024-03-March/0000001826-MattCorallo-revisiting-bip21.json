{
  "id": 1826,
  "name": "Matt Corallo",
  "username": "MattCorallo",
  "avatar_template": "/letter_avatar_proxy/v4/letter/m/e47c2d/{size}.png",
  "created_at": "2024-03-07T15:02:09.848Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"josibake\" data-post=\"18\" data-topic=\"630\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/josibake/48/83_2.png\" class=\"avatar\"> josibake:</div>\n<blockquote>\n<p>I\u2019m not sure where you\u2019re getting two chars from?</p>\n</blockquote>\n</aside>\n<p>I was comparing hrp=\u2026 to \u2026=, which saves only a few chars, depending on the length of the hrp (two in the case of silent payments).</p>\n<aside class=\"quote no-group\" data-username=\"josibake\" data-post=\"18\" data-topic=\"630\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/josibake/48/83_2.png\" class=\"avatar\"> josibake:</div>\n<blockquote>\n<p>My point was about removing the ambiguity about what goes in the root vs what goes in the keys. Parsing the URI simplifies to \u201clook for your preferred HRP or KV protocol,\u201d with all the other parsing remaining the same.</p>\n</blockquote>\n</aside>\n<p>I don\u2019t see how \u201cwhat goes in the root vs what goes in the keys/values\u201d is relevant? That is addressed with the new (suggested) wording in the BIP 21 change PR: \u201cFuture address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new addres types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\u201d</p>\n<p>There\u2019s explicitly only one place to look for any given address type given that wording, never two. Whether its a K/V location or just a URI parameter with no K/V doesn\u2019t impact that.</p>\n<aside class=\"quote no-group\" data-username=\"josibake\" data-post=\"18\" data-topic=\"630\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/josibake/48/83_2.png\" class=\"avatar\"> josibake:</div>\n<blockquote>\n<p>I\u2019m not. My assumption is that it is the best option for the foreseeable future (and already standard across bitcoin and lightning). It also allows us to address the current problem of existing address types that <em>are</em> bech32(m) encoded and <em>don\u2019t</em> have a BIP21 extension key in a simple and efficient manner. We also automatically support any new address type that is bech32(m) encoded. For everything else we can keep using key-value pairs.</p>\n</blockquote>\n</aside>\n<p>I don\u2019t believe there are any address types which are not \u201ceither a base64 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address\u201d <em>and</em> don\u2019t have an existing BIP21 extension key. The ship has sailed for BOLT 11 lightning payments, those will always be K/V (with the \u201clightning\u201d key), we can\u2019t practically ever change that. The only question is what to do for Silent Payments and BOLT12. We could do K/V or not K/V, it doesn\u2019t matter <em>that</em> much, but K/V fits a bit nicer into existing code that parses all the URI parameters into K/V pairs (cause there is currently nothing that uses BIP 21 without all parameters being K/V pairs, AFAIK), but wastes a few bytes for it.</p>",
  "post_number": 19,
  "post_type": 1,
  "updated_at": "2024-03-07T15:02:09.848Z",
  "reply_count": 0,
  "reply_to_post_number": 18,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 2,
  "readers_count": 1,
  "score": 0,
  "yours": false,
  "topic_id": 630,
  "topic_slug": "revisiting-bip21",
  "topic_title": "Revisiting BIP21",
  "topic_html_title": "Revisiting BIP21",
  "category_id": 8,
  "display_username": "Matt Corallo",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"josibake, post:18, topic:630\"]\nI\u2019m not sure where you\u2019re getting two chars from?\n[/quote]\n\nI was comparing hrp=... to ...=, which saves only a few chars, depending on the length of the hrp (two in the case of silent payments).\n\n[quote=\"josibake, post:18, topic:630\"]\nMy point was about removing the ambiguity about what goes in the root vs what goes in the keys. Parsing the URI simplifies to \u201clook for your preferred HRP or KV protocol,\u201d with all the other parsing remaining the same.\n[/quote]\n\nI don't see how \"what goes in the root vs what goes in the keys/values\" is relevant? That is addressed with the new (suggested) wording in the BIP 21 change PR: \"Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new addres types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\"\n\nThere's explicitly only one place to look for any given address type given that wording, never two. Whether its a K/V location or just a URI parameter with no K/V doesn't impact that.\n\n[quote=\"josibake, post:18, topic:630\"]\nI\u2019m not. My assumption is that it is the best option for the foreseeable future (and already standard across bitcoin and lightning). It also allows us to address the current problem of existing address types that *are* bech32(m) encoded and *don\u2019t* have a BIP21 extension key in a simple and efficient manner. We also automatically support any new address type that is bech32(m) encoded. For everything else we can keep using key-value pairs.\n[/quote]\n\nI don't believe there are any address types which are not \"either a base64 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address\" *and* don't have an existing BIP21 extension key. The ship has sailed for BOLT 11 lightning payments, those will always be K/V (with the \"lightning\" key), we can't practically ever change that. The only question is what to do for Silent Payments and BOLT12. We could do K/V or not K/V, it doesn't matter *that* much, but K/V fits a bit nicer into existing code that parses all the URI parameters into K/V pairs (cause there is currently nothing that uses BIP 21 without all parameters being K/V pairs, AFAIK), but wastes a few bytes for it.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 50,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}