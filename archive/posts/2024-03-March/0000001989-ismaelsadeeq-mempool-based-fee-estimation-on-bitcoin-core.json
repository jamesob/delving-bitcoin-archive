{
  "id": 1989,
  "name": "Abubakar Sadiq Ismail",
  "username": "ismaelsadeeq",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ismaelsadeeq/{size}/151_2.png",
  "created_at": "2024-03-22T11:18:26.043Z",
  "cooked": "<p>Thank you for the link I find the ideas very insightful</p>\n<blockquote>\n<p>we can simply choose a feerate that is <code>min(confirmed_estimate,mempool_estimate)</code></p>\n</blockquote>\n<p>The issue with the approach you mentioned is that we will be adapting downwards towards lower estimates, especially in cases where previously mined blocks have lower fee rate. Instead of adapting to the current mempool state, we will be providing a low fee rate estimate.</p>\n<p>I try modifying the current data to give provide <code>min(confirmed_estimate,mempool_estimate)</code>.</p>\n<p>It is underestimating as expected, this will prevent the current overestimating of <code>CBlockPolicyEstimator</code> but the problem of underestimation will still be relevant.</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://delvingbitcoin.org/uploads/default/original/1X/7ff987a5ab1640ff40e8a1cd19552244aeb4a83e.png\" data-download-href=\"https://delvingbitcoin.org/uploads/default/7ff987a5ab1640ff40e8a1cd19552244aeb4a83e\" title=\"Mempool fee estimate vs estimatesmartfee vs Actual block median fee(1)\"><img src=\"https://delvingbitcoin.org/uploads/default/optimized/1X/7ff987a5ab1640ff40e8a1cd19552244aeb4a83e_2_690x426.png\" alt=\"Mempool fee estimate vs estimatesmartfee vs Actual block median fee(1)\" data-base62-sha1=\"ig7fKuNyoXvMAH7W8lY7gbOB0FU\" width=\"690\" height=\"426\" srcset=\"https://delvingbitcoin.org/uploads/default/optimized/1X/7ff987a5ab1640ff40e8a1cd19552244aeb4a83e_2_690x426.png, https://delvingbitcoin.org/uploads/default/original/1X/7ff987a5ab1640ff40e8a1cd19552244aeb4a83e.png 1.5x, https://delvingbitcoin.org/uploads/default/original/1X/7ff987a5ab1640ff40e8a1cd19552244aeb4a83e.png 2x\" data-dominant-color=\"F9F8F9\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Mempool fee estimate vs estimatesmartfee vs Actual block median fee(1)</span><span class=\"informations\">1014\u00d7627 63.4 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p><a href=\"https://docs.google.com/spreadsheets/d/1CMIS3miHLwEc8hmT5ZdZy0TVAxVi61folaoZgJBPQpg/edit?usp=sharing\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Fee Estimation data with threshold - Google Sheets</a></p>\n<blockquote>\n<p><code>mempool_estimate</code> is based on mempool stats like you describe (which has the risk of potentially being gameable and might also break accidentally, such as after a soft fork).</p>\n</blockquote>\n<p>I believe the checks we will have in place could prevent a node from using this estimation mode in the case of soft forks.\nOne scenario where miners could manipulate the mempool and cause congestion is by mining empty blocks or deliberately refraining from mining for some time to congest the mempool and make fee estimate spike up. However, assuming mining is decentralized, this scenario will not hold? Are their other instances ?</p>",
  "post_number": 4,
  "post_type": 1,
  "updated_at": "2024-03-22T11:40:39.031Z",
  "reply_count": 1,
  "reply_to_post_number": 2,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 15,
  "readers_count": 14,
  "score": 8.0,
  "yours": false,
  "topic_id": 703,
  "topic_slug": "mempool-based-fee-estimation-on-bitcoin-core",
  "topic_title": "Mempool Based Fee Estimation on Bitcoin Core",
  "topic_html_title": "Mempool Based Fee Estimation on Bitcoin Core",
  "category_id": 8,
  "display_username": "Abubakar Sadiq Ismail",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 3,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "username": "harding",
    "name": "David A. Harding",
    "avatar_template": "/user_avatar/delvingbitcoin.org/harding/{size}/6_2.png"
  },
  "bookmarked": false,
  "raw": "Thank you for the link I find the ideas very insightful\n\n> we can simply choose a feerate that is `min(confirmed_estimate,mempool_estimate)`\n\nThe issue with the approach you mentioned is that we will be adapting downwards towards lower estimates, especially in cases where previously mined blocks have lower fee rate. Instead of adapting to the current mempool state, we will be providing a low fee rate estimate.\n\nI try modifying the current data to give provide `min(confirmed_estimate,mempool_estimate)`.\n\nIt is underestimating as expected, this will prevent the current overestimating of `CBlockPolicyEstimator` but the problem of underestimation will still be relevant.\n\n\n![Mempool fee estimate vs estimatesmartfee vs Actual block median fee(1)|690x426](upload://ig7fKuNyoXvMAH7W8lY7gbOB0FU.png)\n\n https://docs.google.com/spreadsheets/d/1CMIS3miHLwEc8hmT5ZdZy0TVAxVi61folaoZgJBPQpg/edit?usp=sharing\n\n> `mempool_estimate` is based on mempool stats like you describe (which has the risk of potentially being gameable and might also break accidentally, such as after a soft fork).\n\nI believe the checks we will have in place could prevent a node from using this estimation mode in the case of soft forks. \nOne scenario where miners could manipulate the mempool and cause congestion is by mining empty blocks or deliberately refraining from mining for some time to congest the mempool and make fee estimate spike up. However, assuming mining is decentralized, this scenario will not hold? Are their other instances ?",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 135,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}