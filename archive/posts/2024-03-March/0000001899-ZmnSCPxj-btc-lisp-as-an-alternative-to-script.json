{
  "id": 1899,
  "name": "ZmnSCPxj jxPCSnmZ",
  "username": "ZmnSCPxj",
  "avatar_template": "/letter_avatar_proxy/v4/letter/z/ee7513/{size}.png",
  "created_at": "2024-03-14T22:22:10.229Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"ajtowns\" data-post=\"1\" data-topic=\"682\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ajtowns/48/417_2.png\" class=\"avatar\"> ajtowns:</div>\n<blockquote>\n<p>Adding a <code>strrev</code> function would allow easily swapping a positive number to it\u2019s big-endian representation, which would then make it possible to calculate scalars for use with <code>secp256k1_muladd</code>, which may be useful.</p>\n</blockquote>\n</aside>\n<p>Or just use big-endian order for numbers.</p>\n<aside class=\"quote no-group\" data-username=\"prozacchiwawa\" data-post=\"2\" data-topic=\"682\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/prozacchiwawa/48/431_2.png\" class=\"avatar\"> prozacchiwawa:</div>\n<blockquote>\n<p>If I had one piece of advice, it\u2019s to nail down a great system for mapping high level lisp to low level code for debuggers and interpreters early. Chia is behind in this (hoping to catch up) and it\u2019s probably the biggest negative feedback about chialisp development.</p>\n</blockquote>\n</aside>\n<p>Over in JavaScript-land there is a concept of \u201csource maps\u201d where you indicate the source location of the \u201chigh-level\u201d non-mangled code, based on the equivalent location of the \u201clow-level\u201d mangled code.  Source maps are not included in the mangled code that is delivered to browsers, for obvious reasons. Would a similar concept help?</p>",
  "post_number": 4,
  "post_type": 1,
  "updated_at": "2024-03-14T22:25:27.337Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 2,
  "incoming_link_count": 0,
  "reads": 7,
  "readers_count": 6,
  "score": 1.4,
  "yours": false,
  "topic_id": 682,
  "topic_slug": "btc-lisp-as-an-alternative-to-script",
  "topic_title": "BTC Lisp as an alternative to Script",
  "topic_html_title": "BTC Lisp as an alternative to Script",
  "category_id": 7,
  "display_username": "ZmnSCPxj jxPCSnmZ",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"ajtowns, post:1, topic:682\"]\nAdding a `strrev` function would allow easily swapping a positive number to it\u2019s big-endian representation, which would then make it possible to calculate scalars for use with `secp256k1_muladd`, which may be useful.\n[/quote]\n\nOr just use big-endian order for numbers.\n\n[quote=\"prozacchiwawa, post:2, topic:682\"]\nIf I had one piece of advice, it\u2019s to nail down a great system for mapping high level lisp to low level code for debuggers and interpreters early. Chia is behind in this (hoping to catch up) and it\u2019s probably the biggest negative feedback about chialisp development.\n[/quote]\n\nOver in JavaScript-land there is a concept of \"source maps\" where you indicate the source location of the \"high-level\" non-mangled code, based on the equivalent location of the \"low-level\" mangled code.  Source maps are not included in the mangled code that is delivered to browsers, for obvious reasons. Would a similar concept help?",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 104,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}