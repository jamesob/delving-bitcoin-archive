{
  "id": 1787,
  "name": "Bram Cohen",
  "username": "bramcohen",
  "avatar_template": "/user_avatar/delvingbitcoin.org/bramcohen/{size}/400_2.png",
  "created_at": "2024-03-04T22:45:13.618Z",
  "cooked": "<p>Thanks for doing this writeup. It\u2019s interesting context seeing how someone views Chialisp from the outside.</p>\n<p>The purpose of templates is a cost one: Even mildly complex scripts can become cost prohibitive if they have to be repeated over and over again, and being able to reuse code helps massively with that. There\u2019s also a hook for being able to pull code out of earlier blocks for further cost savings.</p>\n<p>The conditions language and coin format in Chia should be thought of as comparable to Bitcoin\u2019s transaction format, which sits outside of Bitcoin Script but is made reference to from it and has its own set of rules. The particular details of how those are done in Chia have the huge benefit that they allow for implementation of not just covenants but also capabilities which is something you don\u2019t touch on here. Similar benefits could be had in Bitcoin with the addition of opcodes for handling transactions but it may be possible to get away with some extremely aggressive use of OP_CAT.</p>\n<p>I think costs are set so that the string growing attack you mention can\u2019t overflow the capacities of a reasonable machine validating blocks with Chia\u2019s block size, although that may depend on your definition of \u2018reasonable\u2019. There is a cost for string creation which is linear on its length.</p>",
  "post_number": 4,
  "post_type": 1,
  "updated_at": "2024-03-04T22:45:13.618Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 2,
  "reads": 14,
  "readers_count": 13,
  "score": 72.8,
  "yours": false,
  "topic_id": 636,
  "topic_slug": "chia-lisp-for-bitcoiners",
  "topic_title": "Chia Lisp For Bitcoiners",
  "topic_html_title": "Chia Lisp For Bitcoiners",
  "category_id": 7,
  "display_username": "Bram Cohen",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Thanks for doing this writeup. It's interesting context seeing how someone views Chialisp from the outside.\n\nThe purpose of templates is a cost one: Even mildly complex scripts can become cost prohibitive if they have to be repeated over and over again, and being able to reuse code helps massively with that. There's also a hook for being able to pull code out of earlier blocks for further cost savings.\n\nThe conditions language and coin format in Chia should be thought of as comparable to Bitcoin's transaction format, which sits outside of Bitcoin Script but is made reference to from it and has its own set of rules. The particular details of how those are done in Chia have the huge benefit that they allow for implementation of not just covenants but also capabilities which is something you don't touch on here. Similar benefits could be had in Bitcoin with the addition of opcodes for handling transactions but it may be possible to get away with some extremely aggressive use of OP_CAT.\n\nI think costs are set so that the string growing attack you mention can't overflow the capacities of a reasonable machine validating blocks with Chia's block size, although that may depend on your definition of 'reasonable'. There is a cost for string creation which is linear on its length.",
  "actions_summary": [
    {
      "id": 2,
      "count": 2
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 331,
  "hidden": false,
  "trust_level": 0,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 2
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 2,
  "current_user_used_main_reaction": false
}