{
  "id": 1925,
  "name": "Bruno Garcia",
  "username": "bruno",
  "avatar_template": "/user_avatar/delvingbitcoin.org/bruno/{size}/60_2.png",
  "created_at": "2024-03-18T17:53:44.090Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"Chris_Stewart_5\" data-post=\"7\" data-topic=\"640\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/chris_stewart_5/48/296_2.png\" class=\"avatar\"> Chris_Stewart_5:</div>\n<blockquote>\n<p>That said, shameless plug i think the 64bit arithmetic work would be a great place to start with property based testing. Its \u201csimple\u201d in the sense that we are just doing arithmetic. You could even test the existing opcodes (<code>OP_ADD</code>, <code>OP_SUB</code>\u2026) if you don\u2019t want to speculate on this soft fork getting activated, but want to test something straightforward.</p>\n</blockquote>\n</aside>\n<p>Yes, it sounds a good place for property-based testing</p>",
  "post_number": 9,
  "post_type": 1,
  "updated_at": "2024-03-18T17:53:44.090Z",
  "reply_count": 0,
  "reply_to_post_number": 7,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 8,
  "readers_count": 7,
  "score": 1.6,
  "yours": false,
  "topic_id": 640,
  "topic_slug": "property-based-testing-for-bitcoin-core",
  "topic_title": "Property-based testing for Bitcoin Core",
  "topic_html_title": "Property-based testing for Bitcoin Core",
  "category_id": 8,
  "display_username": "Bruno Garcia",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"Chris_Stewart_5, post:7, topic:640, full:true\"]\nThat said, shameless plug i think the 64bit arithmetic work would be a great place to start with property based testing. Its \u201csimple\u201d in the sense that we are just doing arithmetic. You could even test the existing opcodes (`OP_ADD`, `OP_SUB`\u2026) if you don\u2019t want to speculate on this soft fork getting activated, but want to test something straightforward.\n[/quote]\n\nYes, it sounds a good place for property-based testing",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 72,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}