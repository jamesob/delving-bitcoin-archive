{
  "id": 1864,
  "name": "ProofOfKeags",
  "username": "ProofOfKeags",
  "avatar_template": "/user_avatar/delvingbitcoin.org/proofofkeags/{size}/813_2.png",
  "created_at": "2024-03-12T22:42:56.886Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"Chris_Stewart_5\" data-post=\"2\" data-topic=\"615\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/chris_stewart_5/48/296_2.png\" class=\"avatar\"> Chris_Stewart_5:</div>\n<blockquote>\n<p>I don\u2019t think the machine code level is the best place to be introducing a type system. x86 and arm64 don\u2019t have them - why should Script?</p>\n</blockquote>\n</aside>\n<p>While I haven\u2019t yet formed an opinion on whether it would be good for type information to be preserved all the way down to consensus, I would strongly argue that having a Script interpretation operational semantics that is 100% well defined/understood is a Good Thing. Preserving type information all the way to consensus can make script vm implementations more consistent, but it is not the only way.</p>\n<p>For instance, are all opcodes defined for all possible arguments? If they are not defined, are failure semantics well-understood? Of all the places to have a high degree of specificity, the consensus-enforced Script VM <em>is the place</em>.</p>\n<p>I would generally caution against appealing by analogy to silicon ISAs since we are solving a different class of problem here.</p>",
  "post_number": 3,
  "post_type": 1,
  "posts_count": 3,
  "updated_at": "2024-03-12T22:42:56.886Z",
  "reply_count": 0,
  "reply_to_post_number": 2,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 20,
  "readers_count": 19,
  "score": 4.0,
  "yours": false,
  "topic_id": 615,
  "topic_slug": "type-erasure-script",
  "topic_title": "Type Erasure & Script",
  "topic_html_title": "Type Erasure &amp; Script",
  "category_id": 7,
  "display_username": "ProofOfKeags",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"Chris_Stewart_5, post:2, topic:615\"]\nI don\u2019t think the machine code level is the best place to be introducing a type system. x86 and arm64 don\u2019t have them - why should Script?\n[/quote]\n\nWhile I haven't yet formed an opinion on whether it would be good for type information to be preserved all the way down to consensus, I would strongly argue that having a Script interpretation operational semantics that is 100% well defined/understood is a Good Thing. Preserving type information all the way to consensus can make script vm implementations more consistent, but it is not the only way.\n\nFor instance, are all opcodes defined for all possible arguments? If they are not defined, are failure semantics well-understood? Of all the places to have a high degree of specificity, the consensus-enforced Script VM *is the place*.\n\nI would generally caution against appealing by analogy to silicon ISAs since we are solving a different class of problem here.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 138,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "While I haven\u2019t yet formed an opinion on whether it would be good for type information to be preserved all the way down to consensus, I would strongly argue that having a Script interpretation operational semantics that is 100% well defined/understood is a Good Thing. Preserving type information al&hellip;",
  "truncated": true,
  "post_url": "/t/type-erasure-script/615/3",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}