{
  "id": 1806,
  "name": "salvatoshi",
  "username": "salvatoshi",
  "avatar_template": "/user_avatar/delvingbitcoin.org/salvatoshi/{size}/72_2.png",
  "created_at": "2024-03-06T18:17:29.781Z",
  "cooked": "<p>Yes, <a class=\"mention\" href=\"/u/llfourn\">@LLFourn</a> suggested the same on Twitter.\nSince I\u2019m working towards an implementation on Ledger devices, I already have access to the TRNG from the Secure Element, while I would have to implement a secure atomic counter myself if I wanted to use CounterNonceGen.</p>\n<p>Either way, I think the same approach above could be used with CounterNonceGen, just replacing <em>rand_root</em> with the atomic counter.</p>\n<p>Perhaps there are simpler approaches to handle the psbt-level sessions with CounterNonceGen, instead of using the <em>(i,j)</em> hierarchy above; but I think that in order to handle psbt-level signing sessions securely you\u2019d still want to commit to the initial counter and the number of signatures you\u2019ll produce for that psbt as part of the session state indexed by <code>session_id</code>, particularly if you allow multiple psbt signing flows in parallel.\nOverall, I suspect this might be harder to audit in terms of no-nonce-reuse.</p>",
  "post_number": 4,
  "post_type": 1,
  "updated_at": "2024-03-06T18:17:29.781Z",
  "reply_count": 0,
  "reply_to_post_number": 3,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 7,
  "readers_count": 6,
  "score": 1.4,
  "yours": false,
  "topic_id": 626,
  "topic_slug": "state-minimization-in-musig2-signing-sessions",
  "topic_title": "State minimization in MuSig2 signing sessions",
  "topic_html_title": "State minimization in MuSig2 signing sessions",
  "category_id": 8,
  "display_username": "salvatoshi",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "username": "real-or-random",
    "name": "Tim Ruffing",
    "avatar_template": "/user_avatar/delvingbitcoin.org/real-or-random/{size}/413_2.png"
  },
  "bookmarked": false,
  "raw": "Yes, @LLFourn suggested the same on Twitter.\nSince I'm working towards an implementation on Ledger devices, I already have access to the TRNG from the Secure Element, while I would have to implement a secure atomic counter myself if I wanted to use CounterNonceGen.\n\nEither way, I think the same approach above could be used with CounterNonceGen, just replacing *rand_root* with the atomic counter.\n\nPerhaps there are simpler approaches to handle the psbt-level sessions with CounterNonceGen, instead of using the *(i,j)* hierarchy above; but I think that in order to handle psbt-level signing sessions securely you'd still want to commit to the initial counter and the number of signatures you'll produce for that psbt as part of the session state indexed by `session_id`, particularly if you allow multiple psbt signing flows in parallel.\nOverall, I suspect this might be harder to audit in terms of no-nonce-reuse.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 81,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}