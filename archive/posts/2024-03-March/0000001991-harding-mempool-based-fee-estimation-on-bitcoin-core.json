{
  "id": 1991,
  "name": "David A. Harding",
  "username": "harding",
  "avatar_template": "/user_avatar/delvingbitcoin.org/harding/{size}/6_2.png",
  "created_at": "2024-03-22T23:41:14.700Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"ismaelsadeeq\" data-post=\"4\" data-topic=\"703\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ismaelsadeeq/48/151_2.png\" class=\"avatar\"> ismaelsadeeq:</div>\n<blockquote>\n<p>One scenario where miners could manipulate the mempool and cause congestion is by mining empty blocks or deliberately refraining from mining for some time to congest the mempool and make fee estimate spike up. However, assuming mining is decentralized, this scenario will not hold? Are their other instances ?</p>\n</blockquote>\n</aside>\n<p>Miner Mallory creates (but does not immediately broadcast) several large and high-feerate transactions, {<em>A</em>, <em>B</em>, <em>C</em>, \u2026}.  She also creates (but does not broadcast) a minimal-size, zero-fee transaction that conflicts with all her previous transactions.  She includes the conflicting transaction in her block templates.  She eventually mines a block containing it but does not immediately broadcast that block.  Instead, she immediately broadcasts her large original transactions, waits a few seconds, and then broadcasts her block.  Users receive the transactions first, increase their feerate estimates, and some of those users in those few seconds broadcast high-feerate transactions that remain valid even after Mallory\u2019s block propagates.  The entry of those user\u2019s high feerate transactions into the other node mempools potentially results in later users choosing high feerates, magnifying the effect.</p>\n<p>This is a variant on a <em>Finney attack</em>.  It\u2019s a contrived example at present as it requires Mallory risk losing an entire block reward, of which the subsidy currently dominates.  But in the future when fees dominate, it may be worth it for moderately large (but non-majority) miners to risk a small chance of losing a block reward for the opportunity to increase fees by a significant percentage.  A longer-range version of this attack would use selfish mining.</p>\n<p>More generally, I think we need to be aware of the feedback loop between current fees, fee estimates, and future fees.  An algorithm that lowers feerates too aggressively will receive negative feedback from the transactions it produces not getting mined.  For anyone who can fee bump their transactions without too much inconvenience, that\u2019s probably ok.  An algorithm that raises feerates too aggressively may receive positive feedback from seeing its high feerate transactions getting mined, resulting in it returning even higher and higher feerate estimates until it hits the external limit of many people being unwilling to send transactions with such high feerates.  That\u2019s less ok, both because people can\u2019t practically lower their feerates if it becomes apparent that the market is overbid and because any miner who can trigger overbidding may be able to profit.</p>\n<p>I\u2019m not saying that we should never use mempool information to raise feerate estimates, just that I think it\u2019s lot easier to make the case that lowering feerate estimates based on mempool information is safe for people who can easily and cheaply fee bump.</p>",
  "post_number": 6,
  "post_type": 1,
  "updated_at": "2024-03-22T23:41:14.700Z",
  "reply_count": 0,
  "reply_to_post_number": 4,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 10,
  "readers_count": 9,
  "score": 2.0,
  "yours": false,
  "topic_id": 703,
  "topic_slug": "mempool-based-fee-estimation-on-bitcoin-core",
  "topic_title": "Mempool Based Fee Estimation on Bitcoin Core",
  "topic_html_title": "Mempool Based Fee Estimation on Bitcoin Core",
  "category_id": 8,
  "display_username": "David A. Harding",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"ismaelsadeeq, post:4, topic:703\"]\nOne scenario where miners could manipulate the mempool and cause congestion is by mining empty blocks or deliberately refraining from mining for some time to congest the mempool and make fee estimate spike up. However, assuming mining is decentralized, this scenario will not hold? Are their other instances ?\n[/quote]\n\nMiner Mallory creates (but does not immediately broadcast) several large and high-feerate transactions, {_A_, _B_, _C_, ...}.  She also creates (but does not broadcast) a minimal-size, zero-fee transaction that conflicts with all her previous transactions.  She includes the conflicting transaction in her block templates.  She eventually mines a block containing it but does not immediately broadcast that block.  Instead, she immediately broadcasts her large original transactions, waits a few seconds, and then broadcasts her block.  Users receive the transactions first, increase their feerate estimates, and some of those users in those few seconds broadcast high-feerate transactions that remain valid even after Mallory's block propagates.  The entry of those user's high feerate transactions into the other node mempools potentially results in later users choosing high feerates, magnifying the effect.\n\nThis is a variant on a _Finney attack_.  It's a contrived example at present as it requires Mallory risk losing an entire block reward, of which the subsidy currently dominates.  But in the future when fees dominate, it may be worth it for moderately large (but non-majority) miners to risk a small chance of losing a block reward for the opportunity to increase fees by a significant percentage.  A longer-range version of this attack would use selfish mining.\n\nMore generally, I think we need to be aware of the feedback loop between current fees, fee estimates, and future fees.  An algorithm that lowers feerates too aggressively will receive negative feedback from the transactions it produces not getting mined.  For anyone who can fee bump their transactions without too much inconvenience, that's probably ok.  An algorithm that raises feerates too aggressively may receive positive feedback from seeing its high feerate transactions getting mined, resulting in it returning even higher and higher feerate estimates until it hits the external limit of many people being unwilling to send transactions with such high feerates.  That's less ok, both because people can't practically lower their feerates if it becomes apparent that the market is overbid and because any miner who can trigger overbidding may be able to profit.\n\nI'm not saying that we should never use mempool information to raise feerate estimates, just that I think it's lot easier to make the case that lowering feerate estimates based on mempool information is safe for people who can easily and cheaply fee bump.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 6,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}