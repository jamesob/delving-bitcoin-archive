{
  "id": 1912,
  "name": "Sebastian Falbesoner",
  "username": "theStack",
  "avatar_template": "/user_avatar/delvingbitcoin.org/thestack/{size}/420_2.png",
  "created_at": "2024-03-16T08:46:33.962Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"josibake\" data-post=\"6\" data-topic=\"678\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/josibake/48/83_2.png\" class=\"avatar\"> josibake:</div>\n<blockquote>\n<p>I haven\u2019t looked into how you have the tool designed, but any interest in making this a rust library? For example, <a href=\"https://github.com/cloudhead/nakamoto\" rel=\"noopener nofollow ugc\">GitHub - cloudhead/nakamoto: Privacy-preserving Bitcoin light-client implementation in Rust </a> has it on their roadmap to add BIP324, and I\u2019m sure there are others. Seems like having a library would be generally useful and something that your proxy could be built around.</p>\n</blockquote>\n</aside>\n<p>Yup, I agree that creating a BIP324 library makes a lot of sense (see also <a href=\"https://delvingbitcoin.org/t/bip324-proxy-easy-integration-of-v2-transport-protocol-for-light-clients-poc/678/2\">0xb10c\u2019s post above</a> where one idea is to add it to rust-bitcoin).</p>\n<aside class=\"quote no-group\" data-username=\"josibake\" data-post=\"6\" data-topic=\"678\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/josibake/48/83_2.png\" class=\"avatar\"> josibake:</div>\n<blockquote>\n<p>I\u2019m also not fluent in Rust but learning and looking for small-ish projects to work on, so I\u2019d be more than happy to help work on a BIP324 rust library if you\u2019re interested in collaborating.</p>\n</blockquote>\n</aside>\n<p>Sure, that would be great! I forgot to mention this explicitly in the OP, but of course everyone is more than welcome to contribute. For starters, it should be pretty straight-forward to create a module for the BIP324 cipher suite. I think we can use the same interface as <code>BIP324Cipher</code> in Bitcoin Core (see <code>src/bip324.{h,cpp}</code>). Given that there are (hopefully) already Rust crates available for efficient implementations of the cryptographic primitives (<code>secp256k1-ellswift</code> bindings, ChaCha20(Poly1305), HKDF-SHA256 etc.), this shouldn\u2019t even be too much code.</p>",
  "post_number": 7,
  "post_type": 1,
  "updated_at": "2024-03-16T08:46:33.962Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 7,
  "readers_count": 6,
  "score": 1.4,
  "yours": false,
  "topic_id": 678,
  "topic_slug": "bip324-proxy-easy-integration-of-v2-transport-protocol-for-light-clients-poc",
  "topic_title": "BIP324 Proxy: easy integration of v2 transport protocol for light clients (PoC)",
  "topic_html_title": "BIP324 Proxy: easy integration of v2 transport protocol for light clients (PoC)",
  "category_id": 8,
  "display_username": "Sebastian Falbesoner",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"josibake, post:6, topic:678\"]\nI haven\u2019t looked into how you have the tool designed, but any interest in making this a rust library? For example, [GitHub - cloudhead/nakamoto: Privacy-preserving Bitcoin light-client implementation in Rust ](https://github.com/cloudhead/nakamoto) has it on their roadmap to add BIP324, and I\u2019m sure there are others. Seems like having a library would be generally useful and something that your proxy could be built around.\n[/quote]\nYup, I agree that creating a BIP324 library makes a lot of sense (see also [0xb10c's post above](https://delvingbitcoin.org/t/bip324-proxy-easy-integration-of-v2-transport-protocol-for-light-clients-poc/678/2?u=thestack) where one idea is to add it to rust-bitcoin).\n\n[quote=\"josibake, post:6, topic:678\"]\nI\u2019m also not fluent in Rust but learning and looking for small-ish projects to work on, so I\u2019d be more than happy to help work on a BIP324 rust library if you\u2019re interested in collaborating.\n[/quote]\n\nSure, that would be great! I forgot to mention this explicitly in the OP, but of course everyone is more than welcome to contribute. For starters, it should be pretty straight-forward to create a module for the BIP324 cipher suite. I think we can use the same interface as `BIP324Cipher` in Bitcoin Core (see `src/bip324.{h,cpp}`). Given that there are (hopefully) already Rust crates available for efficient implementations of the cryptographic primitives (`secp256k1-ellswift` bindings, ChaCha20(Poly1305), HKDF-SHA256 etc.), this shouldn't even be too much code.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 346,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}