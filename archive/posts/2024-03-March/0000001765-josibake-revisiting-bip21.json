{
  "id": 1765,
  "name": "josie",
  "username": "josibake",
  "avatar_template": "/user_avatar/delvingbitcoin.org/josibake/{size}/83_2.png",
  "created_at": "2024-03-02T10:49:42.050Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"MattCorallo\" data-post=\"13\" data-topic=\"630\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/m/e47c2d/48.png\" class=\"avatar\"> MattCorallo:</div>\n<blockquote>\n<p>Yea, I mean if someone wants to do the legwork I\u2019d be happy to see the no-KV version, just not sure its worth someone\u2019s time to do that :).</p>\n</blockquote>\n</aside>\n<p>You can also do this in a way that ensures you won\u2019t break existing implementations: just include an optional <code>=v</code> dummy value at the end. Still smaller than the kv approach and after a long enough period has passed where we are sure clients are using the new logic, receivers can drop the dummy values to save even more space in the QR code.</p>\n<p>So for a new client, something like \u201cMAY include the dummy value <code>=v</code> at the end of the address. This is to ensure backwards compatibility with older clients\u201d and for the sender, \u201cMUST check for the value <code>=v</code> at the end of the address and remove it. This value is used to ensure backwards compatibility with older clients.\u201d</p>\n<aside class=\"quote no-group\" data-username=\"MattCorallo\" data-post=\"13\" data-topic=\"630\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/m/e47c2d/48.png\" class=\"avatar\"> MattCorallo:</div>\n<blockquote>\n<p>not to mention its just nice to only have one format/place to look for newaddressformat</p>\n</blockquote>\n</aside>\n<p>This is another reason to prefer the no-KV approach: there is no more ambiguity around putting a new address in the root vs putting it in a kv pair. Senders just need to split the URI on <code>?</code> and look for their preferred HRP/<code>extensionkey</code>. This is also nice for new clients supporting the new address type: all they need to do is be able to recognize and parse the new address type, so no extra test cases needed for checking the root for the new address vs checking the <code>kv</code> pairs for the new address.</p>",
  "post_number": 14,
  "post_type": 1,
  "updated_at": "2024-03-02T10:49:42.050Z",
  "reply_count": 0,
  "reply_to_post_number": 13,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 5,
  "readers_count": 4,
  "score": 1.0,
  "yours": false,
  "topic_id": 630,
  "topic_slug": "revisiting-bip21",
  "topic_title": "Revisiting BIP21",
  "topic_html_title": "Revisiting BIP21",
  "category_id": 8,
  "display_username": "josie",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"MattCorallo, post:13, topic:630\"]\nYea, I mean if someone wants to do the legwork I\u2019d be happy to see the no-KV version, just not sure its worth someone\u2019s time to do that :).\n[/quote]\n\nYou can also do this in a way that ensures you won't break existing implementations: just include an optional `=v` dummy value at the end. Still smaller than the kv approach and after a long enough period has passed where we are sure clients are using the new logic, receivers can drop the dummy values to save even more space in the QR code.\n\nSo for a new client, something like \"MAY include the dummy value `=v` at the end of the address. This is to ensure backwards compatibility with older clients\" and for the sender, \"MUST check for the value `=v` at the end of the address and remove it. This value is used to ensure backwards compatibility with older clients.\"\n\n[quote=\"MattCorallo, post:13, topic:630\"]\nnot to mention its just nice to only have one format/place to look for newaddressformat\n[/quote]\n\nThis is another reason to prefer the no-KV approach: there is no more ambiguity around putting a new address in the root vs putting it in a kv pair. Senders just need to split the URI on `?` and look for their preferred HRP/`extensionkey`. This is also nice for new clients supporting the new address type: all they need to do is be able to recognize and parse the new address type, so no extra test cases needed for checking the root for the new address vs checking the `kv` pairs for the new address.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 92,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}