{
  "id": 2030,
  "name": "Gregory Sanders",
  "username": "instagibbs",
  "avatar_template": "/user_avatar/delvingbitcoin.org/instagibbs/{size}/28_2.png",
  "created_at": "2024-03-25T13:25:13.078Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"ajtowns\" data-post=\"9\" data-topic=\"682\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ajtowns/48/417_2.png\" class=\"avatar\"> ajtowns:</div>\n<blockquote>\n<p>I guess my main issue with Simplicity is as a \u201cConsensus Language\u201d, particularly the reviewability aspect \u2013 implementing Simplicity is a sizable amount of code (<a href=\"https://github.com/ElementsProject/elements/pull/1219\">Elements#1219</a> is currently +41238-18 eg), and even if the path of least resistance to understanding that code is to treat much of it as generated (ie better to spend your time understanding the formal specification and the code generation tools than looking at C/C++ code directly) that\u2019s also a lot of complexity and requires a pretty high baseline of expertise.</p>\n</blockquote>\n</aside>\n<p>I\u2019d like to see an apples/apples comparison to code diff but I suspect 80%+ of that diff is things like COQ proofs and other supporting infrastructure, not something that is required in the consensus code itself. Goes without saying but deleting mechanical proofs makes \u201creviewing easier\u201d in the way that cutting brake lines means you care about speed.</p>",
  "post_number": 13,
  "post_type": 1,
  "posts_count": 17,
  "updated_at": "2024-03-25T13:30:21.075Z",
  "reply_count": 1,
  "reply_to_post_number": 9,
  "quote_count": 1,
  "incoming_link_count": 2,
  "reads": 41,
  "readers_count": 40,
  "score": 38.0,
  "yours": false,
  "topic_id": 682,
  "topic_slug": "btc-lisp-as-an-alternative-to-script",
  "topic_title": "BTC Lisp as an alternative to Script",
  "topic_html_title": "BTC Lisp as an alternative to Script",
  "category_id": 7,
  "display_username": "Gregory Sanders",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"ajtowns, post:9, topic:682\"]\nI guess my main issue with Simplicity is as a \u201cConsensus Language\u201d, particularly the reviewability aspect \u2013 implementing Simplicity is a sizable amount of code ([Elements#1219](https://github.com/ElementsProject/elements/pull/1219) is currently +41238-18 eg), and even if the path of least resistance to understanding that code is to treat much of it as generated (ie better to spend your time understanding the formal specification and the code generation tools than looking at C/C++ code directly) that\u2019s also a lot of complexity and requires a pretty high baseline of expertise.\n[/quote]\n\nI'd like to see an apples/apples comparison to code diff but I suspect 80%+ of that diff is things like COQ proofs and other supporting infrastructure, not something that is required in the consensus code itself. Goes without saying but deleting mechanical proofs makes \"reviewing easier\" in the way that cutting brake lines means you care about speed.",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 31,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "I\u2019d like to see an apples/apples comparison to code diff but I suspect 80%+ of that diff is things like COQ proofs and other supporting infrastructure, not something that is required in the consensus code itself. Goes without saying but deleting mechanical proofs makes \u201creviewing easier\u201d in the way&hellip;",
  "truncated": true,
  "post_url": "/t/btc-lisp-as-an-alternative-to-script/682/13",
  "reactions": [
    {
      "id": "clap",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}