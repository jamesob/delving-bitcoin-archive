{
  "id": 1808,
  "name": "Rusty Russell",
  "username": "rustyrussell",
  "avatar_template": "/user_avatar/delvingbitcoin.org/rustyrussell/{size}/154_2.png",
  "created_at": "2024-03-07T02:51:48.299Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"sdaftuar\" data-post=\"18\" data-topic=\"553\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/s/0ea827/48.png\" class=\"avatar\"> sdaftuar:</div>\n<blockquote>\n<p>According to this <a href=\"https://bitcoinops.org/en/tools/calc-size/\" rel=\"noopener nofollow ugc\">transaction size calculator </a>, an attacker can then relay about 45k vbytes of transaction data (using p2tr) that conflict with one input of each of these 780 transactions. Under our assumption, this transaction would evict all 780 transactions as long as the feerate on this new transaction is 40 sats/vbyte, or about 1.8Msats in total<a href=\"#footnote-1702-3\">[3]</a>.</p>\n</blockquote>\n</aside>\n<p>Ah yes, unconfirmed children strike again <img src=\"https://delvingbitcoin.org/images/emoji/twitter/frowning.png?v=12\" title=\":frowning:\" class=\"emoji\" alt=\":frowning:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<blockquote>\n<p>(Please correct me if I made any numerical errors here.)</p>\n</blockquote>\n<p>Even if you did, the order of magnitude is correct.</p>\n<blockquote>\n<p>this is not something that we should permit to happen, for both anti-DoS and incentive compatibility reasons.</p>\n</blockquote>\n<p>I agree with anti-DoS, but it\u2019s not even clear that it\u2019s not incentive compatible.  If you expect other miners to do the replacement, it depends on your discount rate.  Which is annoyingly circular reasoning, but I think we can do better.</p>\n<p>Let\u2019s assume v3 rules, so children need not apply.  All the pre-signed transactions I know of can trivially enforce this condition, so it seems fair, and cuts the problem down a fair way.</p>\n<p>What does it fundamentally cost to drop a random transaction from the mempool?  If we assume the Mempool Is Always Full, then it seems reasonable that it will be eventually replaced by a transaction at feerate minfee - epsilon.  And if we assume a tx of &lt; 101k, and some continuous looking feerate distribution around and below the bottom of the mempool, I\u2019m happy to ignore epsilon.</p>\n<p>In this model, a miner would consider an RBF tx fundamentally incentive compatible be comparing the total fees above the minfee rate. To give some numbers:</p>\n<p>My node\u2019s mempool is oversized, but a quick grep/cut/awk hack gives me the threshold for block 78 as 7.7432 sat/vb (and block 1 as 14.0673 sat/vb).  Under this model, a 100k tx paying 774,320 sats is worth epsilon (~0), so a miner would want to accept a replacement 1k tx paying any higher feerate, say 7744 sats.</p>\n<p>Now, does this actually help our pinning attack?  Not as much as the previous proposal, at least on these numbers.  Halfway up the mempool (block 39) is 12.0378 sat/vb (higher in the mempool means it\u2019s more likely to get mined and just fail, so this is a reasonable worst-case sketch).  Mallory puts a 100k tx there, be paying 1,203,780 sats, thus a fee-above-minimum of 429,460 sats.  Alice\u2019s 1k tx would have to beat that fee-above-minimum, so 437 sat/vb feerate (it could otherwise get in the top block for 14 sat/vb, so this does feel like extortion).</p>\n<p>But I think it does imply that there\u2019s a significant conflict between miner incentives and the current RBF DoS rules (under which Alice\u2019s 1k tx would have to pay a feerate of 1204 sats/vb).</p>",
  "post_number": 24,
  "post_type": 1,
  "updated_at": "2024-03-07T02:53:25.889Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 6,
  "readers_count": 5,
  "score": 1.0,
  "yours": false,
  "topic_id": 553,
  "topic_slug": "mempool-incentive-compatibility",
  "topic_title": "Mempool Incentive Compatibility",
  "topic_html_title": "Mempool Incentive Compatibility",
  "category_id": 7,
  "display_username": "Rusty Russell",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"sdaftuar, post:18, topic:553\"]\nAccording to this [transaction size calculator ](https://bitcoinops.org/en/tools/calc-size/), an attacker can then relay about 45k vbytes of transaction data (using p2tr) that conflict with one input of each of these 780 transactions. Under our assumption, this transaction would evict all 780 transactions as long as the feerate on this new transaction is 40 sats/vbyte, or about 1.8Msats in total[[3]](#footnote-1702-3).\n[/quote]\n\nAh yes, unconfirmed children strike again :frowning: \n\n> (Please correct me if I made any numerical errors here.)\n\nEven if you did, the order of magnitude is correct.  \n\n> this is not something that we should permit to happen, for both anti-DoS and incentive compatibility reasons.\n\nI agree with anti-DoS, but it's not even clear that it's not incentive compatible.  If you expect other miners to do the replacement, it depends on your discount rate.  Which is annoyingly circular reasoning, but I think we can do better.\n\nLet's assume v3 rules, so children need not apply.  All the pre-signed transactions I know of can trivially enforce this condition, so it seems fair, and cuts the problem down a fair way.\n\nWhat does it fundamentally cost to drop a random transaction from the mempool?  If we assume the Mempool Is Always Full, then it seems reasonable that it will be eventually replaced by a transaction at feerate minfee - epsilon.  And if we assume a tx of < 101k, and some continuous looking feerate distribution around and below the bottom of the mempool, I'm happy to ignore epsilon.\n\nIn this model, a miner would consider an RBF tx fundamentally incentive compatible be comparing the total fees above the minfee rate. To give some numbers:\n\nMy node's mempool is oversized, but a quick grep/cut/awk hack gives me the threshold for block 78 as 7.7432 sat/vb (and block 1 as 14.0673 sat/vb).  Under this model, a 100k tx paying 774,320 sats is worth epsilon (~0), so a miner would want to accept a replacement 1k tx paying any higher feerate, say 7744 sats.\n\nNow, does this actually help our pinning attack?  Not as much as the previous proposal, at least on these numbers.  Halfway up the mempool (block 39) is 12.0378 sat/vb (higher in the mempool means it's more likely to get mined and just fail, so this is a reasonable worst-case sketch).  Mallory puts a 100k tx there, be paying 1,203,780 sats, thus a fee-above-minimum of 429,460 sats.  Alice's 1k tx would have to beat that fee-above-minimum, so 437 sat/vb feerate (it could otherwise get in the top block for 14 sat/vb, so this does feel like extortion).\n\nBut I think it does imply that there's a significant conflict between miner incentives and the current RBF DoS rules (under which Alice's 1k tx would have to pay a feerate of 1204 sats/vb).",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 137,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}