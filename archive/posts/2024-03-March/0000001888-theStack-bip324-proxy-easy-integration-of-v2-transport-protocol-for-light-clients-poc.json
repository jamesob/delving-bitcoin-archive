{
  "id": 1888,
  "name": "Sebastian Falbesoner",
  "username": "theStack",
  "avatar_template": "/user_avatar/delvingbitcoin.org/thestack/{size}/420_2.png",
  "created_at": "2024-03-14T12:55:53.397Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"0xB10C\" data-post=\"4\" data-topic=\"678\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/0xb10c/48/15_2.png\" class=\"avatar\"> 0xB10C:</div>\n<blockquote>\n<p>I briefly looked into it and it seems like all <strong>inbound</strong> <a href=\"https://b10c.me/observations/06-linkinglion/\" rel=\"noopener nofollow ugc\">LinkingLion </a> connections set <code>127.0.0.1</code> and <strong>inbound</strong> i2p and tor (presumably) Bitcoin Core connections set <code>0.0.0.0</code>.</p>\n</blockquote>\n</aside>\n<p>Thanks for taking a deeper look! <img src=\"https://delvingbitcoin.org/images/emoji/twitter/ok_hand.png?v=12\" title=\":ok_hand:\" class=\"emoji\" alt=\":ok_hand:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<aside class=\"quote no-group\" data-username=\"0xB10C\" data-post=\"4\" data-topic=\"678\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/0xb10c/48/15_2.png\" class=\"avatar\"> 0xB10C:</div>\n<blockquote>\n<p>Based on the \u201cBIP324 proxy scenario\u201d graphic and the slides you linked, I noticed that the proxy is only for outbound connections for now, correct? You mention \u201cInvestigate inbound connections support via reverse proxy\u201d as TODO.</p>\n</blockquote>\n</aside>\n<p>Yes, it only works for outbound connections for now. The reverse proxy idea seemed interesting to me from a technical perspective, but thinking more about it, it\u2019s probably not that useful in practice. There is already the possibility to run a listening node with BIP324 now (by running Bitcoin Core v26.0+), and I\u2019d assume that relevant alternative node implementations implement it soon (at least significantly earlier than most light clients).</p>\n<aside class=\"quote no-group\" data-username=\"0xB10C\" data-post=\"4\" data-topic=\"678\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/0xb10c/48/15_2.png\" class=\"avatar\"> 0xB10C:</div>\n<blockquote>\n<p>I incorrectly assumed you\u2019re implementing in and outbound. For outbound only, it should be fine.</p>\n</blockquote>\n</aside>\n<p>Ok, that\u2019s good news.</p>\n<aside class=\"quote no-group\" data-username=\"0xB10C\" data-post=\"4\" data-topic=\"678\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/0xb10c/48/15_2.png\" class=\"avatar\"> 0xB10C:</div>\n<blockquote>\n<p>However, only version 1 address serialization is possible in (inbound/outbound) version messages. <a href=\"https://github.com/bitcoin/bips/blob/b3701faef2bdb98a0d7ace4eedbeefa2da4c89ed/bip-0155.mediawiki\" rel=\"noopener nofollow ugc\">BIP-155</a> address serialization of e.g. TorV3, I2P, CJDNS isn\u2019t possible. These will always be <code>0.0.0.0</code> (<a href=\"https://github.com/bitcoin/bitcoin/blob/e1ce5b8ae9124717c00dca71a5c5b43a7f5ad177/src/net_processing.cpp#L1547\" rel=\"noopener nofollow ugc\">bitcoin/src/net_processing.cpp at e1ce5b8ae9124717c00dca71a5c5b43a7f5ad177 \u00b7 bitcoin/bitcoin \u00b7 GitHub </a>).</p>\n</blockquote>\n</aside>\n<p>Good point. I haven\u2019t really checked how the proxy idea would work together with any of these protocols. I guess it just doesn\u2019t, but intuitively I would say it\u2019s fine if that\u2019s not supported, as these protocols already offer encryption on another layer anyways.</p>",
  "post_number": 5,
  "post_type": 1,
  "posts_count": 19,
  "updated_at": "2024-03-14T12:55:53.397Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 3,
  "reads": 49,
  "readers_count": 48,
  "score": 39.8,
  "yours": false,
  "topic_id": 678,
  "topic_slug": "bip324-proxy-easy-integration-of-v2-transport-protocol-for-light-clients-poc",
  "topic_title": "BIP324 Proxy: easy integration of v2 transport protocol for light clients (PoC)",
  "topic_html_title": "BIP324 Proxy: easy integration of v2 transport protocol for light clients (PoC)",
  "category_id": 8,
  "display_username": "Sebastian Falbesoner",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"0xB10C, post:4, topic:678\"]\nI briefly looked into it and it seems like all **inbound** [LinkingLion ](https://b10c.me/observations/06-linkinglion/) connections set `127.0.0.1` and **inbound** i2p and tor (presumably) Bitcoin Core connections set `0.0.0.0`.\n[/quote]\n\nThanks for taking a deeper look! :ok_hand: \n\n[quote=\"0xB10C, post:4, topic:678\"]\nBased on the \u201cBIP324 proxy scenario\u201d graphic and the slides you linked, I noticed that the proxy is only for outbound connections for now, correct? You mention \u201cInvestigate inbound connections support via reverse proxy\u201d as TODO.\n[/quote]\nYes, it only works for outbound connections for now. The reverse proxy idea seemed interesting to me from a technical perspective, but thinking more about it, it's probably not that useful in practice. There is already the possibility to run a listening node with BIP324 now (by running Bitcoin Core v26.0+), and I'd assume that relevant alternative node implementations implement it soon (at least significantly earlier than most light clients).\n\n[quote=\"0xB10C, post:4, topic:678\"]\nI incorrectly assumed you\u2019re implementing in and outbound. For outbound only, it should be fine.\n[/quote]\nOk, that's good news.\n\n[quote=\"0xB10C, post:4, topic:678\"]\nHowever, only version 1 address serialization is possible in (inbound/outbound) version messages. [BIP-155](https://github.com/bitcoin/bips/blob/b3701faef2bdb98a0d7ace4eedbeefa2da4c89ed/bip-0155.mediawiki) address serialization of e.g. TorV3, I2P, CJDNS isn\u2019t possible. These will always be `0.0.0.0` ([bitcoin/src/net_processing.cpp at e1ce5b8ae9124717c00dca71a5c5b43a7f5ad177 \u00b7 bitcoin/bitcoin \u00b7 GitHub ](https://github.com/bitcoin/bitcoin/blob/e1ce5b8ae9124717c00dca71a5c5b43a7f5ad177/src/net_processing.cpp#L1547)).\n[/quote]\nGood point. I haven't really checked how the proxy idea would work together with any of these protocols. I guess it just doesn't, but intuitively I would say it's fine if that's not supported, as these protocols already offer encryption on another layer anyways.",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 346,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Thanks for taking a deeper look! :ok_hand: \n\nYes, it only works for outbound connections for now. The reverse proxy idea seemed interesting to me from a technical perspective, but thinking more about it, it\u2019s probably not that useful in practice. There is already the possibility to run a listening &hellip;",
  "truncated": true,
  "post_url": "/t/bip324-proxy-easy-integration-of-v2-transport-protocol-for-light-clients-poc/678/5",
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}