{
  "id": 2082,
  "name": "Suhas Daftuar",
  "username": "sdaftuar",
  "avatar_template": "/letter_avatar_proxy/v4/letter/s/0ea827/{size}.png",
  "created_at": "2024-03-28T23:43:14.924Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"harding\" data-post=\"9\" data-topic=\"696\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/harding/48/6_2.png\" class=\"avatar\"> harding:</div>\n<blockquote>\n<p>I think you could implement sponsors themselves with just <code>OP_CAT</code> as long as both the sponsor transaction and the transaction it sponsors are in a merkle sub-tree that doesn\u2019t include the coinbase transaction.</p>\n</blockquote>\n</aside>\n<p>Not sure if we\u2019re talking past each other, but I just want to emphasize that there is a difference between implementing Jeremy\u2019s transaction sponsors proposal as he originally described, and implementing a script-verification-form of sponsors using OP_CAT to prove inclusion of transactions in some merkle root. Doing it in script, without a way to pull in the merkle root or headers chain from the actual active blockchain, will always be different from Jeremy\u2019s original proposal, because in the event of a reorg <strong>the script will still be valid</strong>, even if the merkle root that is referenced in a script is not in the active chain.</p>\n<p>Another way of putting it is that the script-verification form of sponsors is equivalent to saying that a transaction must appear in some merkle root that has some high proof of work on it, not that the transaction must appear in the same actual block in the active chain.</p>\n<p>Because the script form of this is just an approximation of transaction sponsors, it is incorrect to say (as far as I can tell at least) that these proposed script extensions would already give us a change to the reorg-safety consensus model that sponsors would introduce.</p>\n<aside class=\"quote no-group\" data-username=\"harding\" data-post=\"9\" data-topic=\"696\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/harding/48/6_2.png\" class=\"avatar\"> harding:</div>\n<blockquote>\n<p>I think this is my point: single-transaction sponsors can now be exactly as efficient as paying a miner OOB (zero overhead). For a sponsor transaction with multiple dependencies, it\u2019s 0.5 vbytes per dependency. That\u2019s less than 0.5% overhead to sponsor a 1-input, 1-output P2TR.</p>\n</blockquote>\n</aside>\n<p>I don\u2019t think this is true?  Paying a miner out of band can be ~zero overhead, eg if a miner is paid using a lightning payment.  But using CPFP introduces an on-chain cost corresponding to the size of the CPFP transaction.  An average transaction right now is, say, 300 - 500 vbytes?  That means that we\u2019re talking about saving 10-15% of the cost of a CPFP by using an efficient sponsors implementation, versus something like Ephemeral Anchors.</p>\n<aside class=\"quote no-group\" data-username=\"JeremyRubin\" data-post=\"12\" data-topic=\"696\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/jeremyrubin/48/264_2.png\" class=\"avatar\"> JeremyRubin:</div>\n<blockquote>\n<p>The idea that protocols could be \u201cunhappy\u201d if <span class=\"math\">s_0</span> is mined instead of <span class=\"math\">s_1</span> is weak.</p>\n</blockquote>\n</aside>\n<p>It took me a while to understand that you were responding to my post here!  Eventually I realized that you may have interpreted my comments about griefing as being a narrower statement about a 3rd party interfering in the network\u2019s choice over which one of a pair of spends is eventually confirmed.</p>\n<p>Overall, I agree that it\u2019d be great for protocols to be robust to any version of their transactions confirming, like lightning tries to be as I understand it.  (This obviously doesn\u2019t hold for some very basic \u201cprotocols\u201d, like a user double-spending some recipient, and there is a competition between the original spend and the replacement, but I don\u2019t think this is interesting enough to debate.)</p>\n<p>However, there are other side effects to allowing 3rd parties to attach to your transaction than just pinning-type issues, or determining which version of various conflicting transactions gets mined.  One example is that you could use up all the mempool policy limits reserved for transaction chains via the sponsoring transaction, preventing a user from (say) spending their own unconfirmed outputs until the parent confirms.</p>\n<p>I imagine this can also interfere with their own attempts to fee bump via CPFP? I\u2019m imagining a situation where a transaction with its sponsor might confirm in the second block, but with some other high feerate child could confirm in the first block without the sponsor.  A miner might choose to hold on to the parent for the second block rather than confirm it without the sponsor in the first, to avoid invalidating the sponsor and having that drop out of the mempool?  Maybe there will end up being good answers to incentives questions like this, but I think we clearly haven\u2019t done the work yet to sort out all these incentive questions yet, and so forcing all transactions into a regime where they can be bumped by third parties seems like a stretch.</p>\n<aside class=\"quote no-group\" data-username=\"JeremyRubin\" data-post=\"12\" data-topic=\"696\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/jeremyrubin/48/264_2.png\" class=\"avatar\"> JeremyRubin:</div>\n<blockquote>\n<p>Suhas\u2019 point about pinning is rendered more or less moot if you, as a point of policy, only allow sponsors if they put a cluster into the next block (or maybe a few blocks out).</p>\n</blockquote>\n</aside>\n<p>I agree that this is a potential mitigation, but just wanted to flag that as some of us have been thinking this through in related contexts (<a href=\"https://delvingbitcoin.org/t/v3-and-some-possible-futures/523/4\" class=\"inline-onebox\">V3 and some possible futures - #4 by instagibbs</a>), there can be issues that still come up if (say) a transaction package moves to near the top block, and then the child is replaced away and the parent is left without the high feerate child/sponsor.  If a large, low-feerate variant of the parent is what is left, then this might be pinning a higher feerate variant of the transaction.</p>\n<p>Again, while there ultimately may be good answers to these questions as we do more work, I think for now it would be too soon to say that we\u2019re sure we have a policy framework that is so robust and beneficial that everyone should be opted in to it.</p>",
  "post_number": 13,
  "post_type": 1,
  "updated_at": "2024-03-28T23:45:26.353Z",
  "reply_count": 0,
  "reply_to_post_number": 9,
  "quote_count": 2,
  "incoming_link_count": 0,
  "reads": 3,
  "readers_count": 2,
  "score": 0.6,
  "yours": false,
  "topic_id": 696,
  "topic_slug": "improving-transaction-sponsor-blockspace-efficiency",
  "topic_title": "Improving transaction sponsor blockspace efficiency",
  "topic_html_title": "Improving transaction sponsor blockspace efficiency",
  "category_id": 7,
  "display_username": "Suhas Daftuar",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"harding, post:9, topic:696\"]\nI think you could implement sponsors themselves with just `OP_CAT` as long as both the sponsor transaction and the transaction it sponsors are in a merkle sub-tree that doesn\u2019t include the coinbase transaction.\n[/quote]\n\nNot sure if we're talking past each other, but I just want to emphasize that there is a difference between implementing Jeremy's transaction sponsors proposal as he originally described, and implementing a script-verification-form of sponsors using OP_CAT to prove inclusion of transactions in some merkle root. Doing it in script, without a way to pull in the merkle root or headers chain from the actual active blockchain, will always be different from Jeremy's original proposal, because in the event of a reorg **the script will still be valid**, even if the merkle root that is referenced in a script is not in the active chain.\n\nAnother way of putting it is that the script-verification form of sponsors is equivalent to saying that a transaction must appear in some merkle root that has some high proof of work on it, not that the transaction must appear in the same actual block in the active chain.\n\nBecause the script form of this is just an approximation of transaction sponsors, it is incorrect to say (as far as I can tell at least) that these proposed script extensions would already give us a change to the reorg-safety consensus model that sponsors would introduce. \n\n[quote=\"harding, post:9, topic:696\"]\nI think this is my point: single-transaction sponsors can now be exactly as efficient as paying a miner OOB (zero overhead). For a sponsor transaction with multiple dependencies, it\u2019s 0.5 vbytes per dependency. That\u2019s less than 0.5% overhead to sponsor a 1-input, 1-output P2TR.\n[/quote]\n\nI don't think this is true?  Paying a miner out of band can be ~zero overhead, eg if a miner is paid using a lightning payment.  But using CPFP introduces an on-chain cost corresponding to the size of the CPFP transaction.  An average transaction right now is, say, 300 - 500 vbytes?  That means that we're talking about saving 10-15% of the cost of a CPFP by using an efficient sponsors implementation, versus something like Ephemeral Anchors.  \n\n[quote=\"JeremyRubin, post:12, topic:696\"]\nThe idea that protocols could be \u201cunhappy\u201d if $s_0$ is mined instead of $s_1$ is weak.\n[/quote]\n\nIt took me a while to understand that you were responding to my post here!  Eventually I realized that you may have interpreted my comments about griefing as being a narrower statement about a 3rd party interfering in the network's choice over which one of a pair of spends is eventually confirmed.\n\nOverall, I agree that it'd be great for protocols to be robust to any version of their transactions confirming, like lightning tries to be as I understand it.  (This obviously doesn't hold for some very basic \"protocols\", like a user double-spending some recipient, and there is a competition between the original spend and the replacement, but I don't think this is interesting enough to debate.)\n\nHowever, there are other side effects to allowing 3rd parties to attach to your transaction than just pinning-type issues, or determining which version of various conflicting transactions gets mined.  One example is that you could use up all the mempool policy limits reserved for transaction chains via the sponsoring transaction, preventing a user from (say) spending their own unconfirmed outputs until the parent confirms.\n\nI imagine this can also interfere with their own attempts to fee bump via CPFP? I'm imagining a situation where a transaction with its sponsor might confirm in the second block, but with some other high feerate child could confirm in the first block without the sponsor.  A miner might choose to hold on to the parent for the second block rather than confirm it without the sponsor in the first, to avoid invalidating the sponsor and having that drop out of the mempool?  Maybe there will end up being good answers to incentives questions like this, but I think we clearly haven't done the work yet to sort out all these incentive questions yet, and so forcing all transactions into a regime where they can be bumped by third parties seems like a stretch.\n\n[quote=\"JeremyRubin, post:12, topic:696\"]\nSuhas\u2019 point about pinning is rendered more or less moot if you, as a point of policy, only allow sponsors if they put a cluster into the next block (or maybe a few blocks out).\n[/quote]\n\nI agree that this is a potential mitigation, but just wanted to flag that as some of us have been thinking this through in related contexts (https://delvingbitcoin.org/t/v3-and-some-possible-futures/523/4), there can be issues that still come up if (say) a transaction package moves to near the top block, and then the child is replaced away and the parent is left without the high feerate child/sponsor.  If a large, low-feerate variant of the parent is what is left, then this might be pinning a higher feerate variant of the transaction.  \n\nAgain, while there ultimately may be good answers to these questions as we do more work, I think for now it would be too soon to say that we're sure we have a policy framework that is so robust and beneficial that everyone should be opted in to it.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 95,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}