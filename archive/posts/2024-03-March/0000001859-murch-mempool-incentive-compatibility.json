{
  "id": 1859,
  "name": "Murch",
  "username": "murch",
  "avatar_template": "/user_avatar/delvingbitcoin.org/murch/{size}/139_2.png",
  "created_at": "2024-03-12T18:19:10.875Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"rustyrussell\" data-post=\"24\" data-topic=\"553\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/rustyrussell/48/154_2.png\" class=\"avatar\"> rustyrussell:</div>\n<blockquote>\n<p>I agree with anti-DoS, but it\u2019s not even clear that it\u2019s not incentive compatible. If you expect other miners to do the replacement, it depends on your discount rate. Which is annoyingly circular reasoning, but I think we can do better.</p>\n</blockquote>\n</aside>\n<p>While I think that Suhas\u2019s example above is somewhat similar, I recently elaborated an example how introducing a replace-by-feerate scheme in addition to our current RBF rules would cause new substantial DOS vectors. While my example is based on a concrete proposal, I believe that it illustrates a general issue afflicting all schemes that do away with the absolute fee increase in replacements: <a href=\"https://bitcoin.stackexchange.com/q/121541/5406\" class=\"inline-onebox\">mempool - What is the problem with the recent \"One-Shot Replace-by-Fee-Rate\" Proposal? - Bitcoin Stack Exchange</a></p>\n<p>My example entails a negligible cost to the attacker while permitting continuous resubmission of essentially the same transaction cycle. The collection of transaction has a substantially larger total weight than the data that is ever up for inclusion in the blocks and hence severely underpays for relay to the detriment of the entire network\u2019s bandwith-usage. I hope studying my write-up would help substantiate why transaction replacements must increase the total fees in the mempool.</p>",
  "post_number": 25,
  "post_type": 1,
  "updated_at": "2024-03-12T18:28:58.122Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 10,
  "reads": 6,
  "readers_count": 5,
  "score": 51.2,
  "yours": false,
  "topic_id": 553,
  "topic_slug": "mempool-incentive-compatibility",
  "topic_title": "Mempool Incentive Compatibility",
  "topic_html_title": "Mempool Incentive Compatibility",
  "category_id": 7,
  "display_username": "Murch",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": "",
  "bookmarked": false,
  "raw": "[quote=\"rustyrussell, post:24, topic:553\"]\nI agree with anti-DoS, but it\u2019s not even clear that it\u2019s not incentive compatible. If you expect other miners to do the replacement, it depends on your discount rate. Which is annoyingly circular reasoning, but I think we can do better.\n[/quote]\n\nWhile I think that Suhas\u2019s example above is somewhat similar, I recently elaborated an example how introducing a replace-by-feerate scheme in addition to our current RBF rules would cause new substantial DOS vectors. While my example is based on a concrete proposal, I believe that it illustrates a general issue afflicting all schemes that do away with the absolute fee increase in replacements: https://bitcoin.stackexchange.com/q/121541/5406\n\nMy example entails a negligible cost to the attacker while permitting continuous resubmission of essentially the same transaction cycle. The collection of transaction has a substantially larger total weight than the data that is ever up for inclusion in the blocks and hence severely underpays for relay to the detriment of the entire network\u2019s bandwith-usage. I hope studying my write-up would help substantiate why transaction replacements must increase the total fees in the mempool.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 58,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}