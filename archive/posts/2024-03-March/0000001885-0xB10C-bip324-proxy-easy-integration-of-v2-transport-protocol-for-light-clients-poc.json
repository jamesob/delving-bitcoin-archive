{
  "id": 1885,
  "name": "0xB10C",
  "username": "0xB10C",
  "avatar_template": "/user_avatar/delvingbitcoin.org/0xb10c/{size}/15_2.png",
  "created_at": "2024-03-14T10:52:52.577Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"theStack\" data-post=\"3\" data-topic=\"678\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/thestack/48/420_2.png\" class=\"avatar\"> theStack:</div>\n<blockquote>\n<p>Do you know of any concrete P2P clients that follow this practice (or is it more like connections with obscure user agents that can\u2019t be tied to a concrete implementation)? I might add a prerequisites section to README.md mentioning the reliance on <code>addr_recv</code> being set correctly, together with a list of clients that are already known to be incompatible with BIP324 proxy.</p>\n</blockquote>\n</aside>\n<p>I briefly looked into it and it seems like all <strong>inbound</strong> <a href=\"https://b10c.me/observations/06-linkinglion/\">LinkingLion</a> connections set <code>127.0.0.1</code> and <strong>inbound</strong> i2p and tor (presumably) Bitcoin Core connections set <code>0.0.0.0</code>.</p>\n<p>Based on the \u201cBIP324 proxy scenario\u201d graphic and the slides you linked, I noticed that the proxy is only for outbound connections for now, correct? You mention \u201cInvestigate inbound connections support via reverse proxy\u201d as TODO. I incorrectly assumed you\u2019re implementing in and outbound. For outbound only, it should be fine.</p>\n<p>However, only version 1 address serialization is possible in (inbound/outbound) version messages. <a href=\"https://github.com/bitcoin/bips/blob/master/bip-0155.mediawiki\">BIP-155</a> address serialization of e.g. TorV3, I2P, CJDNS isn\u2019t possible. These will always be <code>0.0.0.0</code> (<a href=\"https://github.com/bitcoin/bitcoin/blob/e1ce5b8ae9124717c00dca71a5c5b43a7f5ad177/src/net_processing.cpp#L1547\" class=\"inline-onebox\">bitcoin/src/net_processing.cpp at e1ce5b8ae9124717c00dca71a5c5b43a7f5ad177 \u00b7 bitcoin/bitcoin \u00b7 GitHub</a>).</p>",
  "post_number": 4,
  "post_type": 1,
  "updated_at": "2024-03-14T10:52:52.577Z",
  "reply_count": 0,
  "reply_to_post_number": 3,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 2,
  "readers_count": 1,
  "score": 0,
  "yours": false,
  "topic_id": 678,
  "topic_slug": "bip324-proxy-easy-integration-of-v2-transport-protocol-for-light-clients-poc",
  "topic_title": "BIP324 Proxy: easy integration of v2 transport protocol for light clients (PoC)",
  "topic_html_title": "BIP324 Proxy: easy integration of v2 transport protocol for light clients (PoC)",
  "category_id": 8,
  "display_username": "0xB10C",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"theStack, post:3, topic:678\"]\nDo you know of any concrete P2P clients that follow this practice (or is it more like connections with obscure user agents that can\u2019t be tied to a concrete implementation)? I might add a prerequisites section to README.md mentioning the reliance on `addr_recv` being set correctly, together with a list of clients that are already known to be incompatible with BIP324 proxy.\n[/quote]\n\nI briefly looked into it and it seems like all **inbound** [LinkingLion](https://b10c.me/observations/06-linkinglion/) connections set `127.0.0.1` and **inbound** i2p and tor (presumably) Bitcoin Core connections set `0.0.0.0`.\n\nBased on the \"BIP324 proxy scenario\" graphic and the slides you linked, I noticed that the proxy is only for outbound connections for now, correct? You mention \"Investigate inbound connections support via reverse proxy\" as TODO. I incorrectly assumed you're implementing in and outbound. For outbound only, it should be fine. \n\nHowever, only version 1 address serialization is possible in (inbound/outbound) version messages. [BIP-155](https://github.com/bitcoin/bips/blob/master/bip-0155.mediawiki) address serialization of e.g. TorV3, I2P, CJDNS isn't possible. These will always be `0.0.0.0` (https://github.com/bitcoin/bitcoin/blob/e1ce5b8ae9124717c00dca71a5c5b43a7f5ad177/src/net_processing.cpp#L1547).",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 16,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}