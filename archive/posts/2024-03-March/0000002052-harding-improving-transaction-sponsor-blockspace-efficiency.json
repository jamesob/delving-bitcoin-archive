{
  "id": 2052,
  "name": "David A. Harding",
  "username": "harding",
  "avatar_template": "/user_avatar/delvingbitcoin.org/harding/{size}/6_2.png",
  "created_at": "2024-03-27T01:13:31.064Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"sdaftuar\" data-post=\"8\" data-topic=\"696\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/s/0ea827/48.png\" class=\"avatar\"> sdaftuar:</div>\n<blockquote>\n<p>you\u2019d need a way for a script to pull in data from the active headers chain itself in order to become invalid on a reorg.</p>\n</blockquote>\n</aside>\n<p>Yeah, I guess there is a cyclic dependency issue in my previous example given the need for a coinbase transaction to commit to the block\u2019s wtxid merkle root, but you need to known the txid of the coinbase transaction before you can construct the witness for a transaction that verifies a merkle proof for a block containing itself.</p>\n<p>I think you could implement sponsors themselves with just <code>OP_CAT</code> as long as both the sponsor transaction and the transaction it sponsors are in a merkle sub-tree that doesn\u2019t include the coinbase transaction.</p>\n<blockquote>\n<p>I believe there\u2019s a substantial difference between a single transaction being able to be griefed by someone else, and anyone on the network always being able to grief anyone else on the network at any time.</p>\n</blockquote>\n<p>I agree, and I don\u2019t claim a false equivalency.  However, I think it\u2019s an existing problem that would be nice to solve, especially if the solution also makes very low cost sponsorship more appealing.  I\u2019ll try to spend some time better understanding how cluster mempool works so that I can better understand your concerns.</p>\n<aside class=\"quote no-group\" data-username=\"sdaftuar\" data-post=\"8\" data-topic=\"696\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/s/0ea827/48.png\" class=\"avatar\"> sdaftuar:</div>\n<blockquote>\n<p>Exogenous-fee-CPFP is already still less efficient than paying a miner out of band to mine a given transaction, so if the concern is the miner-centralization-issue, then we should really abandon such protocols in favor of endogenous-fee-single-tx schemes.</p>\n</blockquote>\n</aside>\n<p>I think this is my point: single-transaction sponsors can now be exactly as efficient as paying a miner OOB (zero overhead).  For a sponsor transaction with multiple dependencies, it\u2019s 0.5 vbytes per dependency.  That\u2019s less than 0.5% overhead to sponsor a 1-input, 1-output P2TR.</p>\n<p>We now have an exogenous fee-paying mechanism that uses almost the same amount of space as the best endogenous mechanisms.  (And, in many cases, sponsors effectively uses less space!)  I don\u2019t think that\u2019s something we should rush to soft fork in, but it brings me a lot of comfort when thinking about increased use of exogenous fees.  If we as users ever do become concerned about excessive OOB fee paying, we have a drop-in solution.  Additionally, if more and more of the network shifts to the use of protocols that depend on exogenous fee paying, we\u2019ll have a scaling improvement ready to go.</p>\n<p>I think the efficient multiple-use form of sponsors described earlier in this thread really requires a new witness version, which will automatically provide some level of opt-in given how few wallets/services seem to have implemented automatic bech32(m) forward compatibility.  I have some other ideas for things we could do for (nearly) free at the same time, which I plan to open a separate thread about after I\u2019ve spent at least a week collecting some data about use of reorg safe transaction chains on the existing network.  But, in general, I currently think allowing sponsorship is something we should probably add the next time we plan to create a new witness version for general use\u2014not something I think we should rush to add next week.</p>",
  "post_number": 9,
  "post_type": 1,
  "updated_at": "2024-03-27T01:13:31.064Z",
  "reply_count": 0,
  "reply_to_post_number": 8,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 8,
  "readers_count": 7,
  "score": 1.6,
  "yours": false,
  "topic_id": 696,
  "topic_slug": "improving-transaction-sponsor-blockspace-efficiency",
  "topic_title": "Improving transaction sponsor blockspace efficiency",
  "topic_html_title": "Improving transaction sponsor blockspace efficiency",
  "category_id": 7,
  "display_username": "David A. Harding",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"sdaftuar, post:8, topic:696\"]\nyou\u2019d need a way for a script to pull in data from the active headers chain itself in order to become invalid on a reorg.\n[/quote]\n\nYeah, I guess there is a cyclic dependency issue in my previous example given the need for a coinbase transaction to commit to the block's wtxid merkle root, but you need to known the txid of the coinbase transaction before you can construct the witness for a transaction that verifies a merkle proof for a block containing itself.\n\nI think you could implement sponsors themselves with just `OP_CAT` as long as both the sponsor transaction and the transaction it sponsors are in a merkle sub-tree that doesn't include the coinbase transaction.\n\n> I believe there\u2019s a substantial difference between a single transaction being able to be griefed by someone else, and anyone on the network always being able to grief anyone else on the network at any time.\n\nI agree, and I don't claim a false equivalency.  However, I think it's an existing problem that would be nice to solve, especially if the solution also makes very low cost sponsorship more appealing.  I'll try to spend some time better understanding how cluster mempool works so that I can better understand your concerns.\n\n[quote=\"sdaftuar, post:8, topic:696\"]\nExogenous-fee-CPFP is already still less efficient than paying a miner out of band to mine a given transaction, so if the concern is the miner-centralization-issue, then we should really abandon such protocols in favor of endogenous-fee-single-tx schemes.\n[/quote]\n\nI think this is my point: single-transaction sponsors can now be exactly as efficient as paying a miner OOB (zero overhead).  For a sponsor transaction with multiple dependencies, it's 0.5 vbytes per dependency.  That's less than 0.5% overhead to sponsor a 1-input, 1-output P2TR.\n\nWe now have an exogenous fee-paying mechanism that uses almost the same amount of space as the best endogenous mechanisms.  (And, in many cases, sponsors effectively uses less space!)  I don't think that's something we should rush to soft fork in, but it brings me a lot of comfort when thinking about increased use of exogenous fees.  If we as users ever do become concerned about excessive OOB fee paying, we have a drop-in solution.  Additionally, if more and more of the network shifts to the use of protocols that depend on exogenous fee paying, we'll have a scaling improvement ready to go.\n\nI think the efficient multiple-use form of sponsors described earlier in this thread really requires a new witness version, which will automatically provide some level of opt-in given how few wallets/services seem to have implemented automatic bech32(m) forward compatibility.  I have some other ideas for things we could do for (nearly) free at the same time, which I plan to open a separate thread about after I've spent at least a week collecting some data about use of reorg safe transaction chains on the existing network.  But, in general, I currently think allowing sponsorship is something we should probably add the next time we plan to create a new witness version for general use---not something I think we should rush to add next week.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 6,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}