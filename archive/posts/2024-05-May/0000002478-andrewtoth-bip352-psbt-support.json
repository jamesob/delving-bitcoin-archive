{
  "id": 2478,
  "name": "Andrew Toth",
  "username": "andrewtoth",
  "avatar_template": "/user_avatar/delvingbitcoin.org/andrewtoth/{size}/576_2.png",
  "created_at": "2024-05-20T17:55:19.232Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"josibake\" data-post=\"1\" data-topic=\"877\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/josibake/48/83_2.png\" class=\"avatar\"> josibake:</div>\n<blockquote>\n<p>delvingless-andrewtoth</p>\n</blockquote>\n</aside>\n<p>Delvingless no longer <img src=\"https://delvingbitcoin.org/images/emoji/twitter/smiley.png?v=12\" title=\":smiley:\" class=\"emoji\" alt=\":smiley:\" loading=\"lazy\" width=\"20\" height=\"20\">.</p>\n<aside class=\"quote no-group\" data-username=\"Sosthene\" data-post=\"2\" data-topic=\"877\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/s/ed655f/48.png\" class=\"avatar\"> Sosthene:</div>\n<blockquote>\n<p>and put a placeholder scriptpubkey (basically the pubkey computed from a NUMS) in the actual unsigned transaction, to allow for accurate fee calculation.</p>\n</blockquote>\n</aside>\n<p>I think we shouldn\u2019t do this because if PSBT_OUT_SCRIPT is in the PSBT then older version implementations would still sign it and ignore the actual silent payment field. That is why PSBT_OUT_SCRIPT must now be optional for outputs when the constructor adds them. Once the outputs are generated, the Inputs Modifiable Flag is set to False so no input changes can invalidate the computed silent payment addresses. The new Silent Payments Modifiable Flag is set to False as well so no new silent payment outputs can be added. This makes it so the outputs only need to be generated once.\nAs for fee calculation, anything computing the weight can just use the taproot output size for any silent payment output.</p>\n<aside class=\"quote no-group quote-modified\" data-username=\"josibake\" data-post=\"3\" data-topic=\"877\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/josibake/48/83_2.png\" class=\"avatar\"> josibake:</div>\n<blockquote>\n<aside class=\"quote no-group\" data-username=\"Sosthene\" data-post=\"2\" data-topic=\"877\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/s/ed655f/48.png\" class=\"avatar\"> Sosthene:</div>\n<blockquote>\n<p>I think that since psbt already saves basically all relevant information about the prevout, discriminating between eligible or non eligible prevout will be easy</p>\n</blockquote>\n</aside>\n<p>This is one I need to double-check: does the PSBT provide enough information about the prevout for us to ensure the output being spent is not a segwit witness version &gt; 1, for example?</p>\n</blockquote>\n</aside>\n<p>We can get the information we need to determine if an output being spent is not a segwit witness version &gt; 1, but it will require us to merge the Constructor and Updater roles.\nIn my draft, the Constructor and Updater are responsible for maintaining mutual exclusion between silent payment outputs, and inputs that are either ANYONECANSPEND or Segwit version &gt; 1. A PSBT can\u2019t have both, and this is maintained with the new flags Silent Payments Modifiable and Has Silent Payments.\nThe Constructor can set Has Silent Payments if it adds a silent payment output, and the Updater can check this flag and refuse to add ANYONECANSPEND sighash flags to any inputs if set. Vice-versa with Updater setting Silent Payments Modifiable to False if it adds ANYONECANSPEND, and then the Constructor can\u2019t add any Silent Payment Outputs.\nThis won\u2019t work for Segwit version &gt; 1 inputs though, since the Constructor can only add the outpoint as an input, and the Updater is responsible for adding the input\u2019s scriptPubkey. If the scriptPubkey is a Segwit version &gt; 1, it\u2019s too late because the input is already added. This would result in a malformed PSBT. Not sure how to proceed with this.</p>",
  "post_number": 4,
  "post_type": 1,
  "updated_at": "2024-05-20T17:56:49.967Z",
  "reply_count": 0,
  "reply_to_post_number": 3,
  "quote_count": 3,
  "incoming_link_count": 0,
  "reads": 13,
  "readers_count": 12,
  "score": 2.4,
  "yours": false,
  "topic_id": 877,
  "topic_slug": "bip352-psbt-support",
  "topic_title": "BIP352: PSBT support",
  "topic_html_title": "BIP352: PSBT support",
  "category_id": 12,
  "display_username": "Andrew Toth",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"josibake, post:1, topic:877\"]\ndelvingless-andrewtoth\n[/quote]\n\nDelvingless no longer :smiley:. \n\n[quote=\"Sosthene, post:2, topic:877\"]\nand put a placeholder scriptpubkey (basically the pubkey computed from a NUMS) in the actual unsigned transaction, to allow for accurate fee calculation.\n[/quote]\n\nI think we shouldn't do this because if PSBT_OUT_SCRIPT is in the PSBT then older version implementations would still sign it and ignore the actual silent payment field. That is why PSBT_OUT_SCRIPT must now be optional for outputs when the constructor adds them. Once the outputs are generated, the Inputs Modifiable Flag is set to False so no input changes can invalidate the computed silent payment addresses. The new Silent Payments Modifiable Flag is set to False as well so no new silent payment outputs can be added. This makes it so the outputs only need to be generated once.\nAs for fee calculation, anything computing the weight can just use the taproot output size for any silent payment output.\n\n[quote=\"josibake, post:3, topic:877\"]\n[quote=\"Sosthene, post:2, topic:877\"]\nI think that since psbt already saves basically all relevant information about the prevout, discriminating between eligible or non eligible prevout will be easy\n[/quote]\n\nThis is one I need to double-check: does the PSBT provide enough information about the prevout for us to ensure the output being spent is not a segwit witness version > 1, for example?\n[/quote]\n\nWe can get the information we need to determine if an output being spent is not a segwit witness version > 1, but it will require us to merge the Constructor and Updater roles.\nIn my draft, the Constructor and Updater are responsible for maintaining mutual exclusion between silent payment outputs, and inputs that are either ANYONECANSPEND or Segwit version > 1. A PSBT can't have both, and this is maintained with the new flags Silent Payments Modifiable and Has Silent Payments.\nThe Constructor can set Has Silent Payments if it adds a silent payment output, and the Updater can check this flag and refuse to add ANYONECANSPEND sighash flags to any inputs if set. Vice-versa with Updater setting Silent Payments Modifiable to False if it adds ANYONECANSPEND, and then the Constructor can't add any Silent Payment Outputs.\nThis won't work for Segwit version > 1 inputs though, since the Constructor can only add the outpoint as an input, and the Updater is responsible for adding the input's scriptPubkey. If the scriptPubkey is a Segwit version > 1, it's too late because the input is already added. This would result in a malformed PSBT. Not sure how to proceed with this.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 438,
  "hidden": false,
  "trust_level": 0,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}