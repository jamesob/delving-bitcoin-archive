{
  "id": 2497,
  "name": "josie",
  "username": "josibake",
  "avatar_template": "/user_avatar/delvingbitcoin.org/josibake/{size}/83_2.png",
  "created_at": "2024-05-22T11:38:16.485Z",
  "cooked": "<p>Thanks for posting! Still need to read through the linked proposal, but some initial thoughts:</p>\n<aside class=\"quote no-group\" data-username=\"setavenger\" data-post=\"1\" data-topic=\"891\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/setavenger/48/573_2.png\" class=\"avatar\"> setavenger:</div>\n<blockquote>\n<p>Fetch the tweaks (possibly filtered for dust limit)</p>\n</blockquote>\n</aside>\n<p>Ideally, this is a parameter set by the client. If bandwidth isn\u2019t a concern for the client, they may want to know about <em>any</em> silent payment (e.g. <code>dust_limit=0</code>). For a more bandwidth constrained client, they may only be interested in pulling in UTXOs to the wallet that would be immediately spendable and set something much higher (e.g. <code>dust_limit=5000</code>), or may want to avoid UTXOs that were created as part of a dusting attack.</p>\n<aside class=\"quote no-group\" data-username=\"setavenger\" data-post=\"1\" data-topic=\"891\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/setavenger/48/573_2.png\" class=\"avatar\"> setavenger:</div>\n<blockquote>\n<p>Fetch taproot-only filter (BIP 158)</p>\n</blockquote>\n</aside>\n<p>Do you have any numbers for how using a taproot filter vs an off-the-shelf BIP158 filter impacts the bandwidth? If it\u2019s not much of a difference, we might be better off reusing BIP158 filters as is, since there is an existing use case for these and nodes already create them. Furthermore, as taproot adoption increases, I would expect the size difference between a BIP158 filter and a taproot-only filter to be negligible.</p>\n<aside class=\"quote no-group\" data-username=\"setavenger\" data-post=\"1\" data-topic=\"891\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/setavenger/48/573_2.png\" class=\"avatar\"> setavenger:</div>\n<blockquote>\n<p>Fetch simplified UTXOs</p>\n</blockquote>\n</aside>\n<p>I\u2019m assuming you\u2019re fetching simplified UTXOs here so that you can scan with labels, since this requires access to the transaction outputs? An alternative would be to just request the full block as soon as you get a hit: this would allow the client to scan with labels since they would have the full transactions, and the client would also have all the necessary information needed for spending the transaction.</p>\n<p>More of a general comment: is there every a reason a client would want the tweak data and not a filter or vice versa? If not, seems better to always give them to the client together.</p>",
  "post_number": 3,
  "post_type": 1,
  "updated_at": "2024-05-22T11:38:16.485Z",
  "reply_count": 1,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 10,
  "readers_count": 9,
  "score": 6.8,
  "yours": false,
  "topic_id": 891,
  "topic_slug": "silent-payments-light-client-protocol",
  "topic_title": "Silent Payments: Light Client Protocol",
  "topic_html_title": "Silent Payments: Light Client Protocol",
  "category_id": 12,
  "display_username": "josie",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Thanks for posting! Still need to read through the linked proposal, but some initial thoughts:\n\n\n[quote=\"setavenger, post:1, topic:891\"]\nFetch the tweaks (possibly filtered for dust limit)\n[/quote]\n\nIdeally, this is a parameter set by the client. If bandwidth isn't a concern for the client, they may want to know about *any* silent payment (e.g. `dust_limit=0`). For a more bandwidth constrained client, they may only be interested in pulling in UTXOs to the wallet that would be immediately spendable and set something much higher (e.g. `dust_limit=5000`), or may want to avoid UTXOs that were created as part of a dusting attack.\n[quote=\"setavenger, post:1, topic:891\"]\nFetch taproot-only filter (BIP 158)\n[/quote]\n\nDo you have any numbers for how using a taproot filter vs an off-the-shelf BIP158 filter impacts the bandwidth? If it's not much of a difference, we might be better off reusing BIP158 filters as is, since there is an existing use case for these and nodes already create them. Furthermore, as taproot adoption increases, I would expect the size difference between a BIP158 filter and a taproot-only filter to be negligible.\n[quote=\"setavenger, post:1, topic:891\"]\nFetch simplified UTXOs\n[/quote]\n\nI'm assuming you're fetching simplified UTXOs here so that you can scan with labels, since this requires access to the transaction outputs? An alternative would be to just request the full block as soon as you get a hit: this would allow the client to scan with labels since they would have the full transactions, and the client would also have all the necessary information needed for spending the transaction.\n\nMore of a general comment: is there every a reason a client would want the tweak data and not a filter or vice versa? If not, seems better to always give them to the client together.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 92,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}