{
  "id": 2502,
  "name": "",
  "username": "setavenger",
  "avatar_template": "/user_avatar/delvingbitcoin.org/setavenger/{size}/573_2.png",
  "created_at": "2024-05-22T12:50:23.497Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"josibake\" data-post=\"3\" data-topic=\"891\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/josibake/48/83_2.png\" class=\"avatar\"> josibake:</div>\n<blockquote>\n<p>Ideally, this is a parameter set by the client.</p>\n</blockquote>\n</aside>\n<p>BlindBit does exactly this. I will make sure that this is emphasised in the Specification.</p>\n<aside class=\"quote no-group\" data-username=\"josibake\" data-post=\"3\" data-topic=\"891\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/josibake/48/83_2.png\" class=\"avatar\"> josibake:</div>\n<blockquote>\n<p>Do you have any numbers for how using a taproot filter vs an off-the-shelf BIP158 filter impacts the bandwidth?</p>\n</blockquote>\n</aside>\n<p>Not yet. I will try to get some numbers.</p>\n<aside class=\"quote no-group\" data-username=\"josibake\" data-post=\"3\" data-topic=\"891\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/josibake/48/83_2.png\" class=\"avatar\"> josibake:</div>\n<blockquote>\n<p>I\u2019m assuming you\u2019re fetching simplified UTXOs here so that you can scan with labels, since this requires access to the transaction outputs? An alternative would be to just request the full block as soon as you get a hit: this would allow the client to scan with labels since they would have the full transactions, and the client would also have all the necessary information needed for spending the transaction.</p>\n</blockquote>\n</aside>\n<p>The main idea was to reduce bandwidth. I wanted to condense the block in such a way that only the relevant information is included. Downloading the entire block would probably include quite a bit of information that the light client will never need. I believe, having raw block data would also require the light client to do some extra work with regards to parsing and finding eligible transactions, right? With the current specification the client can directly use all the information and has to do minimal work on its own side. With this method the client still finds all labels and can immediately spend as well.</p>\n<p>Also in general simplified UTXOs might not be the correct wording for this. The basic idea is that it\u2019s a data structure which contains all necessary information to find and properly spend a UTXO.</p>\n<aside class=\"quote no-group\" data-username=\"josibake\" data-post=\"3\" data-topic=\"891\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/josibake/48/83_2.png\" class=\"avatar\"> josibake:</div>\n<blockquote>\n<p>More of a general comment: is there every a reason a client would want the tweak data and not a filter or vice versa? If not, seems better to always give them to the client together.</p>\n</blockquote>\n</aside>\n<p>This is probably an artefact from testnet, as there are a lot of blocks were no tweaks exist and we can save bandwidth by not requesting filters. On mainnet this is not the case. Apart from that I can\u2019t think of a good reason. I will merge those two steps into one.</p>",
  "post_number": 5,
  "post_type": 1,
  "updated_at": "2024-05-22T12:50:23.497Z",
  "reply_count": 0,
  "reply_to_post_number": 3,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 12,
  "readers_count": 11,
  "score": 2.4,
  "yours": false,
  "topic_id": 891,
  "topic_slug": "silent-payments-light-client-protocol",
  "topic_title": "Silent Payments: Light Client Protocol",
  "topic_html_title": "Silent Payments: Light Client Protocol",
  "category_id": 12,
  "display_username": "",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"josibake, post:3, topic:891\"]\nIdeally, this is a parameter set by the client.\n[/quote]\n\nBlindBit does exactly this. I will make sure that this is emphasised in the Specification.\n\n[quote=\"josibake, post:3, topic:891\"]\nDo you have any numbers for how using a taproot filter vs an off-the-shelf BIP158 filter impacts the bandwidth?\n[/quote]\n\nNot yet. I will try to get some numbers.\n\n[quote=\"josibake, post:3, topic:891\"]\nI\u2019m assuming you\u2019re fetching simplified UTXOs here so that you can scan with labels, since this requires access to the transaction outputs? An alternative would be to just request the full block as soon as you get a hit: this would allow the client to scan with labels since they would have the full transactions, and the client would also have all the necessary information needed for spending the transaction.\n[/quote]\n\nThe main idea was to reduce bandwidth. I wanted to condense the block in such a way that only the relevant information is included. Downloading the entire block would probably include quite a bit of information that the light client will never need. I believe, having raw block data would also require the light client to do some extra work with regards to parsing and finding eligible transactions, right? With the current specification the client can directly use all the information and has to do minimal work on its own side. With this method the client still finds all labels and can immediately spend as well.\n\nAlso in general simplified UTXOs might not be the correct wording for this. The basic idea is that it's a data structure which contains all necessary information to find and properly spend a UTXO.\n\n[quote=\"josibake, post:3, topic:891\"]\nMore of a general comment: is there every a reason a client would want the tweak data and not a filter or vice versa? If not, seems better to always give them to the client together.\n[/quote]\n\nThis is probably an artefact from testnet, as there are a lot of blocks were no tweaks exist and we can save bandwidth by not requesting filters. On mainnet this is not the case. Apart from that I can't think of a good reason. I will merge those two steps into one.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 435,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}