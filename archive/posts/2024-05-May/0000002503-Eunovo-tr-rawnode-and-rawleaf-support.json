{
  "id": 2503,
  "name": "Oghenovo Usiwoma",
  "username": "Eunovo",
  "avatar_template": "/user_avatar/delvingbitcoin.org/eunovo/{size}/375_2.png",
  "created_at": "2024-05-22T15:25:38.310Z",
  "cooked": "<p>Previous discussions on <a href=\"https://github.com/bitcoin/bitcoin/issues/24114\" rel=\"noopener nofollow ugc\">Issue 24114</a> and <a href=\"https://gist.github.com/sipa/06c5c844df155d4e5044c2c8cac9c05e#partial-descriptors\" rel=\"noopener nofollow ugc\">Partial Descriptors Gist</a> suggests two new descriptors for <code>tr()</code>:</p>\n<ul>\n<li><code>rawnode(HEXHASH)</code> which allows the specification of a branch using the merkle hash</li>\n<li><code>rawleaf(HEXSCRIPT,[HEXLEAFVER])</code> which allows the addition of raw scripts with different leaf versions</li>\n</ul>\n<p>Arguments for <code>rawnode()</code> include:</p>\n<ul>\n<li>Adding support for Need-to-Know-Branches (N2KB) see <a href=\"https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-793027851\" rel=\"noopener nofollow ugc\">Jeremy\u2019s comment on 21365</a></li>\n<li>Allowing users to specify TR trees with omitted information</li>\n<li>Allowing users to simplify TR trees<br>\nAs an example, this descriptor:</li>\n</ul>\n<pre><code class=\"lang-auto\">tr(\n  5a1e61f898173040e20616d43e9f496fba90338a39faa1ed98fcbaeee4dd9be5,{\n    multi_a(\n      2,\n      tprv8btqJtFL5n1drr8jP95PBgTitQiCJyxDb27gGhbXM2vacGt3gV2Bfs5PHSBt6LbpPs5fUb4hGhD5TXudLrisjd14qtM8EZ3nVSv31jhLuop/*,\n      415f59b2ce1ad8f714fd40b71865937dd911ad4742724cead5db936f73029d1e,1a3569fb509ababa09cf896c0a66619d0a01fd235d26b479a42503670beb9754\n    ),\n   {\n     {\n       and_v(\n         v:older(4320),\n         multi_a(\n           2,\n           ae3f20aee8d8798ceafb1671bf5607a45794676498e2edfac042958f7407ee1c,\n           tpubD8asTJHaE9hJkKAXGnjyb67qTSE8UK98AKiTZDdpmJiySm8pJsqmrMhFTZV9cQyCdisA71G9bjGCZXcjXgFWCfjK5rfxVYmbnA5XikwzEHt/*\n         )\n       ),\n       and_v(\n         v:older(4320),\n         multi_a(\n           2,\n           ae3f20aee8d8798ceafb1671bf5607a45794676498e2edfac042958f7407ee1c,\n           415f59b2ce1ad8f714fd40b71865937dd911ad4742724cead5db936f73029d1e\n         )\n       )\n    },\n    {\n      and_v(\n        v:older(4320),\n        multi_a(\n          2,\n          ae3f20aee8d8798ceafb1671bf5607a45794676498e2edfac042958f7407ee1c,\n          1a3569fb509ababa09cf896c0a66619d0a01fd235d26b479a42503670beb9754\n        )\n      ),\n      and_v(\n        v:older(12960),\n        pk(ae3f20aee8d8798ceafb1671bf5607a45794676498e2edfac042958f7407ee1c)\n      )\n    }\n  }\n})#vz6zss2j\n</code></pre>\n<p>has been reduced to:</p>\n<pre><code class=\"lang-auto\">tr(\n  5a1e61f898173040e20616d43e9f496fba90338a39faa1ed98fcbaeee4dd9be5,\n    {\n        multi_a(\n          2,\n          tprv8btqJtFL5n1drr8jP95PBgTitQiCJyxDb27gGhbXM2vacGt3gV2Bfs5PHSBt6LbpPs5fUb4hGhD5TXudLrisjd14qtM8EZ3nVSv31jhLuop/*,\n          415f59b2ce1ad8f714fd40b71865937dd911ad4742724cead5db936f73029d1e,\n          1a3569fb509ababa09cf896c0a66619d0a01fd235d26b479a42503670beb9754\n        ),\n        rawnode(8a62dc0a100c4156cc2a4b7c2a97747ce0dfe90562673fd662678aaae93121fb)\n    }\n)\n</code></pre>\n<p>See <a href=\"https://github.com/Eunovo/tr-partial-descriptors-test/blob/2449ccddbe7132fa20c2f607e2a807542f07f875/src/main.py#L17-L59\" rel=\"noopener nofollow ugc\">test case verifying this</a></p>\n<p>While it would seem that <code>rawleaf</code> offers no advantage since we have <code>rawnode</code>, <a class=\"mention\" href=\"/u/sipa\">@sipa</a> makes the argument that since the script and leaf version can be communicated via PSBTs, then descriptors should also be able to pass this information <a href=\"https://github.com/bitcoin/bitcoin/issues/24114#issuecomment-1038441246\" rel=\"noopener nofollow ugc\">See Sipa\u2019s comment on 24114</a></p>\n<p>There\u2019s an unanswered question about whether <code>rawleaf(HEXSCRIPT,[HEXLEAFVER])</code> should just be <code>raw()</code> that takes an optional <code>HEXLEAFVER</code> under <code>tr()</code> but I prefer <code>rawleaf</code> to avoid overloading the <code>raw()</code> descriptor.</p>\n<h2><a name=\"implementation-1\" class=\"anchor\" href=\"#implementation-1\"></a>Implementation</h2>\n<p>I have created a PoC here <a href=\"https://github.com/Eunovo/bitcoin/tree/wip-tr-raw-nodes\" rel=\"noopener nofollow ugc\">wip-tr-raw-nodes</a>, see <a href=\"https://github.com/bitcoin/bitcoin/compare/master...Eunovo:bitcoin:wip-tr-raw-nodes\" rel=\"noopener nofollow ugc\">diff</a>.  I created two new <code>DescriptorImpl</code> subclasses, <code>RawNodeDescriptor</code> and <code>RawLeafDescriptor</code>. Both are only valid under <code>P2TR</code> context and can be inferred by <code>InferDescriptor</code>.</p>\n<h3><a name=\"descriptor-inference-2\" class=\"anchor\" href=\"#descriptor-inference-2\"></a>Descriptor Inference</h3>\n<ul>\n<li>If no taptree is inferred, and the Merkle root is not null, then <code>tr(internal_key,rawnode(merkle_root))</code> is returned instead of the previous  <code>rawtr(tr_public_key)</code>. I am not sure if this should be the case. <em>What advantage does inferring <code>tr(internal_key,rawnode(merkle_root))</code> have over inferring <code>rawtr(tr_public_key)</code>?</em></li>\n<li><code>rawleaf</code> is inferred after no standard scripts could be inferred under a <code>P2TR</code> context.</li>\n</ul>",
  "post_number": 1,
  "post_type": 1,
  "updated_at": "2024-05-22T15:25:38.310Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 4,
  "reads": 16,
  "readers_count": 15,
  "score": 83.2,
  "yours": false,
  "topic_id": 901,
  "topic_slug": "tr-rawnode-and-rawleaf-support",
  "topic_title": "Tr(): rawnode() and rawleaf() support",
  "topic_html_title": "Tr(): rawnode() and rawleaf() support",
  "category_id": 8,
  "display_username": "Oghenovo Usiwoma",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Previous discussions on [Issue 24114](https://github.com/bitcoin/bitcoin/issues/24114) and [Partial Descriptors Gist](https://gist.github.com/sipa/06c5c844df155d4e5044c2c8cac9c05e#partial-descriptors) suggests two new descriptors for `tr()`:\n- `rawnode(HEXHASH)` which allows the specification of a branch using the merkle hash\n- `rawleaf(HEXSCRIPT,[HEXLEAFVER])` which allows the addition of raw scripts with different leaf versions\n\nArguments for `rawnode()` include:\n- Adding support for Need-to-Know-Branches (N2KB) see [Jeremy's comment on 21365](https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-793027851)\n- Allowing users to specify TR trees with omitted information\n- Allowing users to simplify TR trees  \nAs an example, this descriptor:\n```\ntr(\n  5a1e61f898173040e20616d43e9f496fba90338a39faa1ed98fcbaeee4dd9be5,{\n    multi_a(\n      2,\n      tprv8btqJtFL5n1drr8jP95PBgTitQiCJyxDb27gGhbXM2vacGt3gV2Bfs5PHSBt6LbpPs5fUb4hGhD5TXudLrisjd14qtM8EZ3nVSv31jhLuop/*,\n      415f59b2ce1ad8f714fd40b71865937dd911ad4742724cead5db936f73029d1e,1a3569fb509ababa09cf896c0a66619d0a01fd235d26b479a42503670beb9754\n    ),\n   {\n     {\n       and_v(\n         v:older(4320),\n         multi_a(\n           2,\n           ae3f20aee8d8798ceafb1671bf5607a45794676498e2edfac042958f7407ee1c,\n           tpubD8asTJHaE9hJkKAXGnjyb67qTSE8UK98AKiTZDdpmJiySm8pJsqmrMhFTZV9cQyCdisA71G9bjGCZXcjXgFWCfjK5rfxVYmbnA5XikwzEHt/*\n         )\n       ),\n       and_v(\n         v:older(4320),\n         multi_a(\n           2,\n           ae3f20aee8d8798ceafb1671bf5607a45794676498e2edfac042958f7407ee1c,\n           415f59b2ce1ad8f714fd40b71865937dd911ad4742724cead5db936f73029d1e\n         )\n       )\n    },\n    {\n      and_v(\n        v:older(4320),\n        multi_a(\n          2,\n          ae3f20aee8d8798ceafb1671bf5607a45794676498e2edfac042958f7407ee1c,\n          1a3569fb509ababa09cf896c0a66619d0a01fd235d26b479a42503670beb9754\n        )\n      ),\n      and_v(\n        v:older(12960),\n        pk(ae3f20aee8d8798ceafb1671bf5607a45794676498e2edfac042958f7407ee1c)\n      )\n    }\n  }\n})#vz6zss2j\n```\nhas been reduced to:\n```\ntr(\n  5a1e61f898173040e20616d43e9f496fba90338a39faa1ed98fcbaeee4dd9be5,\n    {\n        multi_a(\n          2,\n          tprv8btqJtFL5n1drr8jP95PBgTitQiCJyxDb27gGhbXM2vacGt3gV2Bfs5PHSBt6LbpPs5fUb4hGhD5TXudLrisjd14qtM8EZ3nVSv31jhLuop/*,\n          415f59b2ce1ad8f714fd40b71865937dd911ad4742724cead5db936f73029d1e,\n          1a3569fb509ababa09cf896c0a66619d0a01fd235d26b479a42503670beb9754\n        ),\n        rawnode(8a62dc0a100c4156cc2a4b7c2a97747ce0dfe90562673fd662678aaae93121fb)\n    }\n)\n```\nSee [test case verifying this](https://github.com/Eunovo/tr-partial-descriptors-test/blob/2449ccddbe7132fa20c2f607e2a807542f07f875/src/main.py#L17-L59)\n\nWhile it would seem that `rawleaf` offers no advantage since we have `rawnode`, @sipa makes the argument that since the script and leaf version can be communicated via PSBTs, then descriptors should also be able to pass this information [See Sipa's comment on 24114](https://github.com/bitcoin/bitcoin/issues/24114#issuecomment-1038441246)\n\nThere's an unanswered question about whether `rawleaf(HEXSCRIPT,[HEXLEAFVER])` should just be `raw()` that takes an optional `HEXLEAFVER` under `tr()` but I prefer `rawleaf` to avoid overloading the `raw()` descriptor.\n\n## Implementation\nI have created a PoC here [wip-tr-raw-nodes](https://github.com/Eunovo/bitcoin/tree/wip-tr-raw-nodes), see [diff](https://github.com/bitcoin/bitcoin/compare/master...Eunovo:bitcoin:wip-tr-raw-nodes).  I created two new `DescriptorImpl` subclasses, `RawNodeDescriptor` and `RawLeafDescriptor`. Both are only valid under `P2TR` context and can be inferred by `InferDescriptor`. \n\n### Descriptor Inference\n- If no taptree is inferred, and the Merkle root is not null, then `tr(internal_key,rawnode(merkle_root))` is returned instead of the previous  `rawtr(tr_public_key)`. I am not sure if this should be the case. *What advantage does inferring `tr(internal_key,rawnode(merkle_root))` have over inferring `rawtr(tr_public_key)`?*\n- `rawleaf` is inferred after no standard scripts could be inferred under a `P2TR` context.",
  "actions_summary": [
    {
      "id": 2,
      "count": 2
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 312,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 2
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 2,
  "current_user_used_main_reaction": false
}