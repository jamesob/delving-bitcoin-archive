{
  "id": 2534,
  "name": "Gregory Sanders",
  "username": "instagibbs",
  "avatar_template": "/user_avatar/delvingbitcoin.org/instagibbs/{size}/28_2.png",
  "created_at": "2024-05-24T18:13:42.370Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"ajtowns\" data-post=\"16\" data-topic=\"190\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ajtowns/48/417_2.png\" class=\"avatar\"> ajtowns:</div>\n<blockquote>\n<p>(2) a \u201cnew\u201d issue where you <strong>would</strong> replace high-feerate V with low-feerate E, despite that being something RBF rules are designed to prevent.</p>\n</blockquote>\n</aside>\n<p>Trying to spell out a bit why we want to prevent this kind of replacement:</p>\n<ol>\n<li>It breaks user expectations where what appears to be a non-incentive compatible RBF occurs resulting in a ANYONECANPAY-style RBF legacy mempool issue.</li>\n<li>Even if we handwave away anti-DoS rules, it would require the defender to rebroadcast <code>V</code>, resulting in it being evicted then immediately re-admitted. We should have just kept <code>V</code> to begin with.</li>\n</ol>\n<p>Another few ideas in ascending non-credibleness:</p>\n<ul>\n<li>TRUC, but where the topology is simply restricted to some size/shape where we can always do optimal linearization</li>\n<li>\u201ctop block\u201d(v4): <code>E</code> was in a top-block chunk anyways</li>\n<li>When an RBF is being executed by a chunk connecting to a cluster, if the cluster is not optimally linearized, <em>add maybe onerous RBF constraint here</em>.</li>\n<li>Somehow allow old diagram to \u201clearn\u201d about chunk <span class=\"math\">[P,B,C]</span> when new diagram does, letting existing mempool take advantage of the additional work being done</li>\n</ul>",
  "post_number": 17,
  "post_type": 1,
  "updated_at": "2024-05-24T18:13:42.370Z",
  "reply_count": 0,
  "reply_to_post_number": 16,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 9,
  "readers_count": 8,
  "score": 1.8,
  "yours": false,
  "topic_id": 190,
  "topic_slug": "post-clustermempool-package-rbf-per-chunk-processing",
  "topic_title": "Post-clustermempool package RBF: per-chunk processing",
  "topic_html_title": "Post-clustermempool package RBF: per-chunk processing",
  "category_id": 8,
  "display_username": "Gregory Sanders",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"ajtowns, post:16, topic:190\"]\n(2) a \u201cnew\u201d issue where you **would** replace high-feerate V with low-feerate E, despite that being something RBF rules are designed to prevent.\n[/quote]\n\nTrying to spell out a bit why we want to prevent this kind of replacement:\n1) It breaks user expectations where what appears to be a non-incentive compatible RBF occurs resulting in a ANYONECANPAY-style RBF legacy mempool issue.\n2) Even if we handwave away anti-DoS rules, it would require the defender to rebroadcast `V`, resulting in it being evicted then immediately re-admitted. We should have just kept `V` to begin with.\n\nAnother few ideas in ascending non-credibleness:\n- TRUC, but where the topology is simply restricted to some size/shape where we can always do optimal linearization\n- \"top block\"(v4): `E` was in a top-block chunk anyways\n- When an RBF is being executed by a chunk connecting to a cluster, if the cluster is not optimally linearized, *add maybe onerous RBF constraint here*.\n- Somehow allow old diagram to \"learn\" about chunk $[P,B,C]$ when new diagram does, letting existing mempool take advantage of the additional work being done",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 31,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}