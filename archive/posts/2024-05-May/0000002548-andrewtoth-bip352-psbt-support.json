{
  "id": 2548,
  "name": "Andrew Toth",
  "username": "andrewtoth",
  "avatar_template": "/user_avatar/delvingbitcoin.org/andrewtoth/{size}/576_2.png",
  "created_at": "2024-05-27T22:08:12.838Z",
  "cooked": "<aside class=\"quote no-group quote-modified\" data-username=\"josibake\" data-post=\"1\" data-topic=\"877\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/josibake/48/83_2.png\" class=\"avatar\"> josibake:</div>\n<blockquote>\n<h3>Access to the private keys</h3>\n<p>It\u2019s also worth mentioning that the <code>OutputGenerator</code> <em>might</em> not need access to the private keys, but can accept something like an \u201cECDH share\u201d:</p>\n<p>a_{sum} = a_1 + a_2 + \u2026 + a_n \\ a_{sum} \\cdot B_{scan} = a_1 \\cdot B_{scan} + a_2 \\cdot B_{scan} + \u2026 + a_n \\cdot B_{scan}</p>\n<p>asum=a1+a2+\u2026+anasum\u22c5Bscan=a1\u22c5Bscan+a2\u22c5Bscan+\u2026+an\u22c5Bscana_{sum} = a_1 + a_2 + \u2026 + a_n \\ a_{sum} \\cdot B_{scan} = a_1 \\cdot B_{scan} + a_2 \\cdot B_{scan} + \u2026 + a_n \\cdot B_{scan}</p>\n<p>So a signing device could return the ECDH share for a private key, instead of the full private key. Mentioning this as theoretically possible because this is not something that is provably secure and there are definite reasons to <em>not</em> have a signing device respond to Diffie-Hellman requests.</p>\n</blockquote>\n</aside>\n<p>This could work and could eliminate the need for the OutputGenerator role altogether- each output has a new field for the sum of ECDH shares. Each signer adds their share to the sum. The last signer to add their share can then also generate all the output scripts and add their signature, and then the PSBT can be given to all other signers again to add their signatures.\nBut, how does each signer know that the other signers have added their correct share to the sum for each output? Can we have a running DLEQ proof sum as well? Otherwise we would need to store a proof for each input for each output and can\u2019t just have a running sum for each output.</p>",
  "post_number": 6,
  "post_type": 1,
  "updated_at": "2024-05-27T22:13:47.258Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 5,
  "readers_count": 4,
  "score": 1.0,
  "yours": false,
  "topic_id": 877,
  "topic_slug": "bip352-psbt-support",
  "topic_title": "BIP352: PSBT support",
  "topic_html_title": "BIP352: PSBT support",
  "category_id": 12,
  "display_username": "Andrew Toth",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"josibake, post:1, topic:877\"]\n### Access to the private keys\n\nIt\u2019s also worth mentioning that the `OutputGenerator` *might* not need access to the private keys, but can accept something like an \u201cECDH share\u201d:\n\na_{sum} = a_1 + a_2 + ... + a_n \\\\ a_{sum} \\cdot B_{scan} = a_1 \\cdot B_{scan} + a_2 \\cdot B_{scan} + ... + a_n \\cdot B_{scan}\n\nasum=a1+a2+...+anasum\u22c5Bscan=a1\u22c5Bscan+a2\u22c5Bscan+...+an\u22c5Bscana_{sum} = a_1 + a_2 + ... + a_n \\\\ a_{sum} \\cdot B_{scan} = a_1 \\cdot B_{scan} + a_2 \\cdot B_{scan} + ... + a_n \\cdot B_{scan}\n\nSo a signing device could return the ECDH share for a private key, instead of the full private key. Mentioning this as theoretically possible because this is not something that is provably secure and there are definite reasons to *not* have a signing device respond to Diffie-Hellman requests.\n[/quote]\n\nThis could work and could eliminate the need for the OutputGenerator role altogether- each output has a new field for the sum of ECDH shares. Each signer adds their share to the sum. The last signer to add their share can then also generate all the output scripts and add their signature, and then the PSBT can be given to all other signers again to add their signatures.\nBut, how does each signer know that the other signers have added their correct share to the sum for each output? Can we have a running DLEQ proof sum as well? Otherwise we would need to store a proof for each input for each output and can't just have a running sum for each output.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 438,
  "hidden": false,
  "trust_level": 0,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}