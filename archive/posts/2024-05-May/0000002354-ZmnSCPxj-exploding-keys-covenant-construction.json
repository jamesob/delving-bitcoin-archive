{
  "id": 2354,
  "name": "ZmnSCPxj jxPCSnmZ",
  "username": "ZmnSCPxj",
  "avatar_template": "/letter_avatar_proxy/v4/letter/z/ee7513/{size}.png",
  "created_at": "2024-05-02T15:14:10.286Z",
  "cooked": "<p>Ah, I think I remember you mentioning this as similar to my <code>OP_EVICT</code> proposal before.</p>\n<p>A way to allow both for a 'splody-path spend and a tapleaf path spend would be to require <code>MuSig(outputs)</code> to be the internal pubkey of the spent input, rather than the direct output.  Then you only reveal the topmost <code>TapRoot</code> hash without revealing any scripts in the 'splody-path spend.  You can even have an option of:</p>\n<ul>\n<li>Only 'splody-path spend: the actual pubkey is the MuSig(outputs), on 'splody-path spend, you have an empty witness.\n<ul>\n<li>'splody-path spend: empty witness</li>\n<li>consensual everyone-signs: a witness, 64 bytes signature</li>\n</ul>\n</li>\n<li>'splody-path spend OR taproot spend: the actual pubkey is <code>P + hash(P | tagged_hash(\"TapRoot\", whatever))</code> and the internal pubkey <code>P</code> is the <code>MuSig(output)</code>\n<ul>\n<li>'splody-path spend: a witness, 32 bytes tagged hash output</li>\n<li>consensual everyone-signs: a witness, 64 bytes signature</li>\n<li>tapleaf: witnesses: control block with path to tapleaf, tapleaf script, tapleaf script witness stack</li>\n</ul>\n</li>\n</ul>",
  "post_number": 3,
  "post_type": 1,
  "updated_at": "2024-05-02T15:14:10.286Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 9,
  "readers_count": 8,
  "score": 1.8,
  "yours": false,
  "topic_id": 832,
  "topic_slug": "exploding-keys-covenant-construction",
  "topic_title": "Exploding Keys - Covenant construction",
  "topic_html_title": "Exploding Keys - Covenant construction",
  "category_id": 7,
  "display_username": "ZmnSCPxj jxPCSnmZ",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Ah, I think I remember you mentioning this as similar to my `OP_EVICT` proposal before.\n\nA way to allow both for a 'splody-path spend and a tapleaf path spend would be to require `MuSig(outputs)` to be the internal pubkey of the spent input, rather than the direct output.  Then you only reveal the topmost `TapRoot` hash without revealing any scripts in the 'splody-path spend.  You can even have an option of:\n\n* Only 'splody-path spend: the actual pubkey is the MuSig(outputs), on 'splody-path spend, you have an empty witness.\n  * 'splody-path spend: empty witness\n  * consensual everyone-signs: a witness, 64 bytes signature\n* 'splody-path spend OR taproot spend: the actual pubkey is `P + hash(P | tagged_hash(\"TapRoot\", whatever))` and the internal pubkey `P` is the `MuSig(output)`\n  * 'splody-path spend: a witness, 32 bytes tagged hash output\n  * consensual everyone-signs: a witness, 64 bytes signature\n  * tapleaf: witnesses: control block with path to tapleaf, tapleaf script, tapleaf script witness stack",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 104,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}