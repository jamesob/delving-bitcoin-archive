{
  "id": 2521,
  "name": "",
  "username": "setavenger",
  "avatar_template": "/user_avatar/delvingbitcoin.org/setavenger/{size}/573_2.png",
  "created_at": "2024-05-23T10:04:41.386Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"cygnet3\" data-post=\"8\" data-topic=\"891\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/cygnet3/48/575_2.png\" class=\"avatar\"> cygnet3:</div>\n<blockquote>\n<p>When testing out Blindbit oracle as a backend, we just convert the utxo array into a map and then loop over the values. That has the same structure as the json you posted. It could be simplified by removing <code>txid</code> from the output struct.</p>\n</blockquote>\n</aside>\n<p>Is there any noticeable overhead created by converting on the client side? I think we should benchmark these approaches to see how they compare. Then we can better say whether grouping should be a hard requirement on the indexing side.</p>\n<aside class=\"quote no-group\" data-username=\"cygnet3\" data-post=\"8\" data-topic=\"891\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/cygnet3/48/575_2.png\" class=\"avatar\"> cygnet3:</div>\n<blockquote>\n<p>If not using blindbit, we use a BIP158 client and request the full block, so that has the complete transaction structure.</p>\n</blockquote>\n</aside>\n<p>How does that approach work in general? Something like this?</p>\n<ol>\n<li>Fetch tweaks + Filters</li>\n<li>Create ScriptPubKeys (with mapping)</li>\n<li>Find match</li>\n<li>Download entire block</li>\n<li>Scan transactions and find outputs</li>\n</ol>\n<p>Where step 5 is optimised due to mapping and grouping. Did I get this right?</p>\n<p>You mentioned that you\u2019ve tried BlindBit Oracle as well, are there any noticeable differences in required bandwidth? With BlindBit the goal was to avoid downloading entire blocks to reduce bandwidth, but I never made an actual comparison.</p>",
  "post_number": 9,
  "post_type": 1,
  "updated_at": "2024-05-23T10:04:41.386Z",
  "reply_count": 0,
  "reply_to_post_number": 8,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 11,
  "readers_count": 10,
  "score": 2.2,
  "yours": false,
  "topic_id": 891,
  "topic_slug": "silent-payments-light-client-protocol",
  "topic_title": "Silent Payments: Light Client Protocol",
  "topic_html_title": "Silent Payments: Light Client Protocol",
  "category_id": 12,
  "display_username": "",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"cygnet3, post:8, topic:891\"]\nWhen testing out Blindbit oracle as a backend, we just convert the utxo array into a map and then loop over the values. That has the same structure as the json you posted. It could be simplified by removing `txid` from the output struct.\n[/quote]\n\nIs there any noticeable overhead created by converting on the client side? I think we should benchmark these approaches to see how they compare. Then we can better say whether grouping should be a hard requirement on the indexing side.\n\n[quote=\"cygnet3, post:8, topic:891\"]\nIf not using blindbit, we use a BIP158 client and request the full block, so that has the complete transaction structure.\n[/quote]\n\nHow does that approach work in general? Something like this?\n1. Fetch tweaks + Filters\n2. Create ScriptPubKeys (with mapping)\n3. Find match\n4. Download entire block\n5. Scan transactions and find outputs\n\nWhere step 5 is optimised due to mapping and grouping. Did I get this right?\n\nYou mentioned that you've tried BlindBit Oracle as well, are there any noticeable differences in required bandwidth? With BlindBit the goal was to avoid downloading entire blocks to reduce bandwidth, but I never made an actual comparison.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 435,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}