{
  "id": 2529,
  "name": "ProofOfKeags",
  "username": "ProofOfKeags",
  "avatar_template": "/user_avatar/delvingbitcoin.org/proofofkeags/{size}/156_2.png",
  "created_at": "2024-05-24T01:41:22.851Z",
  "cooked": "<p>Excellent analysis. I think that the uncontroversial common ground between the differing perspectives here is that the implementation complexity of anything that doesn\u2019t involve funding output conversion is very manageable. This is already reasonably well-specified in the Dynamic Commitments proposal, although I suspect there is room for improvement on the Commitment Transaction Re-Render process and as I finish the implementation for LND I\u2019ll likely add some details to that section.</p>\n<p>A couple of things I\u2019d like to note.</p>\n<p>First, the Dynamic Commitments proposal, as specified today, permits channel upgrades without a funding output spend if the channel types share the same funding output script. If you believe it doesn\u2019t read that way, I encourage you to leave commentary on the proposal about what part of that is confusing so I can clarify it.</p>\n<p>Second, there are reasons to upgrade to STCs from existing channel types, but lifetime fee cost savings, and privacy are probably not the reasons to do so, as you said. The main reason to do it would be if you wanted to preserve channel identity while also adding Taproot Assets to the channel state. This is admittedly a use case that is niche at the moment and I do not expect there to be a large appetite for this specific use case right now.</p>\n<p>Finally, the question of whether we need STCs to get to PTLCs is definitely a discussion we should have but it comes down to the appetite for maintaining another hybrid channel type whose inputs are p2wsh and whose htlc outputs are p2tr <em>in addition to</em> the channel type where both inputs and outputs are p2tr. Given that a full implementation of PTLCs requires implementing the lion\u2019s share of STCs anyway do we really want to have Anchors, Anchors+PTLCs, STCs, <em>AND</em> STCs+PTLCs? I imagine the answer here is no, but I could be wrong and other implementations should weigh in here.</p>",
  "post_number": 5,
  "post_type": 1,
  "updated_at": "2024-05-24T01:41:22.851Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 5,
  "readers_count": 4,
  "score": 0.8,
  "yours": false,
  "topic_id": 881,
  "topic_slug": "upgrading-existing-lightning-channels",
  "topic_title": "Upgrading Existing Lightning Channels",
  "topic_html_title": "Upgrading Existing Lightning Channels",
  "category_id": 7,
  "display_username": "ProofOfKeags",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Excellent analysis. I think that the uncontroversial common ground between the differing perspectives here is that the implementation complexity of anything that doesn't involve funding output conversion is very manageable. This is already reasonably well-specified in the Dynamic Commitments proposal, although I suspect there is room for improvement on the Commitment Transaction Re-Render process and as I finish the implementation for LND I'll likely add some details to that section.\n\nA couple of things I'd like to note.\n\nFirst, the Dynamic Commitments proposal, as specified today, permits channel upgrades without a funding output spend if the channel types share the same funding output script. If you believe it doesn't read that way, I encourage you to leave commentary on the proposal about what part of that is confusing so I can clarify it.\n\nSecond, there are reasons to upgrade to STCs from existing channel types, but lifetime fee cost savings, and privacy are probably not the reasons to do so, as you said. The main reason to do it would be if you wanted to preserve channel identity while also adding Taproot Assets to the channel state. This is admittedly a use case that is niche at the moment and I do not expect there to be a large appetite for this specific use case right now.\n\nFinally, the question of whether we need STCs to get to PTLCs is definitely a discussion we should have but it comes down to the appetite for maintaining another hybrid channel type whose inputs are p2wsh and whose htlc outputs are p2tr *in addition to* the channel type where both inputs and outputs are p2tr. Given that a full implementation of PTLCs requires implementing the lion's share of STCs anyway do we really want to have Anchors, Anchors+PTLCs, STCs, *AND* STCs+PTLCs? I imagine the answer here is no, but I could be wrong and other implementations should weigh in here.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 138,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}