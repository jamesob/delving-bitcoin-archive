{
  "id": 2437,
  "name": "",
  "username": "calle",
  "avatar_template": "/user_avatar/delvingbitcoin.org/calle/{size}/84_2.png",
  "created_at": "2024-05-17T10:28:36.680Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"EthnTuttle\" data-post=\"11\" data-topic=\"870\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ethntuttle/48/26_2.png\" class=\"avatar\"> EthnTuttle:</div>\n<blockquote>\n<p>Yes. I believe the TIDES documentation cover the weighting of shares as it relates to the <code>share_log_window</code> but accounting specifics would be left to the implementation. Since a blinded signature corresponds to a target difficulty, and TIDES uses the target difficulty as a weighting for valuation within a share_log_window, a <code>eShare</code> would not be a 1:1 for satoshis.</p>\n</blockquote>\n</aside>\n<p>Alright, I get it now. An alternative would have been to let the mint decide the values of blind signatures after the fact (the user doesn\u2019t have to decide on the value when sending the blind message). But I think your approach is more simple and doesn\u2019t require you to store the mint operator store all outstanding blind messages and imprint them with value after doing all the account. It\u2019s much better than my original idea I had discussed with you on GitHub!</p>",
  "post_number": 13,
  "post_type": 1,
  "updated_at": "2024-05-17T10:28:36.680Z",
  "reply_count": 0,
  "reply_to_post_number": 11,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 1,
  "readers_count": 0,
  "score": 0,
  "yours": false,
  "topic_id": 870,
  "topic_slug": "ecash-tides-using-cashu-and-stratum-v2",
  "topic_title": "Ecash TIDES using Cashu and Stratum v2",
  "topic_html_title": "Ecash TIDES using Cashu and Stratum v2",
  "category_id": 8,
  "display_username": "",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"EthnTuttle, post:11, topic:870\"]\nYes. I believe the TIDES documentation cover the weighting of shares as it relates to the `share_log_window` but accounting specifics would be left to the implementation. Since a blinded signature corresponds to a target difficulty, and TIDES uses the target difficulty as a weighting for valuation within a share_log_window, a `eShare` would not be a 1:1 for satoshis.\n[/quote]\n\nAlright, I get it now. An alternative would have been to let the mint decide the values of blind signatures after the fact (the user doesn't have to decide on the value when sending the blind message). But I think your approach is more simple and doesn't require you to store the mint operator store all outstanding blind messages and imprint them with value after doing all the account. It's much better than my original idea I had discussed with you on GitHub!",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 93,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}