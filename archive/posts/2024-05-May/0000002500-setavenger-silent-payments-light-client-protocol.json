{
  "id": 2500,
  "name": "",
  "username": "setavenger",
  "avatar_template": "/user_avatar/delvingbitcoin.org/setavenger/{size}/573_2.png",
  "created_at": "2024-05-22T12:19:45.923Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"cygnet3\" data-post=\"2\" data-topic=\"891\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/cygnet3/48/575_2.png\" class=\"avatar\"> cygnet3:</div>\n<blockquote>\n<p>Since Step 2 only calculates the <code>ScriptPubKey</code> for <code>k=0</code>, we still need to discover the <code>ScriptPubkey</code>s where <code>k&gt;0</code> in Step 6. The only way to do that is to group all the outputs of a transaction first, and then scan them at once.</p>\n</blockquote>\n</aside>\n<p>I\u2019m not sure I\u2019m understanding the problem you\u2019re describing. Scanning over all outputs you should 100% be able to find all outputs (also those with <code>k&lt;0</code>).\nblindbitd uses <a href=\"https://github.com/setavenger/go-bip352/blob/27de6d8b3f8aaf0d555e044d7d6edbf0ddb518a3/receive.go#L27\" rel=\"noopener nofollow ugc\">this function</a> to scan for outputs.</p>\n<p>edit: Looking a bit closer at my implementation, I think I see where the confusion comes from. blindbitd uses all taproot outputs of a block as an input for the scan function. Tweaks are not labeled with their corresponding txid. So we have to scan over all outputs of a block. Then you should always find all outputs. This means scanning over all outputs with <code>k&gt;0</code> as well. I believe the <a href=\"https://github.com/bitcoin/bitcoin/pull/28241\" rel=\"noopener nofollow ugc\">PR for Bitcoin core</a> does not store txids as well. In Oracle I have an index that stores the txid but only the tweaks are served to the client.</p>",
  "post_number": 4,
  "post_type": 1,
  "updated_at": "2024-05-22T12:27:25.752Z",
  "reply_count": 1,
  "reply_to_post_number": 2,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 7,
  "readers_count": 6,
  "score": 6.4,
  "yours": false,
  "topic_id": 891,
  "topic_slug": "silent-payments-light-client-protocol",
  "topic_title": "Silent Payments: Light Client Protocol",
  "topic_html_title": "Silent Payments: Light Client Protocol",
  "category_id": 12,
  "display_username": "",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"cygnet3, post:2, topic:891\"]\nSince Step 2 only calculates the `ScriptPubKey` for `k=0`, we still need to discover the `ScriptPubkey`s where `k>0` in Step 6. The only way to do that is to group all the outputs of a transaction first, and then scan them at once.\n[/quote]\n\nI'm not sure I'm understanding the problem you're describing. Scanning over all outputs you should 100% be able to find all outputs (also those with `k<0`).\nblindbitd uses [this function](https://github.com/setavenger/go-bip352/blob/27de6d8b3f8aaf0d555e044d7d6edbf0ddb518a3/receive.go#L27) to scan for outputs.\n\nedit: Looking a bit closer at my implementation, I think I see where the confusion comes from. blindbitd uses all taproot outputs of a block as an input for the scan function. Tweaks are not labeled with their corresponding txid. So we have to scan over all outputs of a block. Then you should always find all outputs. This means scanning over all outputs with `k>0` as well. I believe the [PR for Bitcoin core](https://github.com/bitcoin/bitcoin/pull/28241) does not store txids as well. In Oracle I have an index that stores the txid but only the tweaks are served to the client.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 435,
  "hidden": false,
  "trust_level": 0,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}