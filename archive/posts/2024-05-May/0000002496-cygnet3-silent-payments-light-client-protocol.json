{
  "id": 2496,
  "name": "",
  "username": "cygnet3",
  "avatar_template": "/user_avatar/delvingbitcoin.org/cygnet3/{size}/575_2.png",
  "created_at": "2024-05-22T11:33:27.271Z",
  "cooked": "<p>I have one minor nitpick about the format of the <code>utxos</code> endpoint from the spec, which is given as:</p>\n<pre data-code-wrap=\"json\"><code class=\"lang-json\">[\n  {\n    \"txid\": \"355cce4314a...\",\n    \"vout\": 1,\n    \"value\": 1000000,\n    \"scriptpubkey\": \"...\",\n    \"block_height\": 0,\n    \"block_hash\": \"...\",\n    \"timestamp\": 1715205985,\n    \"spent\": false\n  },\n  {\n    \"txid\": \"355cce4314a...\",\n    \"vout\": 2,\n    \"value\": 1000000,\n    \"scriptpubkey\": \"...\",\n    \"block_height\": 0,\n    \"block_hash\": \"...\",\n    \"timestamp\": 1715205985,\n    \"spent\": false\n  },\n  ...\n]\n</code></pre>\n<p>I think it\u2019s better to group the utxos by their <code>txid</code>. Since Step 2 only calculates the <code>ScriptPubKey</code> for <code>k=0</code>, we still need to discover the <code>ScriptPubkey</code>s where <code>k&gt;0</code> in Step 6. The only way to do that is to group all the outputs of a transaction first, and then scan them at once.</p>\n<p>Since the <code>utxos</code> aren\u2019t requested that often (only when the filter returns a match), it\u2019s not that much of a hassle to just group them on the client side. Still I think every client will have to do this, so might as well account for it.</p>",
  "post_number": 2,
  "post_type": 1,
  "updated_at": "2024-05-22T12:03:45.159Z",
  "reply_count": 1,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 17,
  "readers_count": 16,
  "score": 8.4,
  "yours": false,
  "topic_id": 891,
  "topic_slug": "silent-payments-light-client-protocol",
  "topic_title": "Silent Payments: Light Client Protocol",
  "topic_html_title": "Silent Payments: Light Client Protocol",
  "category_id": 12,
  "display_username": "",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "I have one minor nitpick about the format of the `utxos` endpoint from the spec, which is given as:\n\n```json\n[\n  {\n    \"txid\": \"355cce4314a...\",\n    \"vout\": 1,\n    \"value\": 1000000,\n    \"scriptpubkey\": \"...\",\n    \"block_height\": 0,\n    \"block_hash\": \"...\",\n    \"timestamp\": 1715205985,\n    \"spent\": false\n  },\n  {\n    \"txid\": \"355cce4314a...\",\n    \"vout\": 2,\n    \"value\": 1000000,\n    \"scriptpubkey\": \"...\",\n    \"block_height\": 0,\n    \"block_hash\": \"...\",\n    \"timestamp\": 1715205985,\n    \"spent\": false\n  },\n  ...\n]\n```\n\nI think it's better to group the utxos by their `txid`. Since Step 2 only calculates the `ScriptPubKey` for `k=0`, we still need to discover the `ScriptPubkey`s where `k>0` in Step 6. The only way to do that is to group all the outputs of a transaction first, and then scan them at once.\n\nSince the `utxos` aren't requested that often (only when the filter returns a match), it's not that much of a hassle to just group them on the client side. Still I think every client will have to do this, so might as well account for it.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 436,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}