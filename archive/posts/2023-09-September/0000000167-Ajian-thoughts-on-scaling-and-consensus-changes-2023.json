{
  "id": 167,
  "name": "Ajian",
  "username": "Ajian",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ajian/{size}/44_2.png",
  "created_at": "2023-09-02T14:34:46.182Z",
  "cooked": "<p>Nice job! Thank you for your contribution!</p>\n<p>Agree with that we need a consise way to exit from bitcoin banks, so CTV is very very useful. But that\u2019s not enough for making coinpool (congestion control pool) a useful contrsuction. Assume that I register some value with address A via CTV in a coinpool, when I want to leave this coinpool and go to address B, I will need an extra tx \u2013 it also cost some blockspace.</p>\n<p>So, we still need to develop the \u2018coinpool\u2019 concept, to ensure that it is useful.</p>\n<p>Obviously, there are two way to improve coinpools\u2019 utility. One is embracing APO, to enable internel payment within a coinpool while limiting its complexity. The other is construc committed addresses intentionally, e.g. <a href=\"https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-January/003810.html\" rel=\"noopener nofollow ugc\">swap in potentiam</a> (a kind of addresses sharing with LSP trustlessly), to reduce the need to go to another address (thus sending another tx).</p>\n<p>I wrote a post to discuss the \u2018coinpool\u2019 concept and the usage of APO and CTV. But it is in Chinese: <a href=\"https://github.com/btc-study/OP_QUESTION/discussions/1\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">\u9650\u5236\u6761\u6b3e\u4e0e \u201c\u591a\u4eba\u5171\u4eab\u7684 UTXO\u201d \u00b7 btc-study/OP_QUESTION \u00b7 Discussion #1 \u00b7 GitHub</a></p>",
  "post_number": 3,
  "post_type": 1,
  "updated_at": "2023-09-02T14:34:46.182Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 8,
  "readers_count": 7,
  "score": 0.2,
  "yours": false,
  "topic_id": 32,
  "topic_slug": "thoughts-on-scaling-and-consensus-changes-2023",
  "topic_title": "Thoughts on scaling and consensus changes (2023)",
  "topic_html_title": "Thoughts on scaling and consensus changes (2023)",
  "category_id": 7,
  "display_username": "Ajian",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": "",
  "bookmarked": false,
  "raw": "Nice job! Thank you for your contribution!\n\nAgree with that we need a consise way to exit from bitcoin banks, so CTV is very very useful. But that's not enough for making coinpool (congestion control pool) a useful contrsuction. Assume that I register some value with address A via CTV in a coinpool, when I want to leave this coinpool and go to address B, I will need an extra tx -- it also cost some blockspace.\n\nSo, we still need to develop the 'coinpool' concept, to ensure that it is useful.\n\nObviously, there are two way to improve coinpools' utility. One is embracing APO, to enable internel payment within a coinpool while limiting its complexity. The other is construc committed addresses intentionally, e.g. [swap in potentiam](https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-January/003810.html) (a kind of addresses sharing with LSP trustlessly), to reduce the need to go to another address (thus sending another tx).\n\nI wrote a post to discuss the 'coinpool' concept and the usage of APO and CTV. But it is in Chinese: https://github.com/btc-study/OP_QUESTION/discussions/1",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 56,
  "hidden": false,
  "trust_level": 0,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false
}