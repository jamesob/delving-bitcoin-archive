{
  "id": 205,
  "name": "James O'Beirne",
  "username": "jamesob",
  "avatar_template": "/user_avatar/delvingbitcoin.org/jamesob/{size}/271_2.png",
  "created_at": "2023-09-29T13:41:37.515Z",
  "cooked": "<p><a class=\"mention\" href=\"/u/ariard\">@ariard</a> writes on GitHub:</p>\n<blockquote>\n<p>If we can have an end-to-end proof-of-concept implementation of each use-case brought as a justification to the proposed soft-forked opcodes. Otherwise it\u2019s quite impossible to provide a sound technical review of the primitives robustness and trade-offs and state what they enable exactly. And it sounds we\u2019re good to repeat the loop of the last 3 or 4 years of covenants discussions.</p>\n<p>As a reminder, just to take the last example of channel factories, most of the folks who have done <em>real</em> research on the subject still disagree on the security model and fundamental trade-off of the proposed design of channel factories.</p>\n<p>As one of my technical peer challenged on the <a href=\"https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-September/020921.html\">mailing list</a> few months ago:</p>\n<p>\"So I think that means that part of the \u201cevaluation phase\u201d should involve\nimplementing real systems on top of the proposed change, so that you\ncan demonstrate real value from the change. It\u2019s easy to say that\n\u201cCTV can enable vaults\u201d or \u201cCTV can make opening a lightning channel\nnon-interactive\u201d \u2013 but it\u2019s harder to go from saying something\nis possible to actually making it happen, so, at least to me, it\nseems reasonable to be skeptical of people claiming benefits without\ndemonstrating they\u2019re achievable in practice.\u201d</p>\n<p>I\u2019m fully sharing this opinion.</p>\n</blockquote>\n<p>It\u2019s worth noting that two of the major use-cases I mention in the original post have test implementations:</p>\n<ul>\n<li>Vaults\n<ul>\n<li><code>opvault-demo</code>: <a href=\"https://github.com/jamesob/opvault-demo/\" class=\"inline-onebox\">GitHub - jamesob/opvault-demo: An example wallet using OP_VAULT</a></li>\n<li><code>simple-ctv-vault</code>: <a href=\"https://github.com/jamesob/simple-ctv-vault\" class=\"inline-onebox\">GitHub - jamesob/simple-ctv-vault: A simple vault structure using OP_CTV</a></li>\n</ul>\n</li>\n<li>LN-symmetry\n<ul>\n<li><a class=\"mention\" href=\"/u/instagibbs\">@instagibbs</a>\u2019 CLN implementation: <a href=\"https://github.com/instagibbs/lightning/tree/eltoo_support\" class=\"inline-onebox\">GitHub - instagibbs/lightning at eltoo_support</a></li>\n<li>Richard Meyers\u2019 test implementation: <a href=\"https://yakshaver.org/2021/07/26/first.html\" class=\"inline-onebox\">eltoo with Anyprevout and Taproot | Yakshaver.org</a></li>\n</ul>\n</li>\n</ul>\n<p>In my opinion, if all this fork did was enable these two use-cases (especially vaults), it would probably be worthwhile. But we know that indeed isn\u2019t the case, and some of the applications e.g. DLC efficiency improvements (<a href=\"https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-January/019808.html\">spec</a>), are  so straightforward that a demo implementation doesn\u2019t seem prerequisite to seeing the value of CTV as a primitive.</p>\n<p>Another more speculative use that has a demo implementation is spacechains (<a href=\"https://github.com/nbd-wtf/simple-ctv-spacechain\" class=\"inline-onebox\">GitHub - nbd-wtf/simple-ctv-spacechain: a demo of spacechain blind merged mined chains with CTV</a>).</p>",
  "post_number": 4,
  "post_type": 1,
  "posts_count": 25,
  "updated_at": "2023-09-29T13:41:37.515Z",
  "reply_count": 2,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 184,
  "reads": 76,
  "readers_count": 75,
  "score": 945.2,
  "yours": false,
  "topic_id": 98,
  "topic_slug": "covenant-tools-softfork",
  "topic_title": "Covenant tools softfork",
  "topic_html_title": "Covenant tools softfork",
  "category_id": 7,
  "display_username": "James O'Beirne",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "@ariard writes on GitHub:\n\n> If we can have an end-to-end proof-of-concept implementation of each use-case brought as a justification to the proposed soft-forked opcodes. Otherwise it\u2019s quite impossible to provide a sound technical review of the primitives robustness and trade-offs and state what they enable exactly. And it sounds we\u2019re good to repeat the loop of the last 3 or 4 years of covenants discussions.\n> \n> As a reminder, just to take the last example of channel factories, most of the folks who have done *real* research on the subject still disagree on the security model and fundamental trade-off of the proposed design of channel factories.\n> \n> As one of my technical peer challenged on the [mailing list](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-September/020921.html) few months ago:\n> \n> \"So I think that means that part of the \"evaluation phase\" should involve\n> implementing real systems on top of the proposed change, so that you\n> can demonstrate real value from the change. It's easy to say that\n> \"CTV can enable vaults\" or \"CTV can make opening a lightning channel\n> non-interactive\" -- but it's harder to go from saying something\n> is possible to actually making it happen, so, at least to me, it\n> seems reasonable to be skeptical of people claiming benefits without\n> demonstrating they're achievable in practice.\u201d\n> \n> I\u2019m fully sharing this opinion.\n\nIt's worth noting that two of the major use-cases I mention in the original post have test implementations:\n\n- Vaults\n  -  `opvault-demo`: https://github.com/jamesob/opvault-demo/\n  - `simple-ctv-vault`: https://github.com/jamesob/simple-ctv-vault\n- LN-symmetry\n  - @instagibbs' CLN implementation: https://github.com/instagibbs/lightning/tree/eltoo_support\n  - Richard Meyers' test implementation: https://yakshaver.org/2021/07/26/first.html\n\nIn my opinion, if all this fork did was enable these two use-cases (especially vaults), it would probably be worthwhile. But we know that indeed isn't the case, and some of the applications e.g. DLC efficiency improvements ([spec](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-January/019808.html)), are  so straightforward that a demo implementation doesn't seem prerequisite to seeing the value of CTV as a primitive.\n\nAnother more speculative use that has a demo implementation is spacechains (https://github.com/nbd-wtf/simple-ctv-spacechain).",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 9,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "<a class=\"mention\" href=\"/u/ariard\">@ariard</a> writes on GitHub: \n\nIf we can have an end-to-end proof-of-concept implementation of each use-case brought as a justification to the proposed soft-forked opcodes. Otherwise it\u2019s quite impossible to provide a sound technical review of the primitives robustness and trade-offs and state what the&hellip;",
  "truncated": true,
  "post_url": "/t/covenant-tools-softfork/98/4",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}