{
  "id": 209,
  "name": "Sjors Provoost",
  "username": "sjors",
  "avatar_template": "/user_avatar/delvingbitcoin.org/sjors/{size}/59_2.png",
  "created_at": "2023-09-29T18:08:28.969Z",
  "cooked": "<blockquote>\n<p>Yes, in the abstract miners may be able to elect to signal independently for each proposal</p>\n</blockquote>\n<p>I think we should strongly suggest one set of proposals (bits) to signal for. There would be a Bitcoin Core point release with certain bits turned on, which miners (or some advocating an alternative binary) should only tweak if they have a good reason. What I\u2019m arguing for is that we decide that set when the proposals are merged and ready to go, rather than upfront.</p>\n<p>The technical case for combining <code>CTV</code> with <code>OP_VAULT</code> seems stronger than the argument for combining <code>APO</code> with <code>CTV</code>. The narrow use case of <code>OP_VAULT</code> gives direction to <code>CTV</code>, in a similar way ln-symmetry gives direction to <code>APO</code>.</p>\n<p>Lines of code is one metric, and easy to measure, but with a soft-fork it\u2019s important to think through all the ways it can be used, its worst case resource consumption, etc. For that you probably want to look at a lot more stuff than just the code.</p>\n<p>In order to review APO well, I\u2019d probably want to do a deep dive into ln-symmetry, which means brushing up on my lightning knowledge.</p>\n<p>For CTV I might instead choose to <em>only</em> consider the OP_VAULT use case, since that\u2019s the only one I\u2019m currently interested in. But I\u2019d still want to feel comfortable that enough other people reviewed the plethora of other use cases you mentioned.</p>\n<p>That creates a dilemma if I had to choose between them: <code>CTV</code> + <code>OP_VAULT</code> is probably easier to grok than ANY_PREVOUT + ln-symmetry, but I\u2019m not super comfortable ignoring all the other CTV use cases during review. Now, having to review <em>both</em> just seems too daunting. In practice I would just end up approving some subset of the proposal. Hard to predict if review coverage over the whole proposal would end up equally distributed.</p>\n<p>Both proposals require thinking through the dilemma of whether we want to restrict them to an enumerated set of use cases, make them potentially flexible but without any guarantee they\u2019ll be useful (we\u2019re not running out of new op codes anytime soon), or thoroughly work out a broad set of conceivable use cases. Or some other way out of the dilemma. It\u2019s just hard to quantify how much thinking work that is (for starters, going though piles of mailinglist archives).</p>\n<p>Regarding the 4 year soft fork cycle: it used to be much quicker. And if you only consider the time between when a soft-fork proposal was reasonably fleshed out and it\u2019s time of activation, it\u2019s more like 1 or 2 years. Taproot was simpler than SegWit, but both were orders of magnitude more complicated than earlier proposals. I don\u2019t know how much we should attribute the recent slow deployments to drama, lack of energy or their complexity.</p>\n<blockquote>\n<p>CTV and APO have been extant long enough that there is broad consensus among most that both are safe changes</p>\n</blockquote>\n<p>I never looked at CTV code and only know APO at a high level (despite having done two technical podcast episodes on it). I\u2019m skeptical that \u201cenough\u201d people have looked at these proposals in enough nitty-gritty detail and actually tried to build things on top of it. At the same time I also don\u2019t really know how many people is \u201cenough\u201d.</p>\n<p>Are the opvault-demo and CLN implementation enough? I guess I\u2019d want to see two more. But then, Bitcoin Core didn\u2019t even have a SegWit wallet before that was deployed and activated. And how far along were lightning prototypes back then? So in that sense these two proposals may indeed be relatively mature.</p>\n<p>In other words, maybe one clearly useful demo project per proposed softfork <em>is</em> enough. Personally I\u2019d just have to more thoroughly review the proposals to determine if these demo\u2019s really exercise them well.</p>",
  "post_number": 8,
  "post_type": 1,
  "posts_count": 25,
  "updated_at": "2023-09-29T18:08:28.969Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 61,
  "readers_count": 60,
  "score": 12.2,
  "yours": false,
  "topic_id": 98,
  "topic_slug": "covenant-tools-softfork",
  "topic_title": "Covenant tools softfork",
  "topic_html_title": "Covenant tools softfork",
  "category_id": 7,
  "display_username": "Sjors Provoost",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "> Yes, in the abstract miners may be able to elect to signal independently for each proposal\n\nI think we should strongly suggest one set of proposals (bits) to signal for. There would be a Bitcoin Core point release with certain bits turned on, which miners (or some advocating an alternative binary) should only tweak if they have a good reason. What I'm arguing for is that we decide that set when the proposals are merged and ready to go, rather than upfront.\n\n\nThe technical case for combining `CTV` with `OP_VAULT` seems stronger than the argument for combining `APO` with `CTV`. The narrow use case of `OP_VAULT` gives direction to `CTV`, in a similar way ln-symmetry gives direction to `APO`.\n\nLines of code is one metric, and easy to measure, but with a soft-fork it's important to think through all the ways it can be used, its worst case resource consumption, etc. For that you probably want to look at a lot more stuff than just the code.\n\nIn order to review APO well, I'd probably want to do a deep dive into ln-symmetry, which means brushing up on my lightning knowledge.\n\nFor CTV I might instead choose to _only_ consider the OP_VAULT use case, since that's the only one I'm currently interested in. But I'd still want to feel comfortable that enough other people reviewed the plethora of other use cases you mentioned.\n\nThat creates a dilemma if I had to choose between them: `CTV` + `OP_VAULT` is probably easier to grok than ANY_PREVOUT + ln-symmetry, but I'm not super comfortable ignoring all the other CTV use cases during review. Now, having to review _both_ just seems too daunting. In practice I would just end up approving some subset of the proposal. Hard to predict if review coverage over the whole proposal would end up equally distributed.\n\nBoth proposals require thinking through the dilemma of whether we want to restrict them to an enumerated set of use cases, make them potentially flexible but without any guarantee they'll be useful (we're not running out of new op codes anytime soon), or thoroughly work out a broad set of conceivable use cases. Or some other way out of the dilemma. It's just hard to quantify how much thinking work that is (for starters, going though piles of mailinglist archives).\n\n\nRegarding the 4 year soft fork cycle: it used to be much quicker. And if you only consider the time between when a soft-fork proposal was reasonably fleshed out and it's time of activation, it's more like 1 or 2 years. Taproot was simpler than SegWit, but both were orders of magnitude more complicated than earlier proposals. I don't know how much we should attribute the recent slow deployments to drama, lack of energy or their complexity.\n\n\n\n> CTV and APO have been extant long enough that there is broad consensus among most that both are safe changes\n\nI never looked at CTV code and only know APO at a high level (despite having done two technical podcast episodes on it). I'm skeptical that \"enough\" people have looked at these proposals in enough nitty-gritty detail and actually tried to build things on top of it. At the same time I also don't really know how many people is \"enough\".\n\nAre the opvault-demo and CLN implementation enough? I guess I'd want to see two more. But then, Bitcoin Core didn't even have a SegWit wallet before that was deployed and activated. And how far along were lightning prototypes back then? So in that sense these two proposals may indeed be relatively mature.\n\nIn other words, maybe one clearly useful demo project per proposed softfork _is_ enough. Personally I'd just have to more thoroughly review the proposals to determine if these demo's really exercise them well.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 71,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Yes, in the abstract miners may be able to elect to signal independently for each proposal \n\nI think we should strongly suggest one set of proposals (bits) to signal for. There would be a Bitcoin Core point release with certain bits turned on, which miners (or some advocating an alternative binary)&hellip;",
  "truncated": true,
  "post_url": "/t/covenant-tools-softfork/98/8",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}