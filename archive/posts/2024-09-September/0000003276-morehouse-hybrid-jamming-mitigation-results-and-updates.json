{
  "id": 3276,
  "name": "Matt Morehouse",
  "username": "morehouse",
  "avatar_template": "/letter_avatar_proxy/v4/letter/m/df705f/{size}.png",
  "created_at": "2024-09-26T22:09:59.112Z",
  "cooked": "<aside class=\"quote no-group quote-modified\" data-username=\"carla\" data-post=\"1\" data-topic=\"1147\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/carla/48/119_2.png\" class=\"avatar\"> carla:</div>\n<blockquote>\n<h4>Manipulation - Surge Attack</h4>\n<p>We also <a href=\"https://github.com/carlaKC/reputation-fuzz/blob/fda5a8823a26fd6b6dc243f3035288523a5e50b6/fuzz_test.go#L116\" rel=\"noopener nofollow ugc\">fuzzed this attack</a> for ~24H (~22 billion execs) with the following conditions, and did not find any attacks where the targeted node loses revenue to the attack:</p>\n</blockquote>\n</aside>\n<p>I made an <a href=\"https://github.com/carlaKC/reputation-fuzz/pull/1\" rel=\"noopener nofollow ugc\">optimization</a> to the fuzz test and was able to find many surge attacks.  For example, here\u2019s one where the victim loses 50% of their revenue:</p>\n<pre data-code-wrap=\"shell\"><code class=\"lang-shell\">$ go test -run=FuzzSurgeAttack/e8e56d18133e\n27e4                                                                        \n--- FAIL: FuzzSurgeAttack (0.00s)                                           \n    --- FAIL: FuzzSurgeAttack/e8e56d18133e27e4 (0.00s)                      \n        fuzz_test.go:171: Successful attack: Peer count: 18, cutoff: 17:    \n              - 808464432 reputation (6m) contributes 67372036 revenue (2w) \n              - 808464432 reputation (6m) contributes 67372036 revenue (2w) \n              - 808464432 reputation (6m) contributes 67372036 revenue (2w) \n              - 808464432 reputation (6m) contributes 67372036 revenue (2w) \n              - 808464432 reputation (6m) contributes 67372036 revenue (2w) \n              - 808464432 reputation (6m) contributes 67372036 revenue (2w) \n              - 808464432 reputation (6m) contributes 67372036 revenue (2w) \n              - 808464432 reputation (6m) contributes 67372036 revenue (2w) \n              - 48053104688 reputation (6m) contributes 4004425390 revenue (2w)                                                                         \n              - 52348071984 reputation (6m) contributes 4362339332 revenue (2w)                                                                         \n              - 52348071984 reputation (6m) contributes 4362339332 revenue (2w)                                                                         \n              - 69527941168 reputation (6m) contributes 5793995097 revenue (2w)                                                                         \n              - 69527941168 reputation (6m) contributes 5793995097 revenue (2w)                                                                         \n              - 69527941168 reputation (6m) contributes 5793995097 revenue (2w)                                                                         \n              - 69527941168 reputation (6m) contributes 5793995097 revenue (2w)                                                                         \n              - 86707810352 reputation (6m) contributes 7225650862 revenue (2w)                                                                         \n              - 86707810352 reputation (6m) contributes 7225650862 revenue (2w)                                                                         \n              - 86707810352 reputation (6m) contributes 7225650862 revenue (2w)                                                                         \n             with outcome: Node lost: 50 % of revenue  - attacker paid: 28586797036 to meet threshold: 58121013316, node still earned: 28586797036 (0 honest + 28586797036 attacker), &lt;nil&gt;                                                                                     \n</code></pre>\n<p>I think this highlights a case where the current reputation algorithm performs poorly in general: fan-in topologies (and also fan-out if we\u2019re using bidirectional reputation).</p>\n<p>With the recommended parameters, incoming reputation is calculated over a 24-week period while outgoing revenue is calculated over a 2-week period.  So, each incoming node will generally have a reputation score 12x higher than their contribution to the outgoing revenue.  It follows that if there\u2019s more than 12 incoming nodes contributing equally to outgoing revenue, none of them can <em>ever</em> build enough reputation to access endorsed slots.</p>\n<p>A surge attack is essentially just putting a finger on the scale to tip it towards this crossover point where no incoming nodes can build enough reputation.  The closer the topology and traffic flows are to the crossover point already, the less the cost of a surge attack.</p>\n<h2><a name=\"p-3276-mitigation-thoughts-1\" class=\"anchor\" href=\"#p-3276-mitigation-thoughts-1\"></a>Mitigation Thoughts</h2>\n<h3><a name=\"p-3276-custodial-lightning-2\" class=\"anchor\" href=\"#p-3276-custodial-lightning-2\"></a>Custodial Lightning</h3>\n<p>For custodial wallets, fan-in and fan-out topologies are likely rare and the current reputation algorithm might be \u201cgood enough\u201d.</p>\n<h3><a name=\"p-3276-lsp-specific-reputation-algorithms-3\" class=\"anchor\" href=\"#p-3276-lsp-specific-reputation-algorithms-3\"></a>LSP-Specific Reputation Algorithms</h3>\n<p>LSPs generally have very high fan-in/out \u2013 many small user channels fan-in to the LSP, while just a few large channels route out from the LSP.  It seems reasonable that LSPs would use their own reputation algorithms to handle their specific topology (AFAIU eclair/phoenix are already working on their own algorithm).  But how exactly those algorithms should work is an open question.</p>\n<p>Trampoline routing may also help.  LSPs may be able to endorse trampoline payments regardless of the previous node\u2019s reputation, since they get to choose the remainder of the path.  But if the destination of such payments is also an LSP user, the opposite problem (fan-out) will exist at the destination, and endorsed payments are likely to be failed back under the new bidirectional algorithm.</p>",
  "post_number": 4,
  "post_type": 1,
  "updated_at": "2024-09-26T22:09:59.112Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 7,
  "readers_count": 6,
  "score": 1.2,
  "yours": false,
  "topic_id": 1147,
  "topic_slug": "hybrid-jamming-mitigation-results-and-updates",
  "topic_title": "Hybrid Jamming Mitigation: Results and Updates",
  "topic_html_title": "Hybrid Jamming Mitigation: Results and Updates",
  "category_id": 7,
  "display_username": "Matt Morehouse",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"carla, post:1, topic:1147\"]\n#### Manipulation - Surge Attack\n\nWe also [fuzzed this attack](https://github.com/carlaKC/reputation-fuzz/blob/fda5a8823a26fd6b6dc243f3035288523a5e50b6/fuzz_test.go#L116) for ~24H (~22 billion execs) with the following conditions, and did not find any attacks where the targeted node loses revenue to the attack:\n[/quote]\n\nI made an [optimization](https://github.com/carlaKC/reputation-fuzz/pull/1) to the fuzz test and was able to find many surge attacks.  For example, here's one where the victim loses 50% of their revenue:\n\n```shell\n$ go test -run=FuzzSurgeAttack/e8e56d18133e\n27e4                                                                        \n--- FAIL: FuzzSurgeAttack (0.00s)                                           \n    --- FAIL: FuzzSurgeAttack/e8e56d18133e27e4 (0.00s)                      \n        fuzz_test.go:171: Successful attack: Peer count: 18, cutoff: 17:    \n              - 808464432 reputation (6m) contributes 67372036 revenue (2w) \n              - 808464432 reputation (6m) contributes 67372036 revenue (2w) \n              - 808464432 reputation (6m) contributes 67372036 revenue (2w) \n              - 808464432 reputation (6m) contributes 67372036 revenue (2w) \n              - 808464432 reputation (6m) contributes 67372036 revenue (2w) \n              - 808464432 reputation (6m) contributes 67372036 revenue (2w) \n              - 808464432 reputation (6m) contributes 67372036 revenue (2w) \n              - 808464432 reputation (6m) contributes 67372036 revenue (2w) \n              - 48053104688 reputation (6m) contributes 4004425390 revenue (2w)                                                                         \n              - 52348071984 reputation (6m) contributes 4362339332 revenue (2w)                                                                         \n              - 52348071984 reputation (6m) contributes 4362339332 revenue (2w)                                                                         \n              - 69527941168 reputation (6m) contributes 5793995097 revenue (2w)                                                                         \n              - 69527941168 reputation (6m) contributes 5793995097 revenue (2w)                                                                         \n              - 69527941168 reputation (6m) contributes 5793995097 revenue (2w)                                                                         \n              - 69527941168 reputation (6m) contributes 5793995097 revenue (2w)                                                                         \n              - 86707810352 reputation (6m) contributes 7225650862 revenue (2w)                                                                         \n              - 86707810352 reputation (6m) contributes 7225650862 revenue (2w)                                                                         \n              - 86707810352 reputation (6m) contributes 7225650862 revenue (2w)                                                                         \n             with outcome: Node lost: 50 % of revenue  - attacker paid: 28586797036 to meet threshold: 58121013316, node still earned: 28586797036 (0 honest + 28586797036 attacker), <nil>                                                                                     \n```\n\nI think this highlights a case where the current reputation algorithm performs poorly in general: fan-in topologies (and also fan-out if we're using bidirectional reputation).  \n\nWith the recommended parameters, incoming reputation is calculated over a 24-week period while outgoing revenue is calculated over a 2-week period.  So, each incoming node will generally have a reputation score 12x higher than their contribution to the outgoing revenue.  It follows that if there's more than 12 incoming nodes contributing equally to outgoing revenue, none of them can *ever* build enough reputation to access endorsed slots.\n\nA surge attack is essentially just putting a finger on the scale to tip it towards this crossover point where no incoming nodes can build enough reputation.  The closer the topology and traffic flows are to the crossover point already, the less the cost of a surge attack.\n\n## Mitigation Thoughts\n\n### Custodial Lightning\n\nFor custodial wallets, fan-in and fan-out topologies are likely rare and the current reputation algorithm might be \"good enough\".\n\n### LSP-Specific Reputation Algorithms\n\nLSPs generally have very high fan-in/out -- many small user channels fan-in to the LSP, while just a few large channels route out from the LSP.  It seems reasonable that LSPs would use their own reputation algorithms to handle their specific topology (AFAIU eclair/phoenix are already working on their own algorithm).  But how exactly those algorithms should work is an open question.\n\nTrampoline routing may also help.  LSPs may be able to endorse trampoline payments regardless of the previous node's reputation, since they get to choose the remainder of the path.  But if the destination of such payments is also an LSP user, the opposite problem (fan-out) will exist at the destination, and endorsed payments are likely to be failed back under the new bidirectional algorithm.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 47,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}