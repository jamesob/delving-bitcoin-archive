{
  "id": 3273,
  "name": "Anthony Towns",
  "username": "ajtowns",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/417_2.png",
  "created_at": "2024-09-26T12:59:34.522Z",
  "cooked": "<p>If you have <code>&lt;x&gt; &lt;y&gt;</code> on the stack, you can verify that <code>y=x+1</code> with:</p>\n<pre><code class=\"lang-auto\">2DUP\n1 SWAP OVER CAT TOALTSTACK CAT\n1 ADD FROMALTSTACK EQUALVERIFY\n</code></pre>\n<p>The process is just to append a <code>0x01</code> byte to both suffixes, to ensure neither value is treated as negative or non-minimal (<code>0x00</code> or <code>0x80</code> or a multibyte string ending in <code>0x00</code> or <code>0x0080</code>), then increment, then check. The suffix can be one, two or three bytes this way, so this only doesn\u2019t work if the smaller hash ends with <code>FFFFFF</code>, but that\u2019s a one-in-16-million chance, instead of 1-in-2 or 255-in-256.</p>",
  "post_number": 3,
  "post_type": 1,
  "updated_at": "2024-09-26T12:59:34.522Z",
  "reply_count": 0,
  "reply_to_post_number": 2,
  "quote_count": 0,
  "incoming_link_count": 1,
  "reads": 7,
  "readers_count": 6,
  "score": 6.4,
  "yours": false,
  "topic_id": 1080,
  "topic_slug": "efficient-multi-input-transaction-grinding-for-op-cat-based-bitcoin-covenants",
  "topic_title": "Efficient Multi-Input Transaction Grinding for OP_CAT-based Bitcoin Covenants",
  "topic_html_title": "Efficient Multi-Input Transaction Grinding for OP_CAT-based Bitcoin Covenants",
  "category_id": 8,
  "display_username": "Anthony Towns",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "username": "benthecarman",
    "name": "benthecarman",
    "avatar_template": "/user_avatar/delvingbitcoin.org/benthecarman/{size}/222_2.png"
  },
  "bookmarked": false,
  "raw": "If you have `<x> <y>` on the stack, you can verify that `y=x+1` with:\n\n```\n2DUP\n1 SWAP OVER CAT TOALTSTACK CAT\n1 ADD FROMALTSTACK EQUALVERIFY\n```\n\nThe process is just to append a `0x01` byte to both suffixes, to ensure neither value is treated as negative or non-minimal (`0x00` or `0x80` or a multibyte string ending in `0x00` or `0x0080`), then increment, then check. The suffix can be one, two or three bytes this way, so this only doesn't work if the smaller hash ends with `FFFFFF`, but that's a one-in-16-million chance, instead of 1-in-2 or 255-in-256.",
  "actions_summary": [],
  "moderator": true,
  "admin": true,
  "staff": true,
  "user_id": 3,
  "hidden": false,
  "trust_level": 4,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}