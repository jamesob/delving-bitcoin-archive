{
  "id": 3106,
  "name": "plebhash",
  "username": "plebhash",
  "avatar_template": "/user_avatar/delvingbitcoin.org/plebhash/{size}/302_2.png",
  "created_at": "2024-09-05T19:49:34.749Z",
  "cooked": "<p>As a pleb advocate, I\u2019m particularly curious how the proposed SV2 extension would affect transactions described under <a href=\"https://github.com/TheBlueMatt/bips/blob/7f9670b643b7c943a0cc6d2197d3eabe661050c2/bip-XXXX.mediawiki\" rel=\"noopener nofollow ugc\">GCC</a>, which would essentially penalize low-end nodes, even if they:</p>\n<ul>\n<li>pay high fees</li>\n<li>are consensus-valid</li>\n<li>are available in the so called \u201cStandard/Canonical/Platonic\u201d mempool</li>\n</ul>\n<p>Let\u2019s call these transactions as <strong>GCC vectors</strong>.</p>\n<p>How should a SV2-JD-enabled Pool take that into account? I see three options:</p>\n<ul>\n<li>A. reject all jobs that include GCC vectors in the proposed templates (as a JD policy)</li>\n<li>B. impose economical penalties to jobs that include GCC vectors in their template (as a reward policy)</li>\n<li>C. ignore GCC vectors</li>\n</ul>\n<p>The proposed extension is not really relevant for option A, since the basic SV2 primitives already allow for that.</p>\n<p>Option B does have some relevance here, and I\u2019m curious as to whether this is being taken into account in the design of the proposed extension.</p>",
  "post_number": 3,
  "post_type": 1,
  "posts_count": 55,
  "updated_at": "2024-09-06T11:24:19.344Z",
  "reply_count": 1,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 4,
  "reads": 45,
  "readers_count": 44,
  "score": 34.0,
  "yours": false,
  "topic_id": 1099,
  "topic_slug": "pplns-with-job-declaration",
  "topic_title": "PPLNS with job declaration",
  "topic_html_title": "PPLNS with job declaration",
  "category_id": 7,
  "display_username": "plebhash",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 14,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "As a pleb advocate, I'm particularly curious how the proposed SV2 extension would affect transactions described under [GCC](https://github.com/TheBlueMatt/bips/blob/7f9670b643b7c943a0cc6d2197d3eabe661050c2/bip-XXXX.mediawiki), which would essentially penalize low-end nodes, even if they:\n- pay high fees\n- are consensus-valid\n- are available in the so called \"Standard/Canonical/Platonic\" mempool\n\nLet's call these transactions as **GCC vectors**.\n\nHow should a SV2-JD-enabled Pool take that into account? I see three options:\n- A. reject all jobs that include GCC vectors in the proposed templates (as a JD policy)\n- B. impose economical penalties to jobs that include GCC vectors in their template (as a reward policy)\n- C. ignore GCC vectors\n\nThe proposed extension is not really relevant for option A, since the basic SV2 primitives already allow for that.\n\nOption B does have some relevance here, and I'm curious as to whether this is being taken into account in the design of the proposed extension.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 249,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "As a pleb advocate, I\u2019m particularly curious how the proposed SV2 extension would affect transactions described under <a href=\"https://github.com/TheBlueMatt/bips/blob/7f9670b643b7c943a0cc6d2197d3eabe661050c2/bip-XXXX.mediawiki\" rel=\"noopener nofollow ugc\">GCC</a>, which would essentially penalize low-end nodes, even if they: \n\npay high fees\nare consensus-valid\nare available in the so called \u201cStandard/Canonical/Platonic\u201d mempool\n\nLet\u2019s cal&hellip;",
  "truncated": true,
  "post_url": "/t/pplns-with-job-declaration/1099/3",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}