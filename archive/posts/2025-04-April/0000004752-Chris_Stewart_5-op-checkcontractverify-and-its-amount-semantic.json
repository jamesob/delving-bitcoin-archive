{
  "id": 4752,
  "name": "Chris Stewart",
  "username": "Chris_Stewart_5",
  "avatar_template": "/user_avatar/delvingbitcoin.org/chris_stewart_5/{size}/296_2.png",
  "created_at": "2025-04-12T20:01:16.371Z",
  "cooked": "<blockquote>\n<aside class=\"quote no-group\" data-username=\"salvatoshi\" data-post=\"7\" data-topic=\"1527\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/salvatoshi/48/72_2.png\" class=\"avatar\"> salvatoshi:</div>\n<blockquote>\n<p>Can you elaborate on why?</p>\n</blockquote>\n</aside>\n</blockquote>\n<p>I don\u2019t personally agree with this, but the concern stems from the possibility of having <em>UTXOs with mutually exclusive spend conditions</em>. Let me walk through an example to illustrate.</p>\n<p>It might helpful to revisit <a href=\"https://github.com/bitcoin/bips/blob/8375f71ee64cda848b159fa4a0c3719a48037492/bip-0065.mediawiki\" rel=\"noopener nofollow ugc\">BIP65</a> for some background here.</p>\n<p>Imagine I have two UTXOs in my wallet:</p>\n<ol>\n<li><strong>UTXO A</strong> has an <code>OP_CLTV</code> script that uses block height.</li>\n<li><strong>UTXO B</strong> has an <code>OP_CLTV</code> script that uses wall clock time.</li>\n</ol>\n<p>These UTXOs cannot be spent together in the same transaction because they both rely on the <code>nLockTime</code> field for validation. Since a transaction only has a single <code>nLockTime</code>, you can\u2019t satisfy both scripts at the same time. (Note: <code>OP_CLTV</code> uses the same kind of \u201cindirect validation\u201d mechanism that <code>OP_CSV</code> does.)</p>\n<p>This creates an awkward scenario for wallets: how do you convey that these two UTXOs are <em>mutually exclusive</em> in terms of spendability?</p>\n<p><code>OP_CSV</code> avoids this problem because it uses per-input <code>nSequence</code> values, so the same conflict doesn\u2019t arise. Each input can specify its own relative locktime.</p>\n<aside class=\"quote no-group\" data-username=\"salvatoshi\" data-post=\"7\" data-topic=\"1527\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/salvatoshi/48/72_2.png\" class=\"avatar\"> salvatoshi:</div>\n<blockquote>\n<p>Validity is necessarily meaningful only at transaction-level.</p>\n</blockquote>\n</aside>\n<p>I agree with this framing. Transactions are the atomic unit of validation in the Bitcoin network, and we should be able to introspect anything within the transaction.</p>\n<p>I don\u2019t think this principle extends to external factors like block time or block height as they aren\u2019t directly available in the transaction we are validating. That\u2019s why the indirection used in BIP65/BIP112 is clever: the transaction\u2019s <code>nLockTime</code>/<code>nSequence</code> values are validated before entering the interpreter, and inside the interpreter, we just read those fields and check them against the stack parameters given to <code>OP_CLTV</code>/<code>OP_CSV</code>.</p>\n<p>However, this indirection <em>can</em> result in transactions that are valid in the interpreter (and thus valid under relay policy, I believe) but can never be mined. See this <a href=\"https://github.com/bitcoin/bitcoin/pull/32229\" rel=\"noopener nofollow ugc\">PR</a> in Bitcoin Core for examples of <code>OP_CLTV</code> transactions that pass relay rules but are unmineable due to <a href=\"https://github.com/bitcoin/bips/blob/8375f71ee64cda848b159fa4a0c3719a48037492/bip-0113.mediawiki\" rel=\"noopener nofollow ugc\">BIP113</a>\u2019s <code>median-time-past</code> rules.</p>",
  "post_number": 8,
  "post_type": 1,
  "posts_count": 13,
  "updated_at": "2025-04-12T20:12:21.932Z",
  "reply_count": 1,
  "reply_to_post_number": 7,
  "quote_count": 1,
  "incoming_link_count": 1,
  "reads": 28,
  "readers_count": 27,
  "score": 15.6,
  "yours": false,
  "topic_id": 1527,
  "topic_slug": "op-checkcontractverify-and-its-amount-semantic",
  "topic_title": "OP_CHECKCONTRACTVERIFY and its amount semantic",
  "topic_html_title": "OP_CHECKCONTRACTVERIFY and its amount semantic",
  "category_id": 7,
  "display_username": "Chris Stewart",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 3,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "> [quote=\"salvatoshi, post:7, topic:1527\"]  \n> Can you elaborate on why?  \n> [/quote]\n\nI don\u2019t personally agree with this, but the concern stems from the possibility of having *UTXOs with mutually exclusive spend conditions*. Let me walk through an example to illustrate.\n\nIt might helpful to revisit [BIP65](https://github.com/bitcoin/bips/blob/8375f71ee64cda848b159fa4a0c3719a48037492/bip-0065.mediawiki) for some background here.\n\nImagine I have two UTXOs in my wallet:\n\n1. **UTXO A** has an `OP_CLTV` script that uses block height.  \n2. **UTXO B** has an `OP_CLTV` script that uses wall clock time.\n\nThese UTXOs cannot be spent together in the same transaction because they both rely on the `nLockTime` field for validation. Since a transaction only has a single `nLockTime`, you can\u2019t satisfy both scripts at the same time. (Note: `OP_CLTV` uses the same kind of \"indirect validation\" mechanism that `OP_CSV` does.)\n\nThis creates an awkward scenario for wallets: how do you convey that these two UTXOs are *mutually exclusive* in terms of spendability?\n\n`OP_CSV` avoids this problem because it uses per-input `nSequence` values, so the same conflict doesn't arise. Each input can specify its own relative locktime.\n\n[quote=\"salvatoshi, post:7, topic:1527\"]\nValidity is necessarily meaningful only at transaction-level.\n[/quote]\n\nI agree with this framing. Transactions are the atomic unit of validation in the Bitcoin network, and we should be able to introspect anything within the transaction.\n\nI don\u2019t think this principle extends to external factors like block time or block height as they aren't directly available in the transaction we are validating. That\u2019s why the indirection used in BIP65/BIP112 is clever: the transaction\u2019s `nLockTime`/`nSequence` values are validated before entering the interpreter, and inside the interpreter, we just read those fields and check them against the stack parameters given to `OP_CLTV`/`OP_CSV`.\n\nHowever, this indirection *can* result in transactions that are valid in the interpreter (and thus valid under relay policy, I believe) but can never be mined. See this [PR](https://github.com/bitcoin/bitcoin/pull/32229) in Bitcoin Core for examples of `OP_CLTV` transactions that pass relay rules but are unmineable due to [BIP113](https://github.com/bitcoin/bips/blob/8375f71ee64cda848b159fa4a0c3719a48037492/bip-0113.mediawiki)\u2019s `median-time-past` rules.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 193,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": "Github link was replaced with a permanent link",
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "I don\u2019t personally agree with this, but the concern stems from the possibility of having UTXOs with mutually exclusive spend conditions. Let me walk through an example to illustrate. \nIt might helpful to revisit <a href=\"https://github.com/bitcoin/bips/blob/8375f71ee64cda848b159fa4a0c3719a48037492/bip-0065.mediawiki\" rel=\"noopener nofollow ugc\">BIP65</a> for some background here. \nImagine I have two UTXOs in my wallet: \n\nUTXO A has &hellip;",
  "truncated": true,
  "post_url": "/t/op-checkcontractverify-and-its-amount-semantic/1527/8",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}