{
  "id": 4786,
  "name": null,
  "username": "redundant",
  "avatar_template": "/letter_avatar_proxy/v4/letter/r/ccd318/{size}.png",
  "created_at": "2025-04-15T12:36:22.185Z",
  "cooked": "<p>Interesting write-up! One concern: committing to a merkle root with different sighashes in the scriptPubKey seems tricky, since you\u2019d need the inputs to compute the sighash\u2014but the inputs depend on the finalized scriptPubKey. The classic circular dependency issue.</p>\n<p>I\u2019m assuming everything on the stack is from the witness stack, so I can see some interesting possibilities with a MuSig2 <code>&lt;key&gt;</code> and presigned transactions. I\u2019ll go back and read your bidding problem post\u2014maybe that\u2019s the intended use case. If so, even combining the \u2018Schnorr trick\u2019 with MuSig2 keys could lead to some cool results.</p>",
  "post_number": 2,
  "post_type": 1,
  "posts_count": 3,
  "updated_at": "2025-04-15T12:36:22.185Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 9,
  "readers_count": 8,
  "score": 1.6,
  "yours": false,
  "topic_id": 1599,
  "topic_slug": "how-csfs-paircommit-enables-mass-delegated-introspection",
  "topic_title": "How CSFS+PAIRCOMMIT enables mass delegated introspection",
  "topic_html_title": "How CSFS+PAIRCOMMIT enables mass delegated introspection",
  "category_id": 7,
  "display_username": null,
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Interesting write-up! One concern: committing to a merkle root with different sighashes in the scriptPubKey seems tricky, since you'd need the inputs to compute the sighash\u2014but the inputs depend on the finalized scriptPubKey. The classic circular dependency issue. \n\nI'm assuming everything on the stack is from the witness stack, so I can see some interesting possibilities with a MuSig2 `<key>` and presigned transactions. I'll go back and read your bidding problem post\u2014maybe that's the intended use case. If so, even combining the 'Schnorr trick' with MuSig2 keys could lead to some cool results.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 290,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Interesting write-up! One concern: committing to a merkle root with different sighashes in the scriptPubKey seems tricky, since you\u2019d need the inputs to compute the sighash\u2014but the inputs depend on the finalized scriptPubKey. The classic circular dependency issue. \nI\u2019m assuming everything on the sta&hellip;",
  "truncated": true,
  "post_url": "/t/how-csfs-paircommit-enables-mass-delegated-introspection/1599/2",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}