{
  "id": 4764,
  "name": "Gloria Zhao",
  "username": "glozow",
  "avatar_template": "/user_avatar/delvingbitcoin.org/glozow/{size}/261_2.png",
  "created_at": "2025-04-14T23:31:39.739Z",
  "cooked": "<p>Bitcoin Core version 29.0 is now available from:</p>\n<p><a href=\"https://bitcoincore.org/bin/bitcoin-core-29.0/\">https://bitcoincore.org/bin/bitcoin-core-29.0/</a></p>\n<p>This release includes new features, various bug fixes and performance\nimprovements, as well as updated translations.</p>\n<p>Please report bugs using the issue tracker at GitHub:</p>\n<p><a href=\"https://github.com/bitcoin/bitcoin/issues\">https://github.com/bitcoin/bitcoin/issues</a></p>\n<p>To receive security and update notifications, please subscribe to:</p>\n<p><a href=\"https://bitcoincore.org/en/list/announcements/join/\">https://bitcoincore.org/en/list/announcements/join/</a></p>\n<h1><a name=\"p-4764-how-to-upgrade-1\" class=\"anchor\" href=\"#p-4764-how-to-upgrade-1\"></a>How to Upgrade</h1>\n<p>If you are running an older version, shut it down. Wait until it has completely\nshut down (which might take a few minutes in some cases), then run the\ninstaller (on Windows) or just copy over <code>/Applications/Bitcoin-Qt</code> (on macOS)\nor <code>bitcoind</code>/<code>bitcoin-qt</code> (on Linux).</p>\n<p>Upgrading directly from a version of Bitcoin Core that has reached its EOL is\npossible, but it might take some time if the data directory needs to be migrated. Old\nwallet versions of Bitcoin Core are generally supported.</p>\n<h1><a name=\"p-4764-compatibility-2\" class=\"anchor\" href=\"#p-4764-compatibility-2\"></a>Compatibility</h1>\n<p>Bitcoin Core is supported and tested on operating systems using the\nLinux Kernel 3.17+, macOS 13+, and Windows 10+. Bitcoin\nCore should also work on most other Unix-like systems but is not as\nfrequently tested on them. It is not recommended to use Bitcoin Core on\nunsupported systems.</p>\n<h1><a name=\"p-4764-notable-changes-3\" class=\"anchor\" href=\"#p-4764-notable-changes-3\"></a>Notable changes</h1>\n<h3><a name=\"p-4764-p2p-and-network-changes-4\" class=\"anchor\" href=\"#p-4764-p2p-and-network-changes-4\"></a>P2P and Network Changes</h3>\n<ul>\n<li>\n<p>Support for UPnP was dropped. If you want to open a port automatically, consider using the <code>-natpmp</code>\noption instead, which uses PCP or NAT-PMP depending on router support. (<span class=\"hashtag-raw\">#31130</span>)</p>\n</li>\n<li>\n<p>libnatpmp was replaced with a built-in implementation of PCP and NAT-PMP (still enabled using the <code>-natpmp</code> option). This supports automatic IPv4 port forwarding as well as IPv6 pinholing. (<span class=\"hashtag-raw\">#30043</span>)</p>\n</li>\n<li>\n<p>When the <code>-port</code> configuration option is used, the default onion listening port will now\nbe derived to be that port + 1 instead of being set to a fixed value (8334 on mainnet).\nThis re-allows setups with multiple local nodes using different <code>-port</code> and not using <code>-bind</code>,\nwhich would lead to a startup failure in v28.0 due to a port collision.\nNote that a <code>HiddenServicePort</code> manually configured in <code>torrc</code> may need adjustment if used in\nconnection with the <code>-port</code> option.\nFor example, if you are using <code>-port=5555</code> with a non-standard value and not using <code>-bind=...=onion</code>,\npreviously Bitcoin Core would listen for incoming Tor connections on <code>127.0.0.1:8334</code>.\nNow it would listen on <code>127.0.0.1:5556</code> (<code>-port</code> plus one). If you configured the hidden service manually\nin torrc now you have to change it from <code>HiddenServicePort 8333 127.0.0.1:8334</code> to <code>HiddenServicePort 8333 127.0.0.1:5556</code>, or configure bitcoind with <code>-bind=127.0.0.1:8334=onion</code> to get the previous behavior.\n(<span class=\"hashtag-raw\">#31223</span>)</p>\n</li>\n<li>\n<p>Upon receiving an orphan transaction (an unconfirmed transaction that spends unknown inputs), the node will attempt to download missing parents from all peers who announced the orphan. This change may increase bandwidth usage but make orphan-handling more reliable. (<span class=\"hashtag-raw\">#31397</span>)</p>\n</li>\n</ul>\n<h3><a name=\"p-4764-mempool-policy-and-mining-changes-5\" class=\"anchor\" href=\"#p-4764-mempool-policy-and-mining-changes-5\"></a>Mempool Policy and Mining Changes</h3>\n<ul>\n<li>\n<p>Ephemeral dust is a new concept that allows a single\ndust output in a transaction, provided the transaction\nis zero fee. In order to spend any unconfirmed outputs\nfrom this transaction, the spender must also spend\nthis dust in addition to any other desired outputs.\nIn other words, this type of transaction\nshould be created in a transaction package where\nthe dust is both created and spent simultaneously. (<span class=\"hashtag-raw\">#30239</span>)</p>\n</li>\n<li>\n<p>Due to a bug, the default block reserved weight (<code>4,000 WU</code>) for fixed-size block header, transactions count, and coinbase transaction was reserved twice and could not be lowered. As a result the total reserved weight was always <code>8,000 WU</code>, meaning that even when specifying a <code>-blockmaxweight</code> higher than the default (even to the max of <code>4,000,000 WU</code>), the actual block size will never exceed <code>3,992,000 WU</code>.\nThe fix consolidates the reservation into a single place and introduces a new startup option, <code>-blockreservedweight</code> which specifies the reserved weight directly. The default value of <code>-blockreservedweight</code> is set to <code>8,000 WU</code> to ensure backward compatibility for users who relied on the previous behavior of <code>-blockmaxweight</code>.\nThe minimum value of <code>-blockreservedweight</code> is set to <code>2,000 WU</code>. Users setting <code>-blockreservedweight</code> below the default should ensure that the total weight of their block header, transaction count, and coinbase transaction does not exceed the reduced value or they may risk mining an invalid block. (<span class=\"hashtag-raw\">#31384</span>)</p>\n</li>\n</ul>\n<h3><a name=\"p-4764-updated-rpcs-6\" class=\"anchor\" href=\"#p-4764-updated-rpcs-6\"></a>Updated RPCs</h3>\n<ul>\n<li>\n<p>The RPC <code>testmempoolaccept</code> response now includes a <code>reject-details</code> field in some cases,\nsimilar to the complete error messages returned by <code>sendrawtransaction</code> (<span class=\"hashtag-raw\">#28121</span>)</p>\n</li>\n<li>\n<p>Duplicate blocks submitted with <code>submitblock</code> will now persist their block data\neven if it was previously pruned. If pruning is activated, the data will be\npruned again eventually once the block file it is persisted in is selected for\npruning. This is consistent with the behaviour of <code>getblockfrompeer</code> where the\nblock is persisted as well even when pruning. (<span class=\"hashtag-raw\">#31175</span>)</p>\n</li>\n<li>\n<p><code>getmininginfo</code> now returns <code>nBits</code> and the current target in the <code>target</code> field. It also returns a <code>next</code> object which specifies the <code>height</code>, <code>nBits</code>, <code>difficulty</code>, and <code>target</code> for the next block. (<span class=\"hashtag-raw\">#31583</span>)</p>\n</li>\n<li>\n<p><code>getblock</code> and <code>getblockheader</code> now return the current target in the <code>target</code> field (<span class=\"hashtag-raw\">#31583</span>)</p>\n</li>\n<li>\n<p><code>getblockchaininfo</code> and <code>getchainstates</code> now return <code>nBits</code> and the current target in the <code>target</code> field (<span class=\"hashtag-raw\">#31583</span>)</p>\n</li>\n<li>\n<p>the <code>getblocktemplate</code> RPC <code>curtime</code> (BIP22) and <code>mintime</code> (BIP23) fields now\naccount for the timewarp fix proposed in BIP94 on all networks. This ensures\nthat, in the event a timewarp fix softfork activates on mainnet, un-upgraded\nminers will not accidentally violate the timewarp rule. (<span class=\"hashtag-raw\">#31376</span>, <span class=\"hashtag-raw\">#31600</span>)\nAs a reminder, it\u2019s important that any software which uses the <code>getblocktemplate</code>\nRPC takes these values into account (either <code>curtime</code> or <code>mintime</code> is fine).\nRelying only on a clock can lead to invalid blocks under some circumstances,\nespecially once a timewarp fix is deployed. (<span class=\"hashtag-raw\">#31600</span>)</p>\n</li>\n</ul>\n<h3><a name=\"p-4764-new-rpcs-7\" class=\"anchor\" href=\"#p-4764-new-rpcs-7\"></a>New RPCs</h3>\n<ul>\n<li><code>getdescriptoractivity</code> can be used to find all spend/receive activity relevant to\na given set of descriptors within a set of specified blocks. This call can be used with\n<code>scanblocks</code> to lessen the need for additional indexing programs. (<span class=\"hashtag-raw\">#30708</span>)</li>\n</ul>\n<h3><a name=\"p-4764-updated-rest-apis-8\" class=\"anchor\" href=\"#p-4764-updated-rest-apis-8\"></a>Updated REST APIs</h3>\n<ul>\n<li><code>GET /rest/block/&lt;BLOCK-HASH&gt;.json</code> and <code>GET /rest/headers/&lt;BLOCK-HASH&gt;.json</code> now return the current target in the <code>target</code> field</li>\n</ul>\n<h3><a name=\"p-4764-updated-settings-9\" class=\"anchor\" href=\"#p-4764-updated-settings-9\"></a>Updated Settings</h3>\n<ul>\n<li>\n<p>The maximum allowed value for the <code>-dbcache</code> configuration option has been\ndropped due to recent UTXO set growth. Note that before this change, large <code>-dbcache</code>\nvalues were automatically reduced to 16 GiB (1 GiB on 32 bit systems). (<span class=\"hashtag-raw\">#28358</span>)</p>\n</li>\n<li>\n<p>Handling of negated <code>-noseednode</code>, <code>-nobind</code>, <code>-nowhitebind</code>, <code>-norpcbind</code>, <code>-norpcallowip</code>, <code>-norpcwhitelist</code>, <code>-notest</code>, <code>-noasmap</code>, <code>-norpcwallet</code>, <code>-noonlynet</code>, and <code>-noexternalip</code> options has changed. Previously negating these options had various confusing and undocumented side effects. Now negating them just resets the settings and restores default behaviors, as if the options were not specified.</p>\n</li>\n<li>\n<p>Starting with v28.0, the <code>-mempoolfullrbf</code> startup option was set to\ndefault to <code>1</code>. With widespread adoption of this policy, users no longer\nbenefit from disabling it, so the option has been removed, making full\nreplace-by-fee the standard behavior. (<span class=\"hashtag-raw\">#30592</span>)</p>\n</li>\n<li>\n<p>Setting <code>-upnp</code> will now log a warning and be interpreted as <code>-natpmp</code>. Consider using <code>-natpmp</code> directly instead. (<span class=\"hashtag-raw\">#31130</span>, <span class=\"hashtag-raw\">#31916</span>)</p>\n</li>\n<li>\n<p>As a safety check, Bitcoin core will <strong>fail to start</strong> when <code>-blockreservedweight</code> init parameter value is lower than <code>2000</code> weight units. Bitcoin Core will also <strong>fail to start</strong> if the <code>-blockmaxweight</code> or <code>-blockreservedweight</code> init parameter exceeds consensus limit of <code>4,000,000 WU</code>.</p>\n</li>\n<li>\n<p>Passing <code>-debug=0</code> or <code>-debug=none</code> now behaves like <code>-nodebug</code>: previously set debug categories will be cleared, but subsequent <code>-debug</code> options will still be applied.</p>\n</li>\n<li>\n<p>The default for <code>-rpcthreads</code> has been changed from 4 to 16, and the default for <code>-rpcworkqueue</code> has been changed from 16 to 64. (<span class=\"hashtag-raw\">#31215</span>).</p>\n</li>\n</ul>\n<h3><a name=\"p-4764-build-system-10\" class=\"anchor\" href=\"#p-4764-build-system-10\"></a>Build System</h3>\n<p>The build system has been migrated from Autotools to CMake:</p>\n<ol>\n<li>The minimum required CMake version is 3.22.</li>\n<li>In-source builds are not allowed. When using a subdirectory within the root source tree as a build directory, it is recommended that its name includes the substring \u201cbuild\u201d.</li>\n<li>CMake variables may be used to configure the build system. <strong>Some defaults have changed.</strong> For example, you will now need to add <code>-DWITH_ZMQ=ON</code> to build with zmq and <code>-DBUILD_GUI=ON</code> to build <code>bitcoin-qt</code>. See <a href=\"https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Autotools-to-CMake-Options-Mapping\">Autotools to CMake Options Mapping</a> for details.</li>\n<li>For single-configuration generators, the default build configuration (<code>CMAKE_BUILD_TYPE</code>) is \u201cRelWithDebInfo\u201d. However, for the \u201cRelease\u201d configuration, CMake defaults to the compiler optimization flag <code>-O3</code>, which has not been extensively tested with Bitcoin Core. Therefore, the build system replaces it with <code>-O2</code>.</li>\n<li>By default, the built executables and libraries are located in the <code>bin/</code> and <code>lib/</code> subdirectories of the build directory.</li>\n<li>The build system supports component\u2010based installation. The names of the installable components coincide with the build target names. For example:</li>\n</ol>\n<pre><code class=\"lang-auto\">cmake -B build\ncmake --build build --target bitcoind\ncmake --install build --component bitcoind\n</code></pre>\n<ol start=\"7\">\n<li>If any of the <code>CPPFLAGS</code>, <code>CFLAGS</code>, <code>CXXFLAGS</code> or <code>LDFLAGS</code> environment variables were used in your Autotools-based build process, you should instead use the corresponding CMake variables (<code>APPEND_CPPFLAGS</code>, <code>APPEND_CFLAGS</code>, <code>APPEND_CXXFLAGS</code> and <code>APPEND_LDFLAGS</code>). Alternatively, if you opt to use the dedicated <code>CMAKE_&lt;...&gt;_FLAGS</code> variables, you must ensure that the resulting compiler or linker invocations are as expected.</li>\n</ol>\n<p>For more detailed guidance on configuring and using CMake, please refer to the official <a href=\"https://cmake.org/cmake/help/latest/\">CMake documentation</a> and <a href=\"https://cmake.org/cmake/help/latest/guide/user-interaction/index.html\">CMake\u2019s User Interaction Guide</a>. Additionally, consult platform-specific <code>doc/build-*.md</code> build guides for instructions tailored to your operating system.</p>\n<h2><a name=\"p-4764-low-level-changes-11\" class=\"anchor\" href=\"#p-4764-low-level-changes-11\"></a>Low-Level Changes</h2>\n<h3><a name=\"p-4764-tools-and-utilities-12\" class=\"anchor\" href=\"#p-4764-tools-and-utilities-12\"></a>Tools and Utilities</h3>\n<ul>\n<li>A new tool <a href=\"https://github.com/bitcoin/bitcoin/blob/f490f5562d4b20857ef8d042c050763795fd43da/contrib/utxo-tools/utxo_to_sqlite.py\"><code>utxo_to_sqlite.py</code></a>\nconverts a compact-serialized UTXO snapshot (as created with the\n<code>dumptxoutset</code> RPC) to a SQLite3 database. Refer to the script\u2019s <code>--help</code>\noutput for more details. (<span class=\"hashtag-raw\">#27432</span>)</li>\n</ul>\n<h3><a name=\"p-4764-tests-13\" class=\"anchor\" href=\"#p-4764-tests-13\"></a>Tests</h3>\n<ul>\n<li>The BIP94 timewarp attack mitigation (designed for testnet4) is no longer active on the regtest network. (<span class=\"hashtag-raw\">#31156</span>)</li>\n</ul>\n<h3><a name=\"p-4764-dependencies-14\" class=\"anchor\" href=\"#p-4764-dependencies-14\"></a>Dependencies</h3>\n<ul>\n<li>MiniUPnPc and libnatpmp have been removed as dependencies (<span class=\"hashtag-raw\">#31130</span>, <span class=\"hashtag-raw\">#30043</span>).</li>\n</ul>\n<h1><a name=\"p-4764-credits-15\" class=\"anchor\" href=\"#p-4764-credits-15\"></a>Credits</h1>\n<p>Thanks to everyone who directly contributed to this release:</p>\n<ul>\n<li>0xb10c</li>\n<li>Adlai Chandrasekhar</li>\n<li>Afanti</li>\n<li>Alfonso Roman Zubeldia</li>\n<li>am-sq</li>\n<li>Andre</li>\n<li>Andre Alves</li>\n<li>Anthony Towns</li>\n<li>Antoine Poinsot</li>\n<li>Ash Manning</li>\n<li>Ava Chow</li>\n<li>Boris Nagaev</li>\n<li>Brandon Odiwuor</li>\n<li>brunoerg</li>\n<li>Chris Stewart</li>\n<li>Cory Fields</li>\n<li>costcould</li>\n<li>Daniel Pfeifer</li>\n<li>Daniela Brozzoni</li>\n<li>David Gumberg</li>\n<li>dergoegge</li>\n<li>epysqyli</li>\n<li>espi3</li>\n<li>Eval EXEC</li>\n<li>Fabian Jahr</li>\n<li>fanquake</li>\n<li>furszy</li>\n<li>Gabriele Bocchi</li>\n<li>glozow</li>\n<li>Greg Sanders</li>\n<li>Gutflo</li>\n<li>Hennadii Stepanov</li>\n<li>Hodlinator</li>\n<li>i-am-yuvi</li>\n<li>ion-</li>\n<li>ismaelsadeeq</li>\n<li>Jadi</li>\n<li>James O\u2019Beirne</li>\n<li>Jeremy Rand</li>\n<li>Jon Atack</li>\n<li>jurraca</li>\n<li>Kay</li>\n<li>kevkevinpal</li>\n<li>l0rinc</li>\n<li>laanwj</li>\n<li>Larry Ruane</li>\n<li>L\u0151rinc</li>\n<li>Maciej S. Szmigiero</li>\n<li>Mackain</li>\n<li>MarcoFalke</li>\n<li>marcofleon</li>\n<li>Marnix</li>\n<li>Martin Leitner-Ankerl</li>\n<li>Martin Saposnic</li>\n<li>Martin Zumsande</li>\n<li>Matthew Zipkin</li>\n<li>Max Edwards</li>\n<li>Michael Dietz</li>\n<li>naiyoma</li>\n<li>Nicola Leonardo Susca</li>\n<li>omahs</li>\n<li>pablomartin4btc</li>\n<li>Pieter Wuille</li>\n<li>Randall Naar</li>\n<li>RiceChuan</li>\n<li>rkrux</li>\n<li>Roman Zeyde</li>\n<li>Ryan Ofsky</li>\n<li>Sebastian Falbesoner</li>\n<li>secp512k2</li>\n<li>Sergi Delgado Segura</li>\n<li>Simon</li>\n<li>Sjors Provoost</li>\n<li>stickies-v</li>\n<li>Suhas Daftuar</li>\n<li>tdb3</li>\n<li>TheCharlatan</li>\n<li>tianzedavid</li>\n<li>Torkel Rogstad</li>\n<li>Vasil Dimov</li>\n<li>wgyt</li>\n<li>willcl-ark</li>\n<li>yancy</li>\n</ul>\n<p>As well as to everyone that helped with translations on\n<a href=\"https://www.transifex.com/bitcoin/bitcoin/\">Transifex</a>.</p>",
  "post_number": 1,
  "post_type": 1,
  "posts_count": 1,
  "updated_at": "2025-04-14T23:36:48.401Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 17,
  "readers_count": 16,
  "score": 33.4,
  "yours": false,
  "topic_id": 1600,
  "topic_slug": "bitcoin-core-29-0-released",
  "topic_title": "Bitcoin Core 29.0 Released",
  "topic_html_title": "Bitcoin Core 29.0 Released",
  "category_id": 8,
  "display_username": "Gloria Zhao",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": "",
  "bookmarked": false,
  "raw": "Bitcoin Core version 29.0 is now available from:\n\n  <https://bitcoincore.org/bin/bitcoin-core-29.0/>\n\nThis release includes new features, various bug fixes and performance\nimprovements, as well as updated translations.\n\nPlease report bugs using the issue tracker at GitHub:\n\n  <https://github.com/bitcoin/bitcoin/issues>\n\nTo receive security and update notifications, please subscribe to:\n\n  <https://bitcoincore.org/en/list/announcements/join/>\n\nHow to Upgrade\n==============\n\nIf you are running an older version, shut it down. Wait until it has completely\nshut down (which might take a few minutes in some cases), then run the\ninstaller (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on macOS)\nor `bitcoind`/`bitcoin-qt` (on Linux).\n\nUpgrading directly from a version of Bitcoin Core that has reached its EOL is\npossible, but it might take some time if the data directory needs to be migrated. Old\nwallet versions of Bitcoin Core are generally supported.\n\nCompatibility\n==============\n\nBitcoin Core is supported and tested on operating systems using the\nLinux Kernel 3.17+, macOS 13+, and Windows 10+. Bitcoin\nCore should also work on most other Unix-like systems but is not as\nfrequently tested on them. It is not recommended to use Bitcoin Core on\nunsupported systems.\n\nNotable changes\n===============\n\n### P2P and Network Changes\n\n- Support for UPnP was dropped. If you want to open a port automatically, consider using the `-natpmp`\noption instead, which uses PCP or NAT-PMP depending on router support. (#31130)\n\n- libnatpmp was replaced with a built-in implementation of PCP and NAT-PMP (still enabled using the `-natpmp` option). This supports automatic IPv4 port forwarding as well as IPv6 pinholing. (#30043)\n\n- When the `-port` configuration option is used, the default onion listening port will now\nbe derived to be that port + 1 instead of being set to a fixed value (8334 on mainnet).\nThis re-allows setups with multiple local nodes using different `-port` and not using `-bind`,\nwhich would lead to a startup failure in v28.0 due to a port collision.\nNote that a `HiddenServicePort` manually configured in `torrc` may need adjustment if used in\nconnection with the `-port` option.\nFor example, if you are using `-port=5555` with a non-standard value and not using `-bind=...=onion`,\npreviously Bitcoin Core would listen for incoming Tor connections on `127.0.0.1:8334`.\nNow it would listen on `127.0.0.1:5556` (`-port` plus one). If you configured the hidden service manually\nin torrc now you have to change it from `HiddenServicePort 8333 127.0.0.1:8334` to `HiddenServicePort 8333\n127.0.0.1:5556`, or configure bitcoind with `-bind=127.0.0.1:8334=onion` to get the previous behavior.\n(#31223)\n\n- Upon receiving an orphan transaction (an unconfirmed transaction that spends unknown inputs), the node will attempt to download missing parents from all peers who announced the orphan. This change may increase bandwidth usage but make orphan-handling more reliable. (#31397)\n\n### Mempool Policy and Mining Changes\n\n- Ephemeral dust is a new concept that allows a single\ndust output in a transaction, provided the transaction\nis zero fee. In order to spend any unconfirmed outputs\nfrom this transaction, the spender must also spend\nthis dust in addition to any other desired outputs.\nIn other words, this type of transaction\nshould be created in a transaction package where\nthe dust is both created and spent simultaneously. (#30239)\n\n- Due to a bug, the default block reserved weight (`4,000 WU`) for fixed-size block header, transactions count, and coinbase transaction was reserved twice and could not be lowered. As a result the total reserved weight was always `8,000 WU`, meaning that even when specifying a `-blockmaxweight` higher than the default (even to the max of `4,000,000 WU`), the actual block size will never exceed `3,992,000 WU`.\nThe fix consolidates the reservation into a single place and introduces a new startup option, `-blockreservedweight` which specifies the reserved weight directly. The default value of `-blockreservedweight` is set to `8,000 WU` to ensure backward compatibility for users who relied on the previous behavior of `-blockmaxweight`.\nThe minimum value of `-blockreservedweight` is set to `2,000 WU`. Users setting `-blockreservedweight` below the default should ensure that the total weight of their block header, transaction count, and coinbase transaction does not exceed the reduced value or they may risk mining an invalid block. (#31384)\n\n### Updated RPCs\n\n- The RPC `testmempoolaccept` response now includes a `reject-details` field in some cases,\nsimilar to the complete error messages returned by `sendrawtransaction` (#28121)\n\n- Duplicate blocks submitted with `submitblock` will now persist their block data\neven if it was previously pruned. If pruning is activated, the data will be\npruned again eventually once the block file it is persisted in is selected for\npruning. This is consistent with the behaviour of `getblockfrompeer` where the\nblock is persisted as well even when pruning. (#31175)\n\n- `getmininginfo` now returns `nBits` and the current target in the `target` field. It also returns a `next` object which specifies the `height`, `nBits`, `difficulty`, and `target` for the next block. (#31583)\n\n- `getblock` and `getblockheader` now return the current target in the `target` field (#31583)\n\n- `getblockchaininfo` and `getchainstates` now return `nBits` and the current target in the `target` field (#31583)\n\n- the `getblocktemplate` RPC `curtime` (BIP22) and `mintime` (BIP23) fields now\n  account for the timewarp fix proposed in BIP94 on all networks. This ensures\n  that, in the event a timewarp fix softfork activates on mainnet, un-upgraded\n  miners will not accidentally violate the timewarp rule. (#31376, #31600)\nAs a reminder, it's important that any software which uses the `getblocktemplate`\nRPC takes these values into account (either `curtime` or `mintime` is fine).\nRelying only on a clock can lead to invalid blocks under some circumstances,\nespecially once a timewarp fix is deployed. (#31600)\n\n### New RPCs\n\n- `getdescriptoractivity` can be used to find all spend/receive activity relevant to\n  a given set of descriptors within a set of specified blocks. This call can be used with\n  `scanblocks` to lessen the need for additional indexing programs. (#30708)\n\n### Updated REST APIs\n\n- `GET /rest/block/<BLOCK-HASH>.json` and `GET /rest/headers/<BLOCK-HASH>.json` now return the current target in the `target` field\n\n### Updated Settings\n\n- The maximum allowed value for the `-dbcache` configuration option has been\n  dropped due to recent UTXO set growth. Note that before this change, large `-dbcache`\n  values were automatically reduced to 16 GiB (1 GiB on 32 bit systems). (#28358)\n\n- Handling of negated `-noseednode`, `-nobind`, `-nowhitebind`, `-norpcbind`, `-norpcallowip`, `-norpcwhitelist`, `-notest`, `-noasmap`, `-norpcwallet`, `-noonlynet`, and `-noexternalip` options has changed. Previously negating these options had various confusing and undocumented side effects. Now negating them just resets the settings and restores default behaviors, as if the options were not specified.\n\n- Starting with v28.0, the `-mempoolfullrbf` startup option was set to\ndefault to `1`. With widespread adoption of this policy, users no longer\nbenefit from disabling it, so the option has been removed, making full\nreplace-by-fee the standard behavior. (#30592)\n\n- Setting `-upnp` will now log a warning and be interpreted as `-natpmp`. Consider using `-natpmp` directly instead. (#31130, #31916)\n\n- As a safety check, Bitcoin core will **fail to start** when `-blockreservedweight` init parameter value is lower than `2000` weight units. Bitcoin Core will also **fail to start** if the `-blockmaxweight` or `-blockreservedweight` init parameter exceeds consensus limit of `4,000,000 WU`.\n\n- Passing `-debug=0` or `-debug=none` now behaves like `-nodebug`: previously set debug categories will be cleared, but subsequent `-debug` options will still be applied.\n\n- The default for `-rpcthreads` has been changed from 4 to 16, and the default for `-rpcworkqueue` has been changed from 16 to 64. (#31215).\n\n### Build System\n\nThe build system has been migrated from Autotools to CMake:\n\n1. The minimum required CMake version is 3.22.\n2. In-source builds are not allowed. When using a subdirectory within the root source tree as a build directory, it is recommended that its name includes the substring \"build\".\n3. CMake variables may be used to configure the build system. **Some defaults have changed.** For example, you will now need to add `-DWITH_ZMQ=ON` to build with zmq and `-DBUILD_GUI=ON` to build `bitcoin-qt`. See [Autotools to CMake Options Mapping](https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Autotools-to-CMake-Options-Mapping) for details.\n4. For single-configuration generators, the default build configuration (`CMAKE_BUILD_TYPE`) is \"RelWithDebInfo\". However, for the \"Release\" configuration, CMake defaults to the compiler optimization flag `-O3`, which has not been extensively tested with Bitcoin Core. Therefore, the build system replaces it with `-O2`.\n5. By default, the built executables and libraries are located in the `bin/` and `lib/` subdirectories of the build directory.\n6. The build system supports component\u2010based installation. The names of the installable components coincide with the build target names. For example:\n```\ncmake -B build\ncmake --build build --target bitcoind\ncmake --install build --component bitcoind\n```\n\n7. If any of the `CPPFLAGS`, `CFLAGS`, `CXXFLAGS` or `LDFLAGS` environment variables were used in your Autotools-based build process, you should instead use the corresponding CMake variables (`APPEND_CPPFLAGS`, `APPEND_CFLAGS`, `APPEND_CXXFLAGS` and `APPEND_LDFLAGS`). Alternatively, if you opt to use the dedicated `CMAKE_<...>_FLAGS` variables, you must ensure that the resulting compiler or linker invocations are as expected.\n\nFor more detailed guidance on configuring and using CMake, please refer to the official [CMake documentation](https://cmake.org/cmake/help/latest/) and [CMake\u2019s User Interaction Guide](https://cmake.org/cmake/help/latest/guide/user-interaction/index.html). Additionally, consult platform-specific `doc/build-*.md` build guides for instructions tailored to your operating system.\n\n## Low-Level Changes\n\n### Tools and Utilities\n\n- A new tool [`utxo_to_sqlite.py`](https://github.com/bitcoin/bitcoin/blob/f490f5562d4b20857ef8d042c050763795fd43da/contrib/utxo-tools/utxo_to_sqlite.py)\n  converts a compact-serialized UTXO snapshot (as created with the\n  `dumptxoutset` RPC) to a SQLite3 database. Refer to the script's `--help`\n  output for more details. (#27432)\n\n### Tests\n\n- The BIP94 timewarp attack mitigation (designed for testnet4) is no longer active on the regtest network. (#31156)\n\n### Dependencies\n\n- MiniUPnPc and libnatpmp have been removed as dependencies (#31130, #30043).\n\nCredits\n=======\n\nThanks to everyone who directly contributed to this release:\n\n- 0xb10c\n- Adlai Chandrasekhar\n- Afanti\n- Alfonso Roman Zubeldia\n- am-sq\n- Andre\n- Andre Alves\n- Anthony Towns\n- Antoine Poinsot\n- Ash Manning\n- Ava Chow\n- Boris Nagaev\n- Brandon Odiwuor\n- brunoerg\n- Chris Stewart\n- Cory Fields\n- costcould\n- Daniel Pfeifer\n- Daniela Brozzoni\n- David Gumberg\n- dergoegge\n- epysqyli\n- espi3\n- Eval EXEC\n- Fabian Jahr\n- fanquake\n- furszy\n- Gabriele Bocchi\n- glozow\n- Greg Sanders\n- Gutflo\n- Hennadii Stepanov\n- Hodlinator\n- i-am-yuvi\n- ion-\n- ismaelsadeeq\n- Jadi\n- James O'Beirne\n- Jeremy Rand\n- Jon Atack\n- jurraca\n- Kay\n- kevkevinpal\n- l0rinc\n- laanwj\n- Larry Ruane\n- L\u0151rinc\n- Maciej S. Szmigiero\n- Mackain\n- MarcoFalke\n- marcofleon\n- Marnix\n- Martin Leitner-Ankerl\n- Martin Saposnic\n- Martin Zumsande\n- Matthew Zipkin\n- Max Edwards\n- Michael Dietz\n- naiyoma\n- Nicola Leonardo Susca\n- omahs\n- pablomartin4btc\n- Pieter Wuille\n- Randall Naar\n- RiceChuan\n- rkrux\n- Roman Zeyde\n- Ryan Ofsky\n- Sebastian Falbesoner\n- secp512k2\n- Sergi Delgado Segura\n- Simon\n- Sjors Provoost\n- stickies-v\n- Suhas Daftuar\n- tdb3\n- TheCharlatan\n- tianzedavid\n- Torkel Rogstad\n- Vasil Dimov\n- wgyt\n- willcl-ark\n- yancy\n\nAs well as to everyone that helped with translations on\n[Transifex](https://www.transifex.com/bitcoin/bitcoin/).",
  "actions_summary": [
    {
      "id": 2,
      "count": 2
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 7,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": "Github link was replaced with a permanent link",
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Bitcoin Core version 29.0 is now available from: \n<a href=\"https://bitcoincore.org/bin/bitcoin-core-29.0/\">https://bitcoincore.org/bin/bitcoin-core-29.0/</a> \nThis release includes new features, various bug fixes and performance\nimprovements, as well as updated translations. \nPlease report bugs using the issue tracker at GitHub: \n<a href=\"https://github.com/bitcoin/bitcoin/issues\">https://github.com/bitcoin/bi&hellip;</a>",
  "truncated": true,
  "post_url": "/t/bitcoin-core-29-0-released/1600/1",
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 2
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 2,
  "current_user_used_main_reaction": false
}