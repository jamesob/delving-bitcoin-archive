{
  "id": 4904,
  "name": "ZmnSCPxj jxPCSnmZ",
  "username": "ZmnSCPxj",
  "avatar_template": "/letter_avatar_proxy/v4/letter/z/ee7513/{size}.png",
  "created_at": "2025-04-30T16:11:09.671Z",
  "cooked": "<p>Nearly all proposals listed above require some erosion of privacy.</p>\n<p>In addition, flow valves do not fix the core complaint of payment failure anyway \u2014 they just signal the payment failure earlier.</p>\n<p>We have to accept that any solution to payment failure requires onchain action.  Full stop.  The point is not to set onchain actions to 0.  The point is to keep the onchain actions low, which is sufficient for scaling purposes.</p>\n<p>Forwardable peerswaps scales a single onchain action to multiple channels being rebalanced at once.  Even if only a single channel is rebalanced, it potentially still scales multiple smaller in-Lightning payments over that channel to a single onchain action. It also does not erode existing privacy, as the details of in-Lightning payments are not changed (unlike local forwarding or centralized routing).</p>\n<p>Another thing to consider is sidepools.  Sidepools are multiparty channels, but are unpublished. This implies that existing routing is not changed at all (avoiding \u201crethinking routing itself\u201d) and existing privacy is preserved (multiparty channels leak routing to all participants in the channel, but in sidepools, the multiparty construct is restricted to only rebalancing 2-party channels).  Again, this implies onchain actions to move funds to/from sidepools, but again, the point of scaling is to have multiple in-Lightning payments be summarized into a few onchain actions, not eliminate onchain actions to 0.</p>",
  "post_number": 6,
  "post_type": 1,
  "posts_count": 6,
  "updated_at": "2025-04-30T16:11:09.671Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 5,
  "readers_count": 4,
  "score": 0.8,
  "yours": false,
  "topic_id": 1640,
  "topic_slug": "mitigating-channel-depletion-in-the-lightning-network-a-survey-of-potential-solutions",
  "topic_title": "Mitigating Channel Depletion in the Lightning Network: A Survey of Potential Solutions",
  "topic_html_title": "Mitigating Channel Depletion in the Lightning Network: A Survey of Potential Solutions",
  "category_id": 7,
  "display_username": "ZmnSCPxj jxPCSnmZ",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Nearly all proposals listed above require some erosion of privacy.\n\nIn addition, flow valves do not fix the core complaint of payment failure anyway --- they just signal the payment failure earlier.\n\nWe have to accept that any solution to payment failure requires onchain action.  Full stop.  The point is not to set onchain actions to 0.  The point is to keep the onchain actions low, which is sufficient for scaling purposes.\n\nForwardable peerswaps scales a single onchain action to multiple channels being rebalanced at once.  Even if only a single channel is rebalanced, it potentially still scales multiple smaller in-Lightning payments over that channel to a single onchain action. It also does not erode existing privacy, as the details of in-Lightning payments are not changed (unlike local forwarding or centralized routing).\n\nAnother thing to consider is sidepools.  Sidepools are multiparty channels, but are unpublished. This implies that existing routing is not changed at all (avoiding \"rethinking routing itself\") and existing privacy is preserved (multiparty channels leak routing to all participants in the channel, but in sidepools, the multiparty construct is restricted to only rebalancing 2-party channels).  Again, this implies onchain actions to move funds to/from sidepools, but again, the point of scaling is to have multiple in-Lightning payments be summarized into a few onchain actions, not eliminate onchain actions to 0.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 104,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Nearly all proposals listed above require some erosion of privacy. \nIn addition, flow valves do not fix the core complaint of payment failure anyway \u2014 they just signal the payment failure earlier. \nWe have to accept that any solution to payment failure requires onchain action.  Full stop.  The point&hellip;",
  "truncated": true,
  "post_url": "/t/mitigating-channel-depletion-in-the-lightning-network-a-survey-of-potential-solutions/1640/6",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}