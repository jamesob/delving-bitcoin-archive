{
  "id": 4806,
  "name": "Antoine Poinsot",
  "username": "AntoineP",
  "avatar_template": "/user_avatar/delvingbitcoin.org/antoinep/{size}/483_2.png",
  "created_at": "2025-04-16T14:21:48.816Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"JeremyRubin\" data-post=\"11\" data-topic=\"1591\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/jeremyrubin/48/264_2.png\" class=\"avatar\"> JeremyRubin:</div>\n<blockquote>\n<p>use a legacy input B which has</p>\n<pre><code class=\"lang-auto\">scriptSig: [other program stuff] &lt;sig || ALL|ACP &gt; Dup &lt;pk&gt; checksig\nscript: &lt;pk&gt; checksig\n</code></pre>\n</blockquote>\n</aside>\n<p>For what it\u2019s worth i don\u2019t think you can reuse the signature like that. The message being signed by the <code>CHECKSIG</code> in the scriptSig is different from the message being signed by the <code>CHECKSIG</code> in the scriptPubKey. This is because <a href=\"https://github.com/bitcoin/bitcoin/blob/cdc32994feadf3f15df3cfac5baae36b4b011462/src/script/interpreter.cpp#L1975-L1980\">EvalScript is called</a> with the scriptSig for the former and with the scriptPubKey for the latter, which is later used as <a href=\"https://github.com/bitcoin/bitcoin/blob/cdc32994feadf3f15df3cfac5baae36b4b011462/src/script/interpreter.cpp#L324-L338\">the scriptCode in the <code>CHECKSIG</code> evaluation</a>.</p>\n<p>So, besides the fact that you are using a <code>CHECKSIG</code> in the scriptSig where i think you meant to use a <code>CHECKSIGVERIFY</code>, the script you propose would always either fail one of the two <code>CHECKSIG</code>s and therefore fail execution.</p>\n<p>(Interestingly i think you might be able to not duplicate the signature by using some clever <code>CODESEPARATOR</code> hack so that the scriptCode is the same for both the scriptSig and the scriptPubKey.)</p>",
  "post_number": 12,
  "post_type": 1,
  "posts_count": 11,
  "updated_at": "2025-04-16T14:21:48.816Z",
  "reply_count": 1,
  "reply_to_post_number": 11,
  "quote_count": 1,
  "incoming_link_count": 8,
  "reads": 13,
  "readers_count": 12,
  "score": 62.4,
  "yours": false,
  "topic_id": 1591,
  "topic_slug": "how-ctv-csfs-improves-bitvm-bridges",
  "topic_title": "How CTV+CSFS improves BitVM bridges",
  "topic_html_title": "How CTV+CSFS improves BitVM bridges",
  "category_id": 7,
  "display_username": "Antoine Poinsot",
  "primary_group_name": null,
  "flair_name": "wg-consensus-cleanup",
  "flair_url": "/uploads/default/original/1X/856d779f9ec58484f3a96285a21a813538b689f6.png",
  "flair_bg_color": "",
  "flair_color": "",
  "flair_group_id": 43,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": "Regular",
  "title_is_group": false,
  "bookmarked": false,
  "raw": "[quote=\"JeremyRubin, post:11, topic:1591\"]\nuse a legacy input B which has\n\n```\nscriptSig: [other program stuff] <sig || ALL|ACP > Dup <pk> checksig\nscript: <pk> checksig\n```\n[/quote]\n\nFor what it's worth i don't think you can reuse the signature like that. The message being signed by the `CHECKSIG` in the scriptSig is different from the message being signed by the `CHECKSIG` in the scriptPubKey. This is because [EvalScript is called](https://github.com/bitcoin/bitcoin/blob/cdc32994feadf3f15df3cfac5baae36b4b011462/src/script/interpreter.cpp#L1975-L1980) with the scriptSig for the former and with the scriptPubKey for the latter, which is later used as [the scriptCode in the `CHECKSIG` evaluation](https://github.com/bitcoin/bitcoin/blob/cdc32994feadf3f15df3cfac5baae36b4b011462/src/script/interpreter.cpp#L324-L338).\n\nSo, besides the fact that you are using a `CHECKSIG` in the scriptSig where i think you meant to use a `CHECKSIGVERIFY`, the script you propose would always either fail one of the two `CHECKSIG`s and therefore fail execution.\n\n(Interestingly i think you might be able to not duplicate the signature by using some clever `CODESEPARATOR` hack so that the scriptCode is the same for both the scriptSig and the scriptPubKey.)",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 12,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "For what it\u2019s worth i don\u2019t think you can reuse the signature like that. The message being signed by the CHECKSIG in the scriptSig is different from the message being signed by the CHECKSIG in the scriptPubKey. This is because <a href=\"https://github.com/bitcoin/bitcoin/blob/cdc32994feadf3f15df3cfac5baae36b4b011462/src/script/interpreter.cpp#L1975-L1980\">EvalScript is called</a> with the scriptSig for the former and with the scri&hellip;",
  "truncated": true,
  "post_url": "/t/how-ctv-csfs-improves-bitvm-bridges/1591/12",
  "reactions": [
    {
      "id": "thinking",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false
}