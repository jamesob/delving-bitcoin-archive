{
  "id": 4867,
  "name": "",
  "username": "sCrypt",
  "avatar_template": "/user_avatar/delvingbitcoin.org/scrypt/{size}/504_2.png",
  "created_at": "2025-04-23T22:55:06.036Z",
  "cooked": "<p>In practice, standardness rule has <code>SCRIPT_VERIFY_DISCOURAGE_OP_SUCCESS</code>, which would make any script containing <code>OP_SUCCESSx</code> <strong>fail</strong> immediately, instead of <strong>succeeding</strong>.\n</p><aside class=\"onebox githubblob\" data-onebox-src=\"https://github.com/bitcoin/bitcoin/blob/e5a00b24972461f7a181bc184dd461cedcce6161/src/policy/policy.h#L126\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/bitcoin/bitcoin/blob/e5a00b24972461f7a181bc184dd461cedcce6161/src/policy/policy.h#L126\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/bitcoin/bitcoin</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://github.com/bitcoin/bitcoin/blob/e5a00b24972461f7a181bc184dd461cedcce6161/src/policy/policy.h#L126\" target=\"_blank\" rel=\"noopener nofollow ugc\">src/policy/policy.h</a></h4>\n\n<div class=\"git-blob-info\">\n  <a href=\"https://github.com/bitcoin/bitcoin/blob/e5a00b24972461f7a181bc184dd461cedcce6161/src/policy/policy.h#L126\" rel=\"noopener nofollow ugc\"><code>e5a00b249</code></a>\n</div>\n\n\n\n    <pre class=\"onebox\"><code class=\"lang-h\">\n      <ol class=\"start lines\" start=\"116\" style=\"counter-reset: li-counter 115 ;\">\n          <li>                                                             SCRIPT_VERIFY_MINIMALDATA |</li>\n          <li>                                                             SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS |</li>\n          <li>                                                             SCRIPT_VERIFY_CLEANSTACK |</li>\n          <li>                                                             SCRIPT_VERIFY_MINIMALIF |</li>\n          <li>                                                             SCRIPT_VERIFY_NULLFAIL |</li>\n          <li>                                                             SCRIPT_VERIFY_LOW_S |</li>\n          <li>                                                             SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM |</li>\n          <li>                                                             SCRIPT_VERIFY_WITNESS_PUBKEYTYPE |</li>\n          <li>                                                             SCRIPT_VERIFY_CONST_SCRIPTCODE |</li>\n          <li>                                                             SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_TAPROOT_VERSION |</li>\n          <li class=\"selected\">                                                             SCRIPT_VERIFY_DISCOURAGE_OP_SUCCESS |</li>\n          <li>                                                             SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_PUBKEYTYPE};</li>\n          <li></li>\n          <li>/** For convenience, standard but not mandatory verify flags. */</li>\n          <li>static constexpr unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS{STANDARD_SCRIPT_VERIFY_FLAGS &amp; ~MANDATORY_SCRIPT_VERIFY_FLAGS};</li>\n          <li></li>\n          <li>/** Used as the flags parameter to sequence and nLocktime checks in non-consensus code. */</li>\n          <li>static constexpr unsigned int STANDARD_LOCKTIME_VERIFY_FLAGS{LOCKTIME_VERIFY_SEQUENCE};</li>\n          <li></li>\n          <li>CAmount GetDustThreshold(const CTxOut&amp; txout, const CFeeRate&amp; dustRelayFee);</li>\n          <li></li>\n      </ol>\n    </code></pre>\n\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<aside class=\"onebox githubblob\" data-onebox-src=\"https://github.com/bitcoin/bitcoin/blob/e5a00b24972461f7a181bc184dd461cedcce6161/src/script/interpreter.cpp#L1803\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/bitcoin/bitcoin/blob/e5a00b24972461f7a181bc184dd461cedcce6161/src/script/interpreter.cpp#L1803\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/bitcoin/bitcoin</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://github.com/bitcoin/bitcoin/blob/e5a00b24972461f7a181bc184dd461cedcce6161/src/script/interpreter.cpp#L1803\" target=\"_blank\" rel=\"noopener nofollow ugc\">src/script/interpreter.cpp</a></h4>\n\n<div class=\"git-blob-info\">\n  <a href=\"https://github.com/bitcoin/bitcoin/blob/e5a00b24972461f7a181bc184dd461cedcce6161/src/script/interpreter.cpp#L1803\" rel=\"noopener nofollow ugc\"><code>e5a00b249</code></a>\n</div>\n\n\n\n    <pre class=\"onebox\"><code class=\"lang-cpp\">\n      <ol class=\"start lines\" start=\"1793\" style=\"counter-reset: li-counter 1792 ;\">\n          <li>    // OP_SUCCESSx processing overrides everything, including stack element size limits</li>\n          <li>    CScript::const_iterator pc = exec_script.begin();</li>\n          <li>    while (pc &lt; exec_script.end()) {</li>\n          <li>        opcodetype opcode;</li>\n          <li>        if (!exec_script.GetOp(pc, opcode)) {</li>\n          <li>            // Note how this condition would not be reached if an unknown OP_SUCCESSx was found</li>\n          <li>            return set_error(serror, SCRIPT_ERR_BAD_OPCODE);</li>\n          <li>        }</li>\n          <li>        // New opcodes will be listed here. May use a different sigversion to modify existing opcodes.</li>\n          <li>        if (IsOpSuccess(opcode)) {</li>\n          <li class=\"selected\">            if (flags &amp; SCRIPT_VERIFY_DISCOURAGE_OP_SUCCESS) {</li>\n          <li>                return set_error(serror, SCRIPT_ERR_DISCOURAGE_OP_SUCCESS);</li>\n          <li>            }</li>\n          <li>            return set_success(serror);</li>\n          <li>        }</li>\n          <li>    }</li>\n          <li></li>\n          <li>    // Tapscript enforces initial stack size limits (altstack is empty here)</li>\n          <li>    if (stack.size() &gt; MAX_STACK_SIZE) return set_error(serror, SCRIPT_ERR_STACK_SIZE);</li>\n          <li>}</li>\n          <li></li>\n      </ol>\n    </code></pre>\n\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>So the above scheme works, assuming no miner colludes with Bob by turning off <code>SCRIPT_VERIFY_DISCOURAGE_OP_SUCCESS</code>. Updated <a href=\"https://scryptplatform.medium.com/betting-on-bitcoin-upgrades-a-smart-contract-wager-on-op-cat-activation-607c8f12da91\" rel=\"noopener nofollow ugc\">the original article</a>.</p>",
  "post_number": 8,
  "post_type": 1,
  "posts_count": 8,
  "updated_at": "2025-04-23T22:55:06.036Z",
  "reply_count": 0,
  "reply_to_post_number": 7,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 3,
  "readers_count": 2,
  "score": 0.6,
  "yours": false,
  "topic_id": 1632,
  "topic_slug": "betting-on-bitcoin-upgrades-a-smart-contract-wager-on-op-cat-activation",
  "topic_title": "Betting on Bitcoin Upgrades: A Smart Contract Wager on OP_CAT Activation",
  "topic_html_title": "Betting on Bitcoin Upgrades: A Smart Contract Wager on OP_CAT Activation",
  "category_id": 8,
  "display_username": "",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "username": "sCrypt",
    "name": "",
    "avatar_template": "/user_avatar/delvingbitcoin.org/scrypt/{size}/504_2.png"
  },
  "bookmarked": false,
  "raw": "In practice, standardness rule has `SCRIPT_VERIFY_DISCOURAGE_OP_SUCCESS`, which would make any script containing `OP_SUCCESSx` **fail** immediately, instead of **succeeding**.\nhttps://github.com/bitcoin/bitcoin/blob/e5a00b24972461f7a181bc184dd461cedcce6161/src/policy/policy.h#L126\n\nhttps://github.com/bitcoin/bitcoin/blob/e5a00b24972461f7a181bc184dd461cedcce6161/src/script/interpreter.cpp#L1803\n\nSo the above scheme works, assuming no miner colludes with Bob by turning off `SCRIPT_VERIFY_DISCOURAGE_OP_SUCCESS`. Updated [the original article](https://scryptplatform.medium.com/betting-on-bitcoin-upgrades-a-smart-contract-wager-on-op-cat-activation-607c8f12da91).",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 399,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "In practice, standardness rule has SCRIPT_VERIFY_DISCOURAGE_OP_SUCCESS, which would make any script containing OP_SUCCESSx fail immediately, instead of succeeding.\n \n\n\n\nSo the above scheme works, assuming no miner colludes with Bob by turning off SCRIPT_VERIFY_DISCOURAGE_OP_SUCCESS. Updated <a href=\"https://scryptplatform.medium.com/betting-on-bitcoin-upgrades-a-smart-contract-wager-on-op-cat-activation-607c8f12da91\" rel=\"noopener nofollow ugc\">the orig&hellip;</a>",
  "truncated": true,
  "post_url": "/t/betting-on-bitcoin-upgrades-a-smart-contract-wager-on-op-cat-activation/1632/8",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}