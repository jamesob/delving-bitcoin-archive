{
  "id": 4858,
  "name": "Pieter Wuille",
  "username": "sipa",
  "avatar_template": "/user_avatar/delvingbitcoin.org/sipa/{size}/1100_2.png",
  "created_at": "2025-04-22T19:32:58.819Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"sCrypt\" data-post=\"4\" data-topic=\"1632\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/scrypt/48/504_2.png\" class=\"avatar\"> sCrypt:</div>\n<blockquote>\n<p>Note OP_SUCCESSx (such as OP_SUCCESS126, i.e., OP_CAT after activation) only makes a script immediately succeeds if <strong>EXECUTED</strong>.</p>\n</blockquote>\n</aside>\n<p>This is incorrect. The mere <em>presence</em> of an <code>OP_SUCCESSx</code> opcode in a BIP 342 tapscript makes it automatically evaluate to true. Quoting <a href=\"https://github.com/bitcoin/bips/blob/757e15e56883b754963dff732dde01a425f9cec6/bip-0342.mediawiki\">BIP 342</a>, emphasis mine:</p>\n<blockquote>\n<p>The script as defined in BIP341 (i.e., the penultimate witness stack element after removing the optional annex) is called the tapscript and <strong>is decoded into opcodes</strong>, one by one:</p>\n<ol>\n<li>\u2026</li>\n<li>If any opcode numbered <em>80, 98, 126-129, 131-134, 137-138, 141-142, 149-153, 187-254</em> <strong>is encountered, validation succeeds (none of the rules below apply)</strong>. This is true even if later bytes in the tapscript would fail to decode otherwise. These opcodes are renamed to <code>OP_SUCCESS80</code>, \u2026, <code>OP_SUCCESS254</code>, and collectively known as <code>OP_SUCCESSx</code>.</li>\n<li>\u2026</li>\n<li><strong>The tapscript is executed</strong> according to the rules in the following section, with the initial stack as input.</li>\n</ol>\n</blockquote>\n<p>I think the scheme works, but only if you split the branches into separate script leaves.</p>",
  "post_number": 5,
  "post_type": 1,
  "posts_count": 7,
  "updated_at": "2025-04-22T19:39:02.776Z",
  "reply_count": 1,
  "reply_to_post_number": 4,
  "quote_count": 1,
  "incoming_link_count": 2,
  "reads": 11,
  "readers_count": 10,
  "score": 17.2,
  "yours": false,
  "topic_id": 1632,
  "topic_slug": "betting-on-bitcoin-upgrades-a-smart-contract-wager-on-op-cat-activation",
  "topic_title": "Betting on Bitcoin Upgrades: A Smart Contract Wager on OP_CAT Activation",
  "topic_html_title": "Betting on Bitcoin Upgrades: A Smart Contract Wager on OP_CAT Activation",
  "category_id": 8,
  "display_username": "Pieter Wuille",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"sCrypt, post:4, topic:1632\"]\nNote OP_SUCCESSx (such as OP_SUCCESS126, i.e., OP_CAT after activation) only makes a script immediately succeeds if **EXECUTED**.\n[/quote]\n\nThis is incorrect. The mere *presence* of an `OP_SUCCESSx` opcode in a BIP 342 tapscript makes it automatically evaluate to true. Quoting [BIP 342](https://github.com/bitcoin/bips/blob/757e15e56883b754963dff732dde01a425f9cec6/bip-0342.mediawiki), emphasis mine:\n\n> The script as defined in BIP341 (i.e., the penultimate witness stack element after removing the optional annex) is called the tapscript and **is decoded into opcodes**, one by one:\n> 1. ...\n> 2. If any opcode numbered *80, 98, 126-129, 131-134, 137-138, 141-142, 149-153, 187-254* **is encountered, validation succeeds (none of the rules below apply)**. This is true even if later bytes in the tapscript would fail to decode otherwise. These opcodes are renamed to `OP_SUCCESS80`, ..., `OP_SUCCESS254`, and collectively known as `OP_SUCCESSx`.\n> 3. ...\n> 4. **The tapscript is executed** according to the rules in the following section, with the initial stack as input.\n\nI think the scheme works, but only if you split the branches into separate script leaves.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 96,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": "Github link was replaced with a permanent link",
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "This is incorrect. The mere presence of an OP_SUCCESSx opcode in a BIP 342 tapscript makes it automatically evaluate to true. Quoting <a href=\"https://github.com/bitcoin/bips/blob/757e15e56883b754963dff732dde01a425f9cec6/bip-0342.mediawiki\">BIP 342</a>, emphasis mine: \n\nThe script as defined in BIP341 (i.e., the penultimate witness stack element after removing the optional annex) is called the tapscript and&hellip;",
  "truncated": true,
  "post_url": "/t/betting-on-bitcoin-upgrades-a-smart-contract-wager-on-op-cat-activation/1632/5",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}