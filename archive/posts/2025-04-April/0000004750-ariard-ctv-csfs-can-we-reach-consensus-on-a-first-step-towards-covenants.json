{
  "id": 4750,
  "name": "Antoine Riard",
  "username": "ariard",
  "avatar_template": "/letter_avatar_proxy/v4/letter/a/c67d28/{size}.png",
  "created_at": "2025-04-12T02:51:11.523Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"instagibbs\" data-post=\"58\" data-topic=\"1509\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/instagibbs/48/28_2.png\" class=\"avatar\"> instagibbs:</div>\n<blockquote>\n<p>Converts CTV into a push-onto-stack taproot-only opcode</p>\n</blockquote>\n</aside>\n<p>I\u2019m +1 for taproot-only CTV as an op_success for future composability. No opinion on an OP_PUSHTEMPLATE + OP_EQUALVERIFY or OP_CHECKTEMPLATEVERIFY approach.</p>\n<p>By the way, I believe there might be some DoS surface that has been not considered in the BIP:\n</p><aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/bitcoin/bitcoin/pull/31989#discussion_r2040517393\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/bitcoin/bitcoin/pull/31989#discussion_r2040517393\" target=\"_blank\" rel=\"noopener\">github.com/bitcoin/bitcoin</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\" data-github-private-repo=\"false\">\n\n\n    <div class=\"github-icon-container\" title=\"Discussion\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M1.679 7.932c.412-.621 1.242-1.75 2.366-2.717C5.175 4.242 6.527 3.5 8 3.5c1.473 0 2.824.742 3.955 1.715 1.124.967 1.954 2.096 2.366 2.717a.119.119 0 010 .136c-.412.621-1.242 1.75-2.366 2.717C10.825 11.758 9.473 12.5 8 12.5c-1.473 0-2.824-.742-3.955-1.715C2.92 9.818 2.09 8.69 1.679 8.068a.119.119 0 010-.136zM8 2c-1.981 0-3.67.992-4.933 2.078C1.797 5.169.88 6.423.43 7.1a1.619 1.619 0 000 1.798c.45.678 1.367 1.932 2.637 3.024C4.329 13.008 6.019 14 8 14c1.981 0 3.67-.992 4.933-2.078 1.27-1.091 2.187-2.345 2.637-3.023a1.619 1.619 0 000-1.798c-.45-.678-1.367-1.932-2.637-3.023C11.671 2.992 9.981 2 8 2zm0 8a2 2 0 100-4 2 2 0 000 4z\"></path></svg>\n    </div>\n\n\n  <div class=\"github-info-container\">\n\n\n      <h4>\n        Review by\n        <a href=\"https://github.com/ariard\" target=\"_blank\" rel=\"noopener\">\n          <img alt=\"\" src=\"https://delvingbitcoin.org/uploads/default/original/1X/c19ba93a6da32c9a61acfd3c3d86ee99102af88b.png\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"CDEBDB\">\n          ariard\n        </a> - <a href=\"https://github.com/bitcoin/bitcoin/pull/31989#discussion_r2040517393\" target=\"_blank\" rel=\"noopener\">BIP-119 (OP_CHECKTEMPLATEVERIFY) (regtest only)</a>\n      </h4>\n\n\n    <div class=\"branches\">\n      <code>master</code> \u2190 <code>jamesob:2025-03-ctv</code>\n    </div>\n\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">If I\u2019m understanding the biggest transaction size that can be verified by an OP_<span class=\"show-more-container\"><a href=\"https://github.com/bitcoin/bitcoin/pull/31989\" target=\"_blank\" rel=\"noopener\" class=\"show-more\">\u2026</a></span><span class=\"excerpt hidden\">CTV is equal to ~`MAX_BLOCK_WEIGHT`.`\n\nWhile there is a limit on the max transaction size (`MAX_STANDARD_TX_WEIGHT`), this a transaction-relay only limit and if a miner is accepting non-standard tx, and there are of course some, a ~`MAX_BLOCK_WEIGHT` size transaction can be given as spending a CTV-locked input.\n\nMoreover, currently there are only 2 caches in bitcoin core to speed up the validation of a transaction (`SignatureCache`) and (`m_script_execution_cache`). IIRC, they both commit to the transaction hash spends with by a `uint256 entry`.  So if a ~`MAX_BLOCK_WEIGHT` changes for 1-bit, I think there will be a re-computation of the hash for the whole ~`MAX_BLOCK_WEIGHT`. \n\nWhat prevents a peer to repeat broadcast of such ~`MAX_BLOCK_WEIGHT` tx CTV-spend to a target node ? Peer cost is just to tweaking some random 1-bit in the whole ~`MAX_BLOCK_WEIGHT` surface. Note, I believe the max size hashing you can do (i.e `OP_HASH256`) is limited by `MAX_STACK_SIZE`. I\u2019m not sure this is considered in the BIP.</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n",
  "post_number": 59,
  "post_type": 1,
  "posts_count": 81,
  "updated_at": "2025-04-12T02:51:25.415Z",
  "reply_count": 0,
  "reply_to_post_number": 58,
  "quote_count": 1,
  "incoming_link_count": 1,
  "reads": 62,
  "readers_count": 61,
  "score": 17.4,
  "yours": false,
  "topic_id": 1509,
  "topic_slug": "ctv-csfs-can-we-reach-consensus-on-a-first-step-towards-covenants",
  "topic_title": "CTV+CSFS: Can we reach consensus on a first step towards covenants?",
  "topic_html_title": "CTV+CSFS: Can we reach consensus on a first step towards covenants?",
  "category_id": 7,
  "display_username": "Antoine Riard",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"instagibbs, post:58, topic:1509\"]\nConverts CTV into a push-onto-stack taproot-only opcode\n[/quote]\n\n\nI\u2019m +1 for taproot-only CTV as an op_success for future composability. No opinion on an OP_PUSHTEMPLATE + OP_EQUALVERIFY or OP_CHECKTEMPLATEVERIFY approach.\n\nBy the way, I believe there might be some DoS surface that has been not considered in the BIP:\nhttps://github.com/bitcoin/bitcoin/pull/31989#discussion_r2040517393",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 5,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "I\u2019m +1 for taproot-only CTV as an op_success for future composability. No opinion on an OP_PUSHTEMPLATE + OP_EQUALVERIFY or OP_CHECKTEMPLATEVERIFY approach. \nBy the way, I believe there might be some DoS surface that has been not considered in the BIP:",
  "truncated": true,
  "post_url": "/t/ctv-csfs-can-we-reach-consensus-on-a-first-step-towards-covenants/1509/59",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}