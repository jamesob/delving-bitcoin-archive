{
  "id": 4898,
  "name": "Jeremy Rubin",
  "username": "JeremyRubin",
  "avatar_template": "/user_avatar/delvingbitcoin.org/jeremyrubin/{size}/264_2.png",
  "created_at": "2025-04-29T18:10:29.459Z",
  "cooked": "<p>yeah that seems correct \u2013 inputA and inputB must be separate txs, or you entail a hash cycle.</p>\n<p>interestingly, for this case, you <em>can</em> do both sides with (a variant of txhash), by doing a constraint check that they both have the same txid and the correct vout\u2026</p>\n<p>e.g.</p>\n<p>input 0: GETTXIDOFINPUT(0) == GETTXIDOFINPUT(1) &amp;&amp; GETCURRENTINDEX == 0\ninput 1: GETTXIDOFINPUT(0) == GETTXIDOFINPUT(1) &amp;&amp; GETCURRENTINDEX == 1</p>\n<p>where txid is known to have two outputs (or else do some other checks).</p>\n<p>I\u2019m not sure this is relevant, or even interesting, since there\u2019s marginal difference between two inputs that must be spent together from the same tx, and one input that contains the value for both(, or can be split in two after some delay, optionally).</p>",
  "post_number": 24,
  "post_type": 1,
  "posts_count": 21,
  "updated_at": "2025-04-29T18:10:29.459Z",
  "reply_count": 0,
  "reply_to_post_number": 23,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 6,
  "readers_count": 5,
  "score": 1.2,
  "yours": false,
  "topic_id": 1591,
  "topic_slug": "how-ctv-csfs-improves-bitvm-bridges",
  "topic_title": "How CTV+CSFS improves BitVM bridges",
  "topic_html_title": "How CTV+CSFS improves BitVM bridges",
  "category_id": 7,
  "display_username": "Jeremy Rubin",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "username": "RobinLinus",
    "name": "Robin Linus",
    "avatar_template": "/user_avatar/delvingbitcoin.org/robinlinus/{size}/130_2.png"
  },
  "bookmarked": false,
  "raw": "yeah that seems correct -- inputA and inputB must be separate txs, or you entail a hash cycle.\n\ninterestingly, for this case, you *can* do both sides with (a variant of txhash), by doing a constraint check that they both have the same txid and the correct vout...\n\ne.g. \n\ninput 0: GETTXIDOFINPUT(0) == GETTXIDOFINPUT(1) && GETCURRENTINDEX == 0\ninput 1: GETTXIDOFINPUT(0) == GETTXIDOFINPUT(1) && GETCURRENTINDEX == 1\n\nwhere txid is known to have two outputs (or else do some other checks).\n\nI'm not sure this is relevant, or even interesting, since there's marginal difference between two inputs that must be spent together from the same tx, and one input that contains the value for both(, or can be split in two after some delay, optionally).",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 224,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "yeah that seems correct \u2013 inputA and inputB must be separate txs, or you entail a hash cycle. \ninterestingly, for this case, you can do both sides with (a variant of txhash), by doing a constraint check that they both have the same txid and the correct vout\u2026 \ne.g. \ninput 0: GETTXIDOFINPUT(0) == GETT&hellip;",
  "truncated": true,
  "post_url": "/t/how-ctv-csfs-improves-bitvm-bridges/1591/24",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}