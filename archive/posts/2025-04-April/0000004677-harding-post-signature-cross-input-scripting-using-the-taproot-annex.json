{
  "id": 4677,
  "name": "David A. Harding",
  "username": "harding",
  "avatar_template": "/user_avatar/delvingbitcoin.org/harding/{size}/925_2.png",
  "created_at": "2025-04-02T08:05:02.199Z",
  "cooked": "<p>I found this post a bit confusing because it seems to be proposing two orthogonal things:</p>\n<ol>\n<li>A signer satisfying existing script conditions but adding new conditions that must be satisfied by other signers</li>\n<li>Additional introspection</li>\n</ol>\n<p>For point 1 (adding conditions), I think you get that with pretty much any delegation feature (e.g., OP_CSFS, graftroot/g\u2019root, BitVM-style Script-based Lamport sigs).  I don\u2019t think there\u2019s any benefit in those cases to putting the additional script operations in the annex rather than on the regular witness stack.</p>\n<p>For point 2 (additional introspection opcodes), this is heavily discussed.  The novelty in your proposal is potentially only allowing certain types of introspection during delegation rather than original script creation.  Do you have any examples of how that might be useful?  (I don\u2019t understand your example about \u201cpermanently encumber[ing] the resulting outputs\u201d.)</p>",
  "post_number": 2,
  "post_type": 1,
  "updated_at": "2025-04-02T08:05:02.199Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 9,
  "readers_count": 8,
  "score": 1.8,
  "yours": false,
  "topic_id": 1520,
  "topic_slug": "post-signature-cross-input-scripting-using-the-taproot-annex",
  "topic_title": "Post-Signature Cross-Input Scripting Using the Taproot Annex",
  "topic_html_title": "Post-Signature Cross-Input Scripting Using the Taproot Annex",
  "category_id": 7,
  "display_username": "David A. Harding",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "I found this post a bit confusing because it seems to be proposing two orthogonal things:\n\n1. A signer satisfying existing script conditions but adding new conditions that must be satisfied by other signers\n2. Additional introspection\n\nFor point 1 (adding conditions), I think you get that with pretty much any delegation feature (e.g., OP_CSFS, graftroot/g'root, BitVM-style Script-based Lamport sigs).  I don't think there's any benefit in those cases to putting the additional script operations in the annex rather than on the regular witness stack.\n\nFor point 2 (additional introspection opcodes), this is heavily discussed.  The novelty in your proposal is potentially only allowing certain types of introspection during delegation rather than original script creation.  Do you have any examples of how that might be useful?  (I don't understand your example about \"permanently encumber[ing] the resulting outputs\".)",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 6,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}