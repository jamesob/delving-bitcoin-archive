{
  "id": 4893,
  "name": "Rene Pickhardt",
  "username": "renepickhardt",
  "avatar_template": "/user_avatar/delvingbitcoin.org/renepickhardt/{size}/7_2.png",
  "created_at": "2025-04-29T11:44:03.172Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"t-bast\" data-post=\"3\" data-topic=\"1640\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/t-bast/48/98_2.png\" class=\"avatar\"> t-bast:</div>\n<blockquote>\n<p>Can you detail that a bit more?</p>\n</blockquote>\n</aside>\n<p>Sorry I may have shortened my initial post a bit too much with respect to the control valves section. As you pointed out the semantics of <code>htlc_maximum_msat</code> are clear in the sense that your node will not accept an hltc of a larger amount and indeed sending nodes will respect this in path or flow finding (though it is not clear what happens if a node tries to add a second HTLC with the same preimage that also respects <code>htlc_maximum_msat</code>).</p>\n<p>However I have seen various motivations of why node operators select a specific value for <code>htlc_maximum_msat</code> for example</p>\n<ul>\n<li>I have seen node operators signaling the amount of liquidity that they have left in the channel (or a fraction of the remaining liquidity, such that they do not have to update the value after each successful routing).</li>\n<li>In my initial Blog article I suggested to use a markov process such that two peers that share a channel converge to a ratio of <code>htlc_maximum_msat</code> values so that the expected flow through the channel is balanced - given the demand. That of course is a very different semantic than just selecting a fraction of the liquidity</li>\n<li>In eclair it seems that you set the value to 0 if the channel is almost depleted and that <a href=\"https://github.com/ACINQ/eclair/blob/826284cb277c28c7eef14aa275f3d6e3255c8e66/docs/release-notes/eclair-v0.10.0.md?plain=1#L77\" rel=\"noopener nofollow ugc\">you have various threasholds depending on the available liquidity</a>. Also you seem to <a href=\"https://github.com/ACINQ/eclair/commit/8320964c547022c02c4d6fd0c7af82284534cc22\" rel=\"noopener nofollow ugc\">set the value</a>\nto what you <a href=\"https://github.com/ACINQ/eclair/blob/826284cb277c28c7eef14aa275f3d6e3255c8e66/eclair-core/src/main/scala/fr/acinq/eclair/router/BalanceEstimate.scala#L123\" rel=\"noopener nofollow ugc\">believe you can forward</a>.</li>\n</ul>\n<aside class=\"quote no-group\" data-username=\"t-bast\" data-post=\"3\" data-topic=\"1640\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/t-bast/48/98_2.png\" class=\"avatar\"> t-bast:</div>\n<blockquote>\n<p>We\u2019ve been using <code>htlc_maximum_msat</code> in eclair as a control valve like you suggested a few years ago, and it seems to be working quite nicely (I\u2019m not sure how exactly we could quantify that \u201cit works\u201d, but at least we\u2019ve implemented the mechanism and haven\u2019t seen any specific issues with it).</p>\n</blockquote>\n</aside>\n<p>I am happy to hear that you an confirmed that a version of my suggestion works for you. I\u2019d love to see some quantification for this. Maybe if it has sufficient interest from your end we could out of band discuss how we could measure and quantify this. Maybe it gives insights on weather this is sufficient or if other steps are necessary.</p>\n<aside class=\"quote no-group\" data-username=\"t-bast\" data-post=\"3\" data-topic=\"1640\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/t-bast/48/98_2.png\" class=\"avatar\"> t-bast:</div>\n<blockquote>\n<p>I don\u2019t know if other implementations have done it, but it\u2019s nice because it doesn\u2019t require any protocol changes: you only need to update your implementation, and other nodes on the network will respect the <code>htlc_maximum_msat</code> value you dynamically set. It creates a bit of a (reasonable) <code>channel_update</code> spam though.</p>\n</blockquote>\n</aside>\n<p>Yes that was exactly why I advocated for <code>htlc_maximum_msat</code> initially. It works out of the box without protocol upgrade which is extremely nice! However as in my first reply a protocol wide agreement on what nodes signal with their value may make this mechanism even stronger.</p>",
  "post_number": 4,
  "post_type": 1,
  "posts_count": 4,
  "updated_at": "2025-04-29T11:44:03.172Z",
  "reply_count": 0,
  "reply_to_post_number": 3,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 8,
  "readers_count": 7,
  "score": 1.6,
  "yours": false,
  "topic_id": 1640,
  "topic_slug": "mitigating-channel-depletion-in-the-lightning-network-a-survey-of-potential-solutions",
  "topic_title": "Mitigating Channel Depletion in the Lightning Network: A Survey of Potential Solutions",
  "topic_html_title": "Mitigating Channel Depletion in the Lightning Network: A Survey of Potential Solutions",
  "category_id": 7,
  "display_username": "Rene Pickhardt",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"t-bast, post:3, topic:1640\"]\nCan you detail that a bit more?\n[/quote]\n\nSorry I may have shortened my initial post a bit too much with respect to the control valves section. As you pointed out the semantics of `htlc_maximum_msat` are clear in the sense that your node will not accept an hltc of a larger amount and indeed sending nodes will respect this in path or flow finding (though it is not clear what happens if a node tries to add a second HTLC with the same preimage that also respects `htlc_maximum_msat`).\n\nHowever I have seen various motivations of why node operators select a specific value for `htlc_maximum_msat` for example\n* I have seen node operators signaling the amount of liquidity that they have left in the channel (or a fraction of the remaining liquidity, such that they do not have to update the value after each successful routing).\n* In my initial Blog article I suggested to use a markov process such that two peers that share a channel converge to a ratio of `htlc_maximum_msat` values so that the expected flow through the channel is balanced - given the demand. That of course is a very different semantic than just selecting a fraction of the liquidity\n* In eclair it seems that you set the value to 0 if the channel is almost depleted and that [you have various threasholds depending on the available liquidity](https://github.com/ACINQ/eclair/blob/826284cb277c28c7eef14aa275f3d6e3255c8e66/docs/release-notes/eclair-v0.10.0.md?plain=1#L77). Also you seem to [set the value](https://github.com/ACINQ/eclair/commit/8320964c547022c02c4d6fd0c7af82284534cc22)\n to what you [believe you can forward](https://github.com/ACINQ/eclair/blob/826284cb277c28c7eef14aa275f3d6e3255c8e66/eclair-core/src/main/scala/fr/acinq/eclair/router/BalanceEstimate.scala#L123). \n\n[quote=\"t-bast, post:3, topic:1640\"]\nWe\u2019ve been using `htlc_maximum_msat` in eclair as a control valve like you suggested a few years ago, and it seems to be working quite nicely (I\u2019m not sure how exactly we could quantify that \u201cit works\u201d, but at least we\u2019ve implemented the mechanism and haven\u2019t seen any specific issues with it).\n[/quote]\n\nI am happy to hear that you an confirmed that a version of my suggestion works for you. I'd love to see some quantification for this. Maybe if it has sufficient interest from your end we could out of band discuss how we could measure and quantify this. Maybe it gives insights on weather this is sufficient or if other steps are necessary.\n\n[quote=\"t-bast, post:3, topic:1640\"]\nI don\u2019t know if other implementations have done it, but it\u2019s nice because it doesn\u2019t require any protocol changes: you only need to update your implementation, and other nodes on the network will respect the `htlc_maximum_msat` value you dynamically set. It creates a bit of a (reasonable) `channel_update` spam though.\n[/quote]\n\nYes that was exactly why I advocated for `htlc_maximum_msat` initially. It works out of the box without protocol upgrade which is extremely nice! However as in my first reply a protocol wide agreement on what nodes signal with their value may make this mechanism even stronger.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 8,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Sorry I may have shortened my initial post a bit too much with respect to the control valves section. As you pointed out the semantics of htlc_maximum_msat are clear in the sense that your node will not accept an hltc of a larger amount and indeed sending nodes will respect this in path or flow fin&hellip;",
  "truncated": true,
  "post_url": "/t/mitigating-channel-depletion-in-the-lightning-network-a-survey-of-potential-solutions/1640/4",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}