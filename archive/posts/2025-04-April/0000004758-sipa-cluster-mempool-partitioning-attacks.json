{
  "id": 4758,
  "name": "Pieter Wuille",
  "username": "sipa",
  "avatar_template": "/user_avatar/delvingbitcoin.org/sipa/{size}/1100_2.png",
  "created_at": "2025-04-14T12:04:34.878Z",
  "cooked": "<p>Somewhat related, but if we are considering P2P extensions to relay linearization information for clusters (something I\u2019m skeptical about as pointed out above, but ignoring that), there may be another option worth considering.</p>\n<p>In the <a href=\"https://delvingbitcoin.org/t/spanning-forest-cluster-linearization/1419\" class=\"inline-onebox\">Spanning-forest cluster linearization</a> algorithm, if one knows which dependencies are \u201cactive\u201d (which is just <span class=\"math\">m</span> bits, or <span class=\"math\">n \\log_2(2n+1)</span> bits with a more advanced encoding), it is possible to decide in <span class=\"math\">\\mathcal{O}(n^2)</span> time whether it represents an optimal state. In contrast, deciding whether an existing linearization is optimal is I believe equivalent to computing a single min-cut, so <span class=\"math\">\\mathcal{O}(n^2 \\sqrt{m})</span> in practice, <span class=\"math\">\\mathcal{O}(nm)</span> in theory, in case the existing linearization consists of a single chunk.</p>\n<p>A downside is that I don\u2019t know how to \u201ccombine\u201d these states. For linearizations we have the <span class=\"math\">\\mathcal{O}(n^2)</span> <a href=\"https://delvingbitcoin.org/t/merging-incomparable-linearizations/209\">merging algorithm</a> that can take two incomparable suboptimal linearizations, and compute a new linearization that is better than both. In a P2P setting this means it is possible to incorporate good linearization information even if there are mismatches between peers (without guarantees of optimality, of course). I don\u2019t know anything similar for the spanning-forest state.</p>\n<p>All of this may end up being moot if we can effectively linearize everything optimally in practice, of course\u2026</p>",
  "post_number": 4,
  "post_type": 1,
  "posts_count": 4,
  "updated_at": "2025-04-14T12:04:34.878Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 6,
  "readers_count": 5,
  "score": 16.2,
  "yours": false,
  "topic_id": 1548,
  "topic_slug": "cluster-mempool-partitioning-attacks",
  "topic_title": "Cluster mempool partitioning attacks",
  "topic_html_title": "Cluster mempool partitioning attacks",
  "category_id": 8,
  "display_username": "Pieter Wuille",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Somewhat related, but if we are considering P2P extensions to relay linearization information for clusters (something I'm skeptical about as pointed out above, but ignoring that), there may be another option worth considering.\n\nIn the https://delvingbitcoin.org/t/spanning-forest-cluster-linearization/1419 algorithm, if one knows which dependencies are \"active\" (which is just $m$ bits, or $n \\log_2(2n+1)$ bits with a more advanced encoding), it is possible to decide in $\\mathcal{O}(n^2)$ time whether it represents an optimal state. In contrast, deciding whether an existing linearization is optimal is I believe equivalent to computing a single min-cut, so $\\mathcal{O}(n^2 \\sqrt{m})$ in practice, $\\mathcal{O}(nm)$ in theory, in case the existing linearization consists of a single chunk.\n\nA downside is that I don't know how to \"combine\" these states. For linearizations we have the $\\mathcal{O}(n^2)$ [merging algorithm](https://delvingbitcoin.org/t/merging-incomparable-linearizations/209) that can take two incomparable suboptimal linearizations, and compute a new linearization that is better than both. In a P2P setting this means it is possible to incorporate good linearization information even if there are mismatches between peers (without guarantees of optimality, of course). I don't know anything similar for the spanning-forest state.\n\nAll of this may end up being moot if we can effectively linearize everything optimally in practice, of course...",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 96,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Somewhat related, but if we are considering P2P extensions to relay linearization information for clusters (something I\u2019m skeptical about as pointed out above, but ignoring that), there may be another option worth considering. \nIn the <a href=\"https://delvingbitcoin.org/t/spanning-forest-cluster-linearization/1419\" class=\"inline-onebox\">Spanning-forest cluster linearization</a> algorithm, if one knows whi&hellip;",
  "truncated": true,
  "post_url": "/t/cluster-mempool-partitioning-attacks/1548/4",
  "reactions": [
    {
      "id": "heart",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false
}