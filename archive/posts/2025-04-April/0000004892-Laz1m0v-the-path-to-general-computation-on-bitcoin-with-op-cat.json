{
  "id": 4892,
  "name": "Laz1mov",
  "username": "Laz1m0v",
  "avatar_template": "/user_avatar/delvingbitcoin.org/laz1m0v/{size}/1025_2.png",
  "created_at": "2025-04-29T11:11:55.925Z",
  "cooked": "<p>tbh I think you missed the points of my previous message.</p>\n<aside class=\"quote no-group quote-modified\" data-username=\"Laz1m0v\" data-post=\"2\" data-topic=\"1106\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/laz1m0v/48/1025_2.png\" class=\"avatar\"> Laz1m0v:</div>\n<blockquote>\n<aside class=\"quote no-group\" data-username=\"victorkstarkware\" data-post=\"1\" data-topic=\"1106\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/victorkstarkware/48/772_2.png\" class=\"avatar\"> victorkstarkware:</div>\n<blockquote>\n<p>Bitcoin scripts <strong>are not stateful</strong>.</p>\n</blockquote>\n</aside>\n<p>This assertion is true but it can be done through Indexers and trackers. You don\u2019t specify in your post how a Bitcoin node should evolve to handle such states and how you\u2019ll be able to handle those evolutive states in Bitcoin (node). Do node will directly store each states? Do we would need to build covenants trackers into the node?</p>\n</blockquote>\n</aside>\n<p><strong>It</strong> refers  to statefulness of Bitcoin script that can be achieved obviously through metaprotocol indexing without the need to constraint utxos at the main layer.</p>\n<p>Globally I think <code>OP_CAT</code> can be very dangerous for Bitcoin as long as it allows recursive covenants.</p>\n<aside class=\"quote no-group\" data-username=\"victorkstarkware\" data-post=\"5\" data-topic=\"1106\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/victorkstarkware/48/772_2.png\" class=\"avatar\"> victorkstarkware:</div>\n<blockquote>\n<p>A smart contract here means some sort of stateful logic, with a collection of functions that can be invoked to transition the state to a different, valid one, according to predefined rules.</p>\n</blockquote>\n</aside>\n<p>A definition of covenant give by <span class=\"mention\">@petertodd</span> is:\n\u201c<strong>covenants</strong> are mechanisms by which the way a txout can be spent is is restricted in advance, such that the form of transactions used to spend that txout are pre-defined or otherwise restricted in a way that is not purely limited to signatures.\u201d\n</p><aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://petertodd.org/2024/covenant-dependent-layer-2-review\">\n  <header class=\"source\">\n\n      <a href=\"https://petertodd.org/2024/covenant-dependent-layer-2-review\" target=\"_blank\" rel=\"noopener nofollow ugc\">petertodd.org</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    \n\n<h3><a href=\"https://petertodd.org/2024/covenant-dependent-layer-2-review\" target=\"_blank\" rel=\"noopener nofollow ugc\">Soft-Fork/Covenant Dependent Layer 2 Review</a></h3>\n\n  <p>On-chain wallets achieve a roughly 1-1 mapping of transactions to transactions:for every economic transaction that a user performs, roughly one blockchaintra...</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>In other words it allows stateful computation over UTXOs with transitioning mechanisms allowed by Bitcoin script operation. I don\u2019t see why do you want to talk about SCs as with a loose definition.</p>\n<p>Happy to know you have $1T of value over Starknet and so, why do you want to come on Bitcoin instead of staying on your own layer?</p>\n<p>I really feel there is a marketing campaign over delvingbitcoin for <code>OP_CAT</code> but I don\u2019t think it\u2019ll help to reach a dev consensus over this operation. <code>OP_CTV</code> seems way more dangerous and assume to enable already a lot of new use cases where to be honest validate a stark proof on Bitcoin doesn\u2019t seem enough to take such risk of recursive covenants.</p>\n<p>Gl with your products. Hope you\u2019ll make money</p>",
  "post_number": 8,
  "post_type": 1,
  "posts_count": 8,
  "updated_at": "2025-04-29T11:11:55.925Z",
  "reply_count": 0,
  "reply_to_post_number": 5,
  "quote_count": 3,
  "incoming_link_count": 5,
  "reads": 8,
  "readers_count": 7,
  "score": 26.6,
  "yours": false,
  "topic_id": 1106,
  "topic_slug": "the-path-to-general-computation-on-bitcoin-with-op-cat",
  "topic_title": "The path to general computation on Bitcoin (with OP_CAT)",
  "topic_html_title": "The path to general computation on Bitcoin (with OP_CAT)",
  "category_id": 8,
  "display_username": "Laz1mov",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "tbh I think you missed the points of my previous message. \n\n[quote=\"Laz1m0v, post:2, topic:1106\"]\n[quote=\"victorkstarkware, post:1, topic:1106\"]\nBitcoin scripts **are not stateful**.\n[/quote]\n\nThis assertion is true but it can be done through Indexers and trackers. You don\u2019t specify in your post how a Bitcoin node should evolve to handle such states and how you\u2019ll be able to handle those evolutive states in Bitcoin (node). Do node will directly store each states? Do we would need to build covenants trackers into the node?\n[/quote]\n\n**It** refers  to statefulness of Bitcoin script that can be achieved obviously through metaprotocol indexing without the need to constraint utxos at the main layer. \n\n\nGlobally I think `OP_CAT` can be very dangerous for Bitcoin as long as it allows recursive covenants. \n\n[quote=\"victorkstarkware, post:5, topic:1106\"]\nA smart contract here means some sort of stateful logic, with a collection of functions that can be invoked to transition the state to a different, valid one, according to predefined rules.\n[/quote]\n\nA definition of covenant give by @petertodd is: \n\"**covenants** are mechanisms by which the way a txout can be spent is is restricted in advance, such that the form of transactions used to spend that txout are pre-defined or otherwise restricted in a way that is not purely limited to signatures.\"\nhttps://petertodd.org/2024/covenant-dependent-layer-2-review\n\nIn other words it allows stateful computation over UTXOs with transitioning mechanisms allowed by Bitcoin script operation. I don't see why do you want to talk about SCs as with a loose definition. \n\nHappy to know you have $1T of value over Starknet and so, why do you want to come on Bitcoin instead of staying on your own layer? \n\nI really feel there is a marketing campaign over delvingbitcoin for `OP_CAT` but I don't think it'll help to reach a dev consensus over this operation. `OP_CTV` seems way more dangerous and assume to enable already a lot of new use cases where to be honest validate a stark proof on Bitcoin doesn't seem enough to take such risk of recursive covenants. \n\nGl with your products. Hope you'll make money",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 661,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "tbh I think you missed the points of my previous message. \n\nThis assertion is true but it can be done through Indexers and trackers. You don\u2019t specify in your post how a Bitcoin node should evolve to handle such states and how you\u2019ll be able to handle those evolutive states in Bitcoin (node). Do nod&hellip;",
  "truncated": true,
  "post_url": "/t/the-path-to-general-computation-on-bitcoin-with-op-cat/1106/8",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}