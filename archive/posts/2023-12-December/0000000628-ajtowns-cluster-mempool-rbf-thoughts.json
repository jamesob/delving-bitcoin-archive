{
  "id": 628,
  "name": "Anthony Towns",
  "username": "ajtowns",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/3_2.png",
  "created_at": "2023-12-05T17:44:23.047Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"instagibbs\" data-post=\"11\" data-topic=\"156\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/instagibbs/48/28_2.png\" class=\"avatar\"> instagibbs:</div>\n<blockquote>\n<p>Assuming these sizes are problematic, the two levers I see are cluster size, and number of allowed clusters to touch.</p>\n</blockquote>\n</aside>\n<p>If you limit the number of allowed clusters to touch but dropped the ancestor count limit (leaving it implied by the chunk limit), you could get a weird scenario:</p>\n<p>Suppose you have a CPFP arrangement to pay for a bunch of txs:</p>\n<pre data-code-height=\"147\" data-code-wrap=\"mermaid\"><code class=\"lang-mermaid\">graph TD\n   P1 --&gt; C\n   P2 --&gt; C\n   Pn[P3..P10] --&gt; C\n</code></pre>\n<p>But then you realise there\u2019s another 20 txs you want to CPFP, so you RBF C as:</p>\n<pre data-code-height=\"147\" data-code-wrap=\"mermaid\"><code class=\"lang-mermaid\">graph TD\n   P1 --&gt; C\n   P2 --&gt; C\n   P3 --&gt; C\n   P4 --&gt; C\n   P5 --&gt; C\n   Pn[P6..P30] --&gt; C[C2]\n</code></pre>\n<p>You repeat this until you hat max chunk size:</p>\n<pre data-code-height=\"147\" data-code-wrap=\"mermaid\"><code class=\"lang-mermaid\">graph TD\n   P1 --&gt; C\n   P2 --&gt; C\n   Pn[P3..P99] --&gt; C[C6]\n</code></pre>\n<p>And that all works fine: you\u2019re merging 21 clusters with C2, another 21 clusters with C3, C4 and C5 and a final 10 clusters with C6.</p>\n<p>But what if you didn\u2019t see C2, C3, C4 or C5, but had seen P11\u2026P99? C6 alone would look like it was merging 90 clusters, which would presumably be more than the allowed cluster limit. So the rbf from C1 to C6 becomes path dependent: doing it directly fails, but doing it indirectly works.</p>",
  "post_number": 14,
  "post_type": 1,
  "updated_at": "2023-12-05T17:44:23.047Z",
  "reply_count": 2,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 5,
  "readers_count": 4,
  "score": 26.0,
  "yours": false,
  "topic_id": 156,
  "topic_slug": "cluster-mempool-rbf-thoughts",
  "topic_title": "Cluster Mempool RBF Thoughts",
  "topic_html_title": "Cluster Mempool RBF Thoughts",
  "category_id": 9,
  "display_username": "Anthony Towns",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"instagibbs, post:11, topic:156\"]\nAssuming these sizes are problematic, the two levers I see are cluster size, and number of allowed clusters to touch.\n[/quote]\n\nIf you limit the number of allowed clusters to touch but dropped the ancestor count limit (leaving it implied by the chunk limit), you could get a weird scenario:\n\nSuppose you have a CPFP arrangement to pay for a bunch of txs:\n\n```mermaid height=147,auto\ngraph TD\n   P1 --> C\n   P2 --> C\n   Pn[P3..P10] --> C\n```\n\nBut then you realise there's another 20 txs you want to CPFP, so you RBF C as:\n\n```mermaid height=147,auto\ngraph TD\n   P1 --> C\n   P2 --> C\n   P3 --> C\n   P4 --> C\n   P5 --> C\n   Pn[P6..P30] --> C[C2]\n```\n\nYou repeat this until you hat max chunk size:   \n\n```mermaid height=147,auto\ngraph TD\n   P1 --> C\n   P2 --> C\n   Pn[P3..P99] --> C[C6]\n```\n\nAnd that all works fine: you're merging 21 clusters with C2, another 21 clusters with C3, C4 and C5 and a final 10 clusters with C6.\n\nBut what if you didn't see C2, C3, C4 or C5, but had seen P11..P99? C6 alone would look like it was merging 90 clusters, which would presumably be more than the allowed cluster limit. So the rbf from C1 to C6 becomes path dependent: doing it directly fails, but doing it indirectly works.",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": true,
  "admin": true,
  "staff": true,
  "user_id": 3,
  "hidden": false,
  "trust_level": 4,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false
}