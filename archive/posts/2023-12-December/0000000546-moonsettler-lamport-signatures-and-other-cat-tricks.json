{
  "id": 546,
  "name": "moonsettler",
  "username": "moonsettler",
  "avatar_template": "/user_avatar/delvingbitcoin.org/moonsettler/{size}/38_2.png",
  "created_at": "2023-12-02T23:15:49.603Z",
  "cooked": "<p>Looking for some feedback on this contract. Is there a way to make it more efficient? What limitations on script might affect it? this would be fed about 4-5KB of \u201csignature\u201d data, including 140x 20 byte hashes merkle control bytes 20 preimages and sighash bytes. Would it be possible to run this on inquisition signet? Does it even make sense to attempt quantum resistant signatures in taproot given how the P2TR output is formed? Could we soft-fork taproot to enable script-only if needed?</p>\n<pre><code class=\"lang-auto\">// witness script\n// *** 1 byte of &lt;sighash&gt;\nOP_DUP\nOP_TOALTSTACK  // &lt;byte-value&gt;\nOP_CAT\nOP_HASH160\n\n// 1 of 1 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 1 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 1 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 1 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 1 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 1 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 1 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 1 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 1 push state to alt-stack\nOP_TOALTSTACK // &lt;pubkey-build&gt;\n\n// *** 2 byte of &lt;sighash&gt;\nOP_DUP\nOP_TOALTSTACK  // &lt;byte-value&gt;\nOP_CAT\nOP_HASH160\n\n// 1 of 2 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 2 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 2 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 2 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 2 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 2 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 2 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 2 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 2 update state on alt-stack\nOP_FROMALTSTACK // &lt;byte-value&gt;\n\n// stack: ... &lt;merkle-root&gt; &lt;byte-value&gt; | alt-stack: &lt;sighash-build&gt; &lt;pubkey-build&gt;\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 3 byte of &lt;sighash&gt;\nOP_DUP\nOP_TOALTSTACK  // &lt;byte-value&gt;\nOP_CAT\nOP_HASH160\n\n// 1 of 3 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 3 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 3 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 3 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 3 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 3 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 3 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 3 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 3 update state on alt-stack\nOP_FROMALTSTACK // &lt;byte-value&gt;\n\n// stack: ... &lt;merkle-root&gt; &lt;byte-value&gt; | alt-stack: &lt;sighash-build&gt; &lt;pubkey-build&gt;\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 4 byte of &lt;sighash&gt;\nOP_DUP\nOP_TOALTSTACK  // &lt;byte-value&gt;\nOP_CAT\nOP_HASH160\n\n// 1 of 4 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 4 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 4 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 4 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 4 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 4 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 4 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 4 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 4 update state on alt-stack\nOP_FROMALTSTACK // &lt;byte-value&gt;\n\n// stack: ... &lt;merkle-root&gt; &lt;byte-value&gt; | alt-stack: &lt;sighash-build&gt; &lt;pubkey-build&gt;\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 5 byte of &lt;sighash&gt;\nOP_DUP\nOP_TOALTSTACK  // &lt;byte-value&gt;\nOP_CAT\nOP_HASH160\n\n// 1 of 5 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 5 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 5 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 5 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 5 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 5 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 5 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 5 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 5 update state on alt-stack\nOP_FROMALTSTACK // &lt;byte-value&gt;\n\n// stack: ... &lt;merkle-root&gt; &lt;byte-value&gt; | alt-stack: &lt;sighash-build&gt; &lt;pubkey-build&gt;\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 6 byte of &lt;sighash&gt;\nOP_DUP\nOP_TOALTSTACK  // &lt;byte-value&gt;\nOP_CAT\nOP_HASH160\n\n// 1 of 6 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 6 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 6 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 6 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 6 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 6 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 6 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 6 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 6 update state on alt-stack\nOP_FROMALTSTACK // &lt;byte-value&gt;\n\n// stack: ... &lt;merkle-root&gt; &lt;byte-value&gt; | alt-stack: &lt;sighash-build&gt; &lt;pubkey-build&gt;\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 7 byte of &lt;sighash&gt;\nOP_DUP\nOP_TOALTSTACK  // &lt;byte-value&gt;\nOP_CAT\nOP_HASH160\n\n// 1 of 7 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 7 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 7 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 7 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 7 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 7 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 7 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 7 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 7 update state on alt-stack\nOP_FROMALTSTACK // &lt;byte-value&gt;\n\n// stack: ... &lt;merkle-root&gt; &lt;byte-value&gt; | alt-stack: &lt;sighash-build&gt; &lt;pubkey-build&gt;\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 8 byte of &lt;sighash&gt;\nOP_DUP\nOP_TOALTSTACK  // &lt;byte-value&gt;\nOP_CAT\nOP_HASH160\n\n// 1 of 8 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 8 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 8 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 8 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 8 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 8 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 8 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 8 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 8 update state on alt-stack\nOP_FROMALTSTACK // &lt;byte-value&gt;\n\n// stack: ... &lt;merkle-root&gt; &lt;byte-value&gt; | alt-stack: &lt;sighash-build&gt; &lt;pubkey-build&gt;\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 9 byte of &lt;sighash&gt;\nOP_DUP\nOP_TOALTSTACK  // &lt;byte-value&gt;\nOP_CAT\nOP_HASH160\n\n// 1 of 9 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 9 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 9 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 9 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 9 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 9 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 9 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 9 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 9 update state on alt-stack\nOP_FROMALTSTACK // &lt;byte-value&gt;\n\n// stack: ... &lt;merkle-root&gt; &lt;byte-value&gt; | alt-stack: &lt;sighash-build&gt; &lt;pubkey-build&gt;\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 10 byte of &lt;sighash&gt;\nOP_DUP\nOP_TOALTSTACK  // &lt;byte-value&gt;\nOP_CAT\nOP_HASH160\n\n// 1 of 10 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 10 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 10 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 10 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 10 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 10 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 10 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 10 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 10 update state on alt-stack\nOP_FROMALTSTACK // &lt;byte-value&gt;\n\n// stack: ... &lt;merkle-root&gt; &lt;byte-value&gt; | alt-stack: &lt;sighash-build&gt; &lt;pubkey-build&gt;\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 11 byte of &lt;sighash&gt;\nOP_DUP\nOP_TOALTSTACK  // &lt;byte-value&gt;\nOP_CAT\nOP_HASH160\n\n// 1 of 11 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 11 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 11 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 11 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 11 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 11 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 11 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 11 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 11 update state on alt-stack\nOP_FROMALTSTACK // &lt;byte-value&gt;\n\n// stack: ... &lt;merkle-root&gt; &lt;byte-value&gt; | alt-stack: &lt;sighash-build&gt; &lt;pubkey-build&gt;\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 12 byte of &lt;sighash&gt;\nOP_DUP\nOP_TOALTSTACK  // &lt;byte-value&gt;\nOP_CAT\nOP_HASH160\n\n// 1 of 12 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 12 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 12 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 12 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 12 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 12 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 12 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 12 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 12 update state on alt-stack\nOP_FROMALTSTACK // &lt;byte-value&gt;\n\n// stack: ... &lt;merkle-root&gt; &lt;byte-value&gt; | alt-stack: &lt;sighash-build&gt; &lt;pubkey-build&gt;\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 13 byte of &lt;sighash&gt;\nOP_DUP\nOP_TOALTSTACK  // &lt;byte-value&gt;\nOP_CAT\nOP_HASH160\n\n// 1 of 13 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 13 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 13 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 13 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 13 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 13 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 13 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 13 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 13 update state on alt-stack\nOP_FROMALTSTACK // &lt;byte-value&gt;\n\n// stack: ... &lt;merkle-root&gt; &lt;byte-value&gt; | alt-stack: &lt;sighash-build&gt; &lt;pubkey-build&gt;\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 14 byte of &lt;sighash&gt;\nOP_DUP\nOP_TOALTSTACK  // &lt;byte-value&gt;\nOP_CAT\nOP_HASH160\n\n// 1 of 14 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 14 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 14 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 14 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 14 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 14 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 14 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 14 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 14 update state on alt-stack\nOP_FROMALTSTACK // &lt;byte-value&gt;\n\n// stack: ... &lt;merkle-root&gt; &lt;byte-value&gt; | alt-stack: &lt;sighash-build&gt; &lt;pubkey-build&gt;\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 15 byte of &lt;sighash&gt;\nOP_DUP\nOP_TOALTSTACK  // &lt;byte-value&gt;\nOP_CAT\nOP_HASH160\n\n// 1 of 15 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 15 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 15 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 15 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 15 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 15 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 15 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 15 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 15 update state on alt-stack\nOP_FROMALTSTACK // &lt;byte-value&gt;\n\n// stack: ... &lt;merkle-root&gt; &lt;byte-value&gt; | alt-stack: &lt;sighash-build&gt; &lt;pubkey-build&gt;\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 16 byte of &lt;sighash&gt;\nOP_DUP\nOP_TOALTSTACK  // &lt;byte-value&gt;\nOP_CAT\nOP_HASH160\n\n// 1 of 16 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 16 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 16 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 16 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 16 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 16 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 16 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 16 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 16 update state on alt-stack\nOP_FROMALTSTACK // &lt;byte-value&gt;\n\n// stack: ... &lt;merkle-root&gt; &lt;byte-value&gt; | alt-stack: &lt;sighash-build&gt; &lt;pubkey-build&gt;\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 17 byte of &lt;sighash&gt;\nOP_DUP\nOP_TOALTSTACK  // &lt;byte-value&gt;\nOP_CAT\nOP_HASH160\n\n// 1 of 17 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 17 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 17 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 17 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 17 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 17 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 17 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 17 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 17 update state on alt-stack\nOP_FROMALTSTACK // &lt;byte-value&gt;\n\n// stack: ... &lt;merkle-root&gt; &lt;byte-value&gt; | alt-stack: &lt;sighash-build&gt; &lt;pubkey-build&gt;\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 18 byte of &lt;sighash&gt;\nOP_DUP\nOP_TOALTSTACK  // &lt;byte-value&gt;\nOP_CAT\nOP_HASH160\n\n// 1 of 18 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 18 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 18 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 18 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 18 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 18 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 18 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 18 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 18 update state on alt-stack\nOP_FROMALTSTACK // &lt;byte-value&gt;\n\n// stack: ... &lt;merkle-root&gt; &lt;byte-value&gt; | alt-stack: &lt;sighash-build&gt; &lt;pubkey-build&gt;\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 19 byte of &lt;sighash&gt;\nOP_DUP\nOP_TOALTSTACK  // &lt;byte-value&gt;\nOP_CAT\nOP_HASH160\n\n// 1 of 19 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 19 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 19 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 19 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 19 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 19 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 19 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 19 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 19 update state on alt-stack\nOP_FROMALTSTACK // &lt;byte-value&gt;\n\n// stack: ... &lt;merkle-root&gt; &lt;byte-value&gt; | alt-stack: &lt;sighash-build&gt; &lt;pubkey-build&gt;\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 20 byte of &lt;sighash&gt;\nOP_DUP\nOP_TOALTSTACK  // &lt;byte-value&gt;\nOP_CAT\nOP_HASH160\n\n// 1 of 20 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 20 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 20 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 20 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 20 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 20 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 20 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 20 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 20 update state on alt-stack\nOP_FROMALTSTACK // &lt;byte-value&gt;\n\n// stack: ... &lt;merkle-root&gt; &lt;byte-value&gt; | alt-stack: &lt;sighash-build&gt; &lt;pubkey-build&gt;\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** finished building the sighash and pubkey\nOP_FROMALTSTACK // &lt;pubkey&gt;\n\n&lt;0x04396be4408229b5097d2092aa74bdf61e245828&gt;\nOP_EQUALVERIFY\n\nOP_FROMALTSTACK // &lt;sighash&gt;\n</code></pre>\n<p>UX notes: The user would have a \u201cprivate key\u201d (256 bit) which can be generated with a BIP-32 HD wallet, the private key is used as seed for hardened BIP-32 derivation of the preimages for each position and byte value. Then a merkle tree is built for each \u201csighash\u201d bytes and their roots are hash aggregated in a way that is compatible with this contract. This \u201croot hash\u201d acts as the \u201cpublic key\u201d as it commits to all of the merkle trees and is deterministically generated from the private key. Some introspection must follow this contract to check the transaction\u2019s conformity to the \u201csighash\u201d which is the left on top of the stack at the end.</p>",
  "post_number": 1,
  "post_type": 1,
  "posts_count": 21,
  "updated_at": "2023-12-03T00:47:43.909Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 129,
  "reads": 60,
  "readers_count": 59,
  "score": 702.0,
  "yours": false,
  "topic_id": 236,
  "topic_slug": "lamport-signatures-and-other-cat-tricks",
  "topic_title": "Lamport signatures and other CAT tricks",
  "topic_html_title": "Lamport signatures and other CAT tricks",
  "category_id": 7,
  "display_username": "moonsettler",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 3,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Looking for some feedback on this contract. Is there a way to make it more efficient? What limitations on script might affect it? this would be fed about 4-5KB of \"signature\" data, including 140x 20 byte hashes merkle control bytes 20 preimages and sighash bytes. Would it be possible to run this on inquisition signet? Does it even make sense to attempt quantum resistant signatures in taproot given how the P2TR output is formed? Could we soft-fork taproot to enable script-only if needed?\n\n```\n// witness script\n// *** 1 byte of <sighash>\nOP_DUP\nOP_TOALTSTACK  // <byte-value>\nOP_CAT\nOP_HASH160\n\n// 1 of 1 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 1 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 1 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 1 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 1 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 1 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 1 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 1 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 1 push state to alt-stack\nOP_TOALTSTACK // <pubkey-build>\n\n// *** 2 byte of <sighash>\nOP_DUP\nOP_TOALTSTACK  // <byte-value>\nOP_CAT\nOP_HASH160\n\n// 1 of 2 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 2 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 2 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 2 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 2 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 2 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 2 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 2 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 2 update state on alt-stack\nOP_FROMALTSTACK // <byte-value>\n\n// stack: ... <merkle-root> <byte-value> | alt-stack: <sighash-build> <pubkey-build>\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 3 byte of <sighash>\nOP_DUP\nOP_TOALTSTACK  // <byte-value>\nOP_CAT\nOP_HASH160\n\n// 1 of 3 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 3 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 3 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 3 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 3 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 3 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 3 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 3 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 3 update state on alt-stack\nOP_FROMALTSTACK // <byte-value>\n\n// stack: ... <merkle-root> <byte-value> | alt-stack: <sighash-build> <pubkey-build>\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 4 byte of <sighash>\nOP_DUP\nOP_TOALTSTACK  // <byte-value>\nOP_CAT\nOP_HASH160\n\n// 1 of 4 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 4 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 4 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 4 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 4 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 4 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 4 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 4 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 4 update state on alt-stack\nOP_FROMALTSTACK // <byte-value>\n\n// stack: ... <merkle-root> <byte-value> | alt-stack: <sighash-build> <pubkey-build>\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 5 byte of <sighash>\nOP_DUP\nOP_TOALTSTACK  // <byte-value>\nOP_CAT\nOP_HASH160\n\n// 1 of 5 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 5 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 5 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 5 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 5 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 5 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 5 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 5 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 5 update state on alt-stack\nOP_FROMALTSTACK // <byte-value>\n\n// stack: ... <merkle-root> <byte-value> | alt-stack: <sighash-build> <pubkey-build>\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 6 byte of <sighash>\nOP_DUP\nOP_TOALTSTACK  // <byte-value>\nOP_CAT\nOP_HASH160\n\n// 1 of 6 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 6 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 6 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 6 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 6 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 6 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 6 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 6 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 6 update state on alt-stack\nOP_FROMALTSTACK // <byte-value>\n\n// stack: ... <merkle-root> <byte-value> | alt-stack: <sighash-build> <pubkey-build>\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 7 byte of <sighash>\nOP_DUP\nOP_TOALTSTACK  // <byte-value>\nOP_CAT\nOP_HASH160\n\n// 1 of 7 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 7 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 7 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 7 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 7 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 7 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 7 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 7 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 7 update state on alt-stack\nOP_FROMALTSTACK // <byte-value>\n\n// stack: ... <merkle-root> <byte-value> | alt-stack: <sighash-build> <pubkey-build>\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 8 byte of <sighash>\nOP_DUP\nOP_TOALTSTACK  // <byte-value>\nOP_CAT\nOP_HASH160\n\n// 1 of 8 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 8 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 8 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 8 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 8 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 8 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 8 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 8 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 8 update state on alt-stack\nOP_FROMALTSTACK // <byte-value>\n\n// stack: ... <merkle-root> <byte-value> | alt-stack: <sighash-build> <pubkey-build>\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 9 byte of <sighash>\nOP_DUP\nOP_TOALTSTACK  // <byte-value>\nOP_CAT\nOP_HASH160\n\n// 1 of 9 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 9 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 9 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 9 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 9 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 9 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 9 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 9 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 9 update state on alt-stack\nOP_FROMALTSTACK // <byte-value>\n\n// stack: ... <merkle-root> <byte-value> | alt-stack: <sighash-build> <pubkey-build>\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 10 byte of <sighash>\nOP_DUP\nOP_TOALTSTACK  // <byte-value>\nOP_CAT\nOP_HASH160\n\n// 1 of 10 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 10 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 10 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 10 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 10 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 10 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 10 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 10 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 10 update state on alt-stack\nOP_FROMALTSTACK // <byte-value>\n\n// stack: ... <merkle-root> <byte-value> | alt-stack: <sighash-build> <pubkey-build>\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 11 byte of <sighash>\nOP_DUP\nOP_TOALTSTACK  // <byte-value>\nOP_CAT\nOP_HASH160\n\n// 1 of 11 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 11 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 11 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 11 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 11 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 11 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 11 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 11 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 11 update state on alt-stack\nOP_FROMALTSTACK // <byte-value>\n\n// stack: ... <merkle-root> <byte-value> | alt-stack: <sighash-build> <pubkey-build>\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 12 byte of <sighash>\nOP_DUP\nOP_TOALTSTACK  // <byte-value>\nOP_CAT\nOP_HASH160\n\n// 1 of 12 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 12 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 12 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 12 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 12 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 12 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 12 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 12 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 12 update state on alt-stack\nOP_FROMALTSTACK // <byte-value>\n\n// stack: ... <merkle-root> <byte-value> | alt-stack: <sighash-build> <pubkey-build>\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 13 byte of <sighash>\nOP_DUP\nOP_TOALTSTACK  // <byte-value>\nOP_CAT\nOP_HASH160\n\n// 1 of 13 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 13 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 13 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 13 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 13 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 13 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 13 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 13 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 13 update state on alt-stack\nOP_FROMALTSTACK // <byte-value>\n\n// stack: ... <merkle-root> <byte-value> | alt-stack: <sighash-build> <pubkey-build>\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 14 byte of <sighash>\nOP_DUP\nOP_TOALTSTACK  // <byte-value>\nOP_CAT\nOP_HASH160\n\n// 1 of 14 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 14 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 14 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 14 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 14 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 14 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 14 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 14 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 14 update state on alt-stack\nOP_FROMALTSTACK // <byte-value>\n\n// stack: ... <merkle-root> <byte-value> | alt-stack: <sighash-build> <pubkey-build>\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 15 byte of <sighash>\nOP_DUP\nOP_TOALTSTACK  // <byte-value>\nOP_CAT\nOP_HASH160\n\n// 1 of 15 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 15 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 15 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 15 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 15 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 15 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 15 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 15 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 15 update state on alt-stack\nOP_FROMALTSTACK // <byte-value>\n\n// stack: ... <merkle-root> <byte-value> | alt-stack: <sighash-build> <pubkey-build>\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 16 byte of <sighash>\nOP_DUP\nOP_TOALTSTACK  // <byte-value>\nOP_CAT\nOP_HASH160\n\n// 1 of 16 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 16 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 16 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 16 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 16 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 16 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 16 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 16 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 16 update state on alt-stack\nOP_FROMALTSTACK // <byte-value>\n\n// stack: ... <merkle-root> <byte-value> | alt-stack: <sighash-build> <pubkey-build>\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 17 byte of <sighash>\nOP_DUP\nOP_TOALTSTACK  // <byte-value>\nOP_CAT\nOP_HASH160\n\n// 1 of 17 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 17 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 17 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 17 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 17 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 17 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 17 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 17 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 17 update state on alt-stack\nOP_FROMALTSTACK // <byte-value>\n\n// stack: ... <merkle-root> <byte-value> | alt-stack: <sighash-build> <pubkey-build>\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 18 byte of <sighash>\nOP_DUP\nOP_TOALTSTACK  // <byte-value>\nOP_CAT\nOP_HASH160\n\n// 1 of 18 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 18 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 18 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 18 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 18 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 18 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 18 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 18 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 18 update state on alt-stack\nOP_FROMALTSTACK // <byte-value>\n\n// stack: ... <merkle-root> <byte-value> | alt-stack: <sighash-build> <pubkey-build>\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 19 byte of <sighash>\nOP_DUP\nOP_TOALTSTACK  // <byte-value>\nOP_CAT\nOP_HASH160\n\n// 1 of 19 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 19 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 19 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 19 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 19 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 19 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 19 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 19 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 19 update state on alt-stack\nOP_FROMALTSTACK // <byte-value>\n\n// stack: ... <merkle-root> <byte-value> | alt-stack: <sighash-build> <pubkey-build>\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** 20 byte of <sighash>\nOP_DUP\nOP_TOALTSTACK  // <byte-value>\nOP_CAT\nOP_HASH160\n\n// 1 of 20 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 2 of 20 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 3 of 20 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 4 of 20 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 5 of 20 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 6 of 20 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 7 of 20 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// 8 of 20 merkle verify step\nOP_IF\nOP_SWAP\nOP_ENDIF\nOP_CAT\nOP_HASH160\n\n// *** 20 update state on alt-stack\nOP_FROMALTSTACK // <byte-value>\n\n// stack: ... <merkle-root> <byte-value> | alt-stack: <sighash-build> <pubkey-build>\n\nOP_FROMALTSTACK\nOP_SWAP\nOP_FROMALTSTACK\nOP_CAT\nOP_TOALTSTACK\nOP_CAT\nOP_HASH160\nOP_TOALTSTACK\n\n// *** finished building the sighash and pubkey\nOP_FROMALTSTACK // <pubkey>\n\n<0x04396be4408229b5097d2092aa74bdf61e245828>\nOP_EQUALVERIFY\n\nOP_FROMALTSTACK // <sighash>\n```\n\nUX notes: The user would have a \"private key\" (256 bit) which can be generated with a BIP-32 HD wallet, the private key is used as seed for hardened BIP-32 derivation of the preimages for each position and byte value. Then a merkle tree is built for each \"sighash\" bytes and their roots are hash aggregated in a way that is compatible with this contract. This \"root hash\" acts as the \"public key\" as it commits to all of the merkle trees and is deterministically generated from the private key. Some introspection must follow this contract to check the transaction's conformity to the \"sighash\" which is the left on top of the stack at the end.",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 48,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Looking for some feedback on this contract. Is there a way to make it more efficient? What limitations on script might affect it? this would be fed about 4-5KB of \u201csignature\u201d data, including 140x 20 byte hashes merkle control bytes 20 preimages and sighash bytes. Would it be possible to run this on &hellip;",
  "truncated": true,
  "post_url": "/t/lamport-signatures-and-other-cat-tricks/236/1",
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null,
  "can_vote": false
}