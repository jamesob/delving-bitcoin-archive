{
  "id": 641,
  "name": "Suhas Daftuar",
  "username": "sdaftuar",
  "avatar_template": "/letter_avatar_proxy/v4/letter/s/0ea827/{size}.png",
  "created_at": "2023-12-06T14:26:25.551Z",
  "cooked": "<p>I think that if we don\u2019t re-linearize what is left of the old clusters, that we might open the door to some RBF pinning scenarios that otherwise wouldn\u2019t exist.</p>\n<p>Imagine you are doing an RBF where you are swapping out one low fee parent with another.  Old tx graph (feerates in parens, all txs same size):</p>\n<pre data-code-height=\"146\" data-code-wrap=\"mermaid\"><code class=\"lang-mermaid\">graph TD\n   P1(\"P1(1)\") --&gt; A(\"A (19)\")\n   P2(\"P2(9)\") --&gt; X(\"X(1)\")\n   P1 --&gt; X\n   P3(\"P3(1)\")\n</code></pre>\n<p>This 2-cluster tx graph would have mempool chunks with feerates [10, 9, 1, 1].</p>\n<p>And then you want to consider replacing A with B:</p>\n<pre data-code-height=\"146\" data-code-wrap=\"mermaid\"><code class=\"lang-mermaid\">graph TD\n   P1(\"P1(1)\")\n   P2(\"P2(9)\") --&gt; X(\"X(1)\")\n   P1 --&gt; X\n   P3(\"P3(1)\")--&gt; B(\"B(?)\")\n</code></pre>\n<p>Assuming B\u2019s feerate is going up, then if we didn\u2019t relinearize the cluster containing A, the mempool chunks we\u2019d get from this graph would have feerates: [(R(B)+1)/2, 5, 1]. If you were to relinearize, you\u2019d instead get [(R(B)+1)/2, 9, 1, 1].</p>\n<p>Using the feerate diagram test as our RBF metric, if we don\u2019t relinearize, then I think you could just increase the size of P2 (and leave it at the same feerate) in order to increase the feerate required for B to be accepted.  Not sure exactly what the mathematical relationship is, but this strikes me as a bad outcome?</p>\n<p>Update:</p>\n<p>I did a quick check to see how high I could get the required feerate of B based on the (a) size of P2 (holding feerate constant), and (b) the feerate of P2 (in the range of 1-9), assuming we do/do not relinearize the old cluster when processing an RBF.</p>\n<p>Changing P2\u2019s size, fixing P2 at feerate 9:</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>P2\u2019s size</th>\n<th>Min fee bump with relinearization</th>\n<th>Min fee bump without relinearization</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>4</td>\n</tr>\n<tr>\n<td>2</td>\n<td>1</td>\n<td>6</td>\n</tr>\n<tr>\n<td>3</td>\n<td>1</td>\n<td>6</td>\n</tr>\n<tr>\n<td>4</td>\n<td>1</td>\n<td>7</td>\n</tr>\n<tr>\n<td>8</td>\n<td>1</td>\n<td>8</td>\n</tr>\n<tr>\n<td>9 &amp; higher</td>\n<td>1</td>\n<td>8</td>\n</tr>\n</tbody>\n</table>\n</div><p>Changing P2\u2019s feerate, fixing P2 at size 1:</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>P2\u2019s feerate</th>\n<th>Min fee bump with relinearization</th>\n<th>Min fee bump without relinearization</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n</tr>\n<tr>\n<td>4</td>\n<td>1</td>\n<td>2</td>\n</tr>\n<tr>\n<td>6</td>\n<td>1</td>\n<td>3</td>\n</tr>\n<tr>\n<td>8</td>\n<td>1</td>\n<td>4</td>\n</tr>\n</tbody>\n</table>\n</div><p>My conclusion from this is that we ought to relinearize the old clusters, to avoid artificially increasing the fee bump needed due to unrelated transactions like P2 (and X, which is the only reason that P2 is relevant in the graph).</p>",
  "post_number": 21,
  "post_type": 1,
  "posts_count": 25,
  "updated_at": "2023-12-06T15:32:29.149Z",
  "reply_count": 0,
  "reply_to_post_number": 20,
  "quote_count": 0,
  "incoming_link_count": 1,
  "reads": 25,
  "readers_count": 24,
  "score": 85.0,
  "yours": false,
  "topic_id": 156,
  "topic_slug": "cluster-mempool-rbf-thoughts",
  "topic_title": "Cluster Mempool RBF Thoughts",
  "topic_html_title": "Cluster Mempool RBF Thoughts",
  "category_id": 8,
  "display_username": "Suhas Daftuar",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 3,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "id": 3,
    "username": "ajtowns",
    "name": "Anthony Towns",
    "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/417_2.png"
  },
  "bookmarked": false,
  "raw": "I think that if we don't re-linearize what is left of the old clusters, that we might open the door to some RBF pinning scenarios that otherwise wouldn't exist.\n\nImagine you are doing an RBF where you are swapping out one low fee parent with another.  Old tx graph (feerates in parens, all txs same size):\n\n```mermaid height=146,auto\ngraph TD\n   P1(\"P1(1)\") --> A(\"A (19)\")\n   P2(\"P2(9)\") --> X(\"X(1)\")\n   P1 --> X\n   P3(\"P3(1)\")\n```\n\nThis 2-cluster tx graph would have mempool chunks with feerates [10, 9, 1, 1].\n\nAnd then you want to consider replacing A with B:\n\n```mermaid height=146,auto\ngraph TD\n   P1(\"P1(1)\")\n   P2(\"P2(9)\") --> X(\"X(1)\")\n   P1 --> X\n   P3(\"P3(1)\")--> B(\"B(?)\")\n```\n\nAssuming B's feerate is going up, then if we didn't relinearize the cluster containing A, the mempool chunks we'd get from this graph would have feerates: [(R(B)+1)/2, 5, 1]. If you were to relinearize, you'd instead get [(R(B)+1)/2, 9, 1, 1].\n\nUsing the feerate diagram test as our RBF metric, if we don't relinearize, then I think you could just increase the size of P2 (and leave it at the same feerate) in order to increase the feerate required for B to be accepted.  Not sure exactly what the mathematical relationship is, but this strikes me as a bad outcome?\n\nUpdate:\n\nI did a quick check to see how high I could get the required feerate of B based on the (a) size of P2 (holding feerate constant), and (b) the feerate of P2 (in the range of 1-9), assuming we do/do not relinearize the old cluster when processing an RBF.\n\nChanging P2's size, fixing P2 at feerate 9:\n\n| P2's size| Min fee bump with relinearization | Min fee bump without relinearization|\n|--|--|--\n| 1| 1 | 4 |\n| 2| 1 | 6 |\n| 3| 1 | 6 |\n| 4| 1 | 7 |\n| 8| 1 | 8 |\n|9 & higher| 1 | 8|\n\n\nChanging P2's feerate, fixing P2 at size 1:\n| P2's feerate| Min fee bump with relinearization | Min fee bump without relinearization|\n|--|--|--\n| 1| 1 | 1 |\n| 4| 1 | 2 |\n| 6| 1 | 3 |\n| 8| 1 | 4 |\n\nMy conclusion from this is that we ought to relinearize the old clusters, to avoid artificially increasing the fee bump needed due to unrelated transactions like P2 (and X, which is the only reason that P2 is relevant in the graph).",
  "actions_summary": [
    {
      "id": 2,
      "count": 3
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 95,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "I think that if we don\u2019t re-linearize what is left of the old clusters, that we might open the door to some RBF pinning scenarios that otherwise wouldn\u2019t exist. \nImagine you are doing an RBF where you are swapping out one low fee parent with another.  Old tx graph (feerates in parens, all txs same s&hellip;",
  "truncated": true,
  "post_url": "/t/cluster-mempool-rbf-thoughts/156/21",
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 3
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 3,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}