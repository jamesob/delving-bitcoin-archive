{
  "id": 612,
  "name": "Matt Corallo",
  "username": "MattCorallo",
  "avatar_template": "/letter_avatar_proxy/v4/letter/m/e47c2d/{size}.png",
  "created_at": "2023-12-05T05:49:50.566Z",
  "cooked": "<p>Can we accomplish this without any per-peer storage? Probably something like \u201cthe last time I was online, running, and received gossip was block header/timestamp X\u201d. From there any peer that does receive-time tracking should be able to go back into their gossip history and check for everything newer than said time (minus a fudge factor).</p>\n<p>Of course that assumes nodes keep track of when they received all gossip messages. Currently we only track that for channel announcements, not updates. TBH I\u2019d really rather we Just Do Minisketch and move on rather than trying to keep applying bandaids to the current gossip.</p>",
  "post_number": 2,
  "post_type": 1,
  "posts_count": 5,
  "updated_at": "2023-12-05T05:49:50.566Z",
  "reply_count": 1,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 37,
  "readers_count": 36,
  "score": 42.4,
  "yours": false,
  "topic_id": 251,
  "topic_slug": "quick-peer-gossip-catchup-protocol",
  "topic_title": "Quick peer gossip catchup protocol",
  "topic_html_title": "Quick peer gossip catchup protocol",
  "category_id": 7,
  "display_username": "Matt Corallo",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Can we accomplish this without any per-peer storage? Probably something like \"the last time I was online, running, and received gossip was block header/timestamp X\". From there any peer that does receive-time tracking should be able to go back into their gossip history and check for everything newer than said time (minus a fudge factor).\n\nOf course that assumes nodes keep track of when they received all gossip messages. Currently we only track that for channel announcements, not updates. TBH I'd really rather we Just Do Minisketch and move on rather than trying to keep applying bandaids to the current gossip.",
  "actions_summary": [
    {
      "id": 2,
      "count": 2
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 50,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Can we accomplish this without any per-peer storage? Probably something like \u201cthe last time I was online, running, and received gossip was block header/timestamp X\u201d. From there any peer that does receive-time tracking should be able to go back into their gossip history and check for everything newer&hellip;",
  "truncated": true,
  "post_url": "/t/quick-peer-gossip-catchup-protocol/251/2",
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 2
    },
    {
      "id": "heart",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 3,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}