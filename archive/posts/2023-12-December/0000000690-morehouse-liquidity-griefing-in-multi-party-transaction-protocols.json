{
  "id": 690,
  "name": "Matt Morehouse",
  "username": "morehouse",
  "avatar_template": "/letter_avatar_proxy/v4/letter/m/df705f/{size}.png",
  "created_at": "2023-12-07T19:14:57.154Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"t-bast\" data-post=\"4\" data-topic=\"264\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/t-bast/48/98_2.png\" class=\"avatar\"> t-bast:</div>\n<blockquote>\n<p>Nice work! But this pinning attack does not reliably work though, so I believe it\u2019s not the end of the world. To be able to effectively lower the feerate of the funding transaction, the attacker needs to have low-feerate ancestors. But since those ancestors are low-feerate, they will be dropped from a fraction of the network\u2019s mempools, which will allow an honest transaction at the normal feerate to go through (because in those mempools, that honest transaction isn\u2019t a double-spend, the conflicting transactions have been evicted). That\u2019s what <span class=\"mention\">@TheBlueMatt</span> mentioned a few times, that in practice today, based on his experiments, even low-ish feerate transactions are still able to propagate and confirm.</p>\n</blockquote>\n</aside>\n<p>Witness inflation is done on the joint transaction itself.  Unconfirmed ancestors are not needed for this attack vector.</p>\n<p>v3 does prevent pinning, but witness inflation can still be used with a single 1000 vB descendant to inflate the RBF cost for the victim.  Doing this repeatedly can burn the victim\u2019s funds to fees, with no cost to the attacker.  Whether this can be done reliably, I\u2019m not sure \u2013 the only way to find out is to try such an attack.</p>",
  "post_number": 5,
  "post_type": 1,
  "updated_at": "2023-12-07T19:14:57.154Z",
  "reply_count": 1,
  "reply_to_post_number": 4,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 8,
  "readers_count": 7,
  "score": 21.6,
  "yours": false,
  "topic_id": 264,
  "topic_slug": "liquidity-griefing-in-multi-party-transaction-protocols",
  "topic_title": "Liquidity griefing in multi-party transaction protocols",
  "topic_html_title": "Liquidity griefing in multi-party transaction protocols",
  "category_id": 7,
  "display_username": "Matt Morehouse",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"t-bast, post:4, topic:264\"]\nNice work! But this pinning attack does not reliably work though, so I believe it\u2019s not the end of the world. To be able to effectively lower the feerate of the funding transaction, the attacker needs to have low-feerate ancestors. But since those ancestors are low-feerate, they will be dropped from a fraction of the network\u2019s mempools, which will allow an honest transaction at the normal feerate to go through (because in those mempools, that honest transaction isn\u2019t a double-spend, the conflicting transactions have been evicted). That\u2019s what @TheBlueMatt mentioned a few times, that in practice today, based on his experiments, even low-ish feerate transactions are still able to propagate and confirm.\n[/quote]\n\nWitness inflation is done on the joint transaction itself.  Unconfirmed ancestors are not needed for this attack vector.\n\nv3 does prevent pinning, but witness inflation can still be used with a single 1000 vB descendant to inflate the RBF cost for the victim.  Doing this repeatedly can burn the victim's funds to fees, with no cost to the attacker.  Whether this can be done reliably, I'm not sure -- the only way to find out is to try such an attack.",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 47,
  "hidden": false,
  "trust_level": 0,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false
}