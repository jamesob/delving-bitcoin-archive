{
  "id": 562,
  "name": "Pieter Wuille",
  "username": "sipa",
  "avatar_template": "/user_avatar/delvingbitcoin.org/sipa/{size}/102_2.png",
  "created_at": "2023-12-04T18:59:23.058Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"ajtowns\" data-post=\"43\" data-topic=\"209\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ajtowns/48/3_2.png\" class=\"avatar\"> ajtowns:</div>\n<blockquote>\n<p>[5] [3,1,8] (feerate 4) [0]</p>\n</blockquote>\n</aside>\n<p>Hmm, indeed. This example shows that bestPi isn\u2019t always as good as the original PiMerge description.</p>\n<p>Given that, I lean towards sticking with the original, as I don\u2019t think that the performance difference between the two is significant. If there was no observable difference at all, it\u2019d make sense to pick the faster one, but that doesn\u2019t seem to be the case now?</p>\n<aside class=\"quote no-group\" data-username=\"ajtowns\" data-post=\"41\" data-topic=\"209\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ajtowns/48/3_2.png\" class=\"avatar\"> ajtowns:</div>\n<blockquote>\n<p>Merging isn\u2019t necessarily commutative either, I think, in the case where both linearisations have different (eg, non-overlapping) first chunks at equal feerates.</p>\n</blockquote>\n</aside>\n<p>The linearizations that come out can differ depending on whether the transactions from <span class=\"math\">L_1</span> or <span class=\"math\">L_2</span> is chosen when the found subsets have the same feerate, <s>but I believe this cannot affect the fee-size diagram. Generally I use \u201csmaller size is better\u201d as tie-breaker when comparing equal-feerate chunks, as inside linearization algorithms this sometimes avoids accidentally merging equal-feerate subsets, but I don\u2019t believe it matters here what tie-breaker is chosen. Do you have a counter-example?</s></p>\n<p>EDIT: here is a counterexample:</p>\n<ul>\n<li>Transactions: A=1, B=2, C=3, D=2, E=1 (all same size)</li>\n<li>L1: [B,E,C,A,D], chunked as [B:2, EC:2, AD:1.5]</li>\n<li>L2: [D,B,A,C,E], chunked as [D:2, B:2, AC:2, E:1]</li>\n<li>Merge(L1,L2): [B,C,D,E,A], chunked as [BC:2.5, D:2, E:1, A:1]</li>\n<li>Merge(L2,L1): [D,B,C,A,E], chunked as [DBC:2.33, A:1, E:1]</li>\n</ul>",
  "post_number": 44,
  "post_type": 1,
  "updated_at": "2023-12-05T19:47:48.383Z",
  "reply_count": 1,
  "reply_to_post_number": 43,
  "quote_count": 2,
  "incoming_link_count": 0,
  "reads": 7,
  "readers_count": 6,
  "score": 51.4,
  "yours": false,
  "topic_id": 209,
  "topic_slug": "merging-incomparable-linearizations",
  "topic_title": "Merging incomparable linearizations",
  "topic_html_title": "Merging incomparable linearizations",
  "category_id": 9,
  "display_username": "Pieter Wuille",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 5,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"ajtowns, post:43, topic:209, full:true\"]\n[5] [3,1,8] (feerate 4) [0]\n[/quote]\n\nHmm, indeed. This example shows that bestPi isn't always as good as the original PiMerge description.\n\nGiven that, I lean towards sticking with the original, as I don't think that the performance difference between the two is significant. If there was no observable difference at all, it'd make sense to pick the faster one, but that doesn't seem to be the case now?\n\n[quote=\"ajtowns, post:41, topic:209\"]\nMerging isn\u2019t necessarily commutative either, I think, in the case where both linearisations have different (eg, non-overlapping) first chunks at equal feerates.\n[/quote]\n\nThe linearizations that come out can differ depending on whether the transactions from $L_1$ or $L_2$ is chosen when the found subsets have the same feerate, ~~but I believe this cannot affect the fee-size diagram. Generally I use \"smaller size is better\" as tie-breaker when comparing equal-feerate chunks, as inside linearization algorithms this sometimes avoids accidentally merging equal-feerate subsets, but I don't believe it matters here what tie-breaker is chosen. Do you have a counter-example?~~\n\nEDIT: here is a counterexample:\n\n* Transactions: A=1, B=2, C=3, D=2, E=1 (all same size)\n* L1: [B,E,C,A,D], chunked as [B:2, EC:2, AD:1.5]\n* L2: [D,B,A,C,E], chunked as [D:2, B:2, AC:2, E:1]\n* Merge(L1,L2): [B,C,D,E,A], chunked as [BC:2.5, D:2, E:1, A:1]\n* Merge(L2,L1): [D,B,C,A,E], chunked as [DBC:2.33, A:1, E:1]",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 96,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false
}