{
  "id": 556,
  "name": "Pieter Wuille",
  "username": "sipa",
  "avatar_template": "/user_avatar/delvingbitcoin.org/sipa/{size}/102_2.png",
  "created_at": "2023-12-03T19:44:53.641Z",
  "cooked": "<p>Prefix-intersection merging can be simplified to the following:</p>\n<ul>\n<li>Given two linearizations <span class=\"math\">L_1</span> and <span class=\"math\">L_2</span></li>\n<li>(Optionally) Output any prefix of both that\u2019s identical.</li>\n<li>Let <span class=\"math\">P_i</span> be the highest-feerate prefix of <span class=\"math\">L_i</span>, for <span class=\"math\">i \\in {1,2}</span>.</li>\n<li>Assume without loss of generality that <span class=\"math\">R(P_1) \\geq R(P_2)</span> (swap the inputs if not).</li>\n<li>Let <span class=\"math\">C</span> be the highest-feerate prefix of <span class=\"math\">L_2 \\cap P_1</span>.</li>\n<li>Output <span class=\"math\">C</span>, remove it from <span class=\"math\">L_1</span> and <span class=\"math\">L_2</span>, and start over.</li>\n</ul>\n<p>So we only need to find the best prefix of the intersection of the highest-feerate prefix with the other linearization, and not the other direction.</p>\n<p>This does not break the \u201cas good as both inputs\u201d proof, and from fuzzing it appears it that this doesn\u2019t worsen the result even (it could be that this results in worse results while still being at least as good as both inputs, but that seems not to be the case).</p>\n<p>I don\u2019t have a proof (yet) that the algorithms are equivalent, but given that it\u2019s certainly correct still, it\u2019s probably fine to just use this simpler version?</p>",
  "post_number": 38,
  "post_type": 1,
  "updated_at": "2023-12-03T20:17:32.034Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 3,
  "readers_count": 2,
  "score": 0.4,
  "yours": false,
  "topic_id": 209,
  "topic_slug": "merging-incomparable-linearizations",
  "topic_title": "Merging incomparable linearizations",
  "topic_html_title": "Merging incomparable linearizations",
  "category_id": 9,
  "display_username": "Pieter Wuille",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Prefix-intersection merging can be simplified to the following:\n\n* Given two linearizations $L_1$ and $L_2$\n* (Optionally) Output any prefix of both that's identical.\n* Let $P_i$ be the highest-feerate prefix of $L_i$, for $i \\in {1,2}$.\n* Assume without loss of generality that $R(P_1) \\geq R(P_2)$ (swap the inputs if not).\n* Let $C$ be the highest-feerate prefix of $L_2 \\cap P_1$.\n* Output $C$, remove it from $L_1$ and $L_2$, and start over.\n\nSo we only need to find the best prefix of the intersection of the highest-feerate prefix with the other linearization, and not the other direction.\n\nThis does not break the \"as good as both inputs\" proof, and from fuzzing it appears it that this doesn't worsen the result even (it could be that this results in worse results while still being at least as good as both inputs, but that seems not to be the case).\n\nI don't have a proof (yet) that the algorithms are equivalent, but given that it's certainly correct still, it's probably fine to just use this simpler version?",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 96,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}