{
  "id": 862,
  "name": "Anthony Towns",
  "username": "ajtowns",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/3_2.png",
  "created_at": "2023-12-24T11:14:22.431Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"ismaelsadeeq\" data-post=\"4\" data-topic=\"312\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ismaelsadeeq/48/151_2.png\" class=\"avatar\"> ismaelsadeeq:</div>\n<blockquote>\n<p>So we should track chunks, individual transactions are also chunks with single transactions.</p>\n</blockquote>\n</aside>\n<p>My understanding is that we model \u201chow many blocks does it take for a tx at this fee rate to be confirmed\u201d, and we count from when a tx entered the mempool until it was confirmed in a block. But if we have a CPFP where tx C pays for tx P, we might initially have a chunk [P] in the mempool at 50sat/vb, then later a chunk [P,C] in the mempool at 90sat/vb. If [P,C] then confirms, presumably we count how many blocks since we say P. But what if C gets RBF\u2019ed by some unrelated tx D, and then P eventually confirms on its own at 50sat/vb? Do we bump the count back up to however long P has been sitting in the mempool?</p>\n<p>I think maybe you could do a rule like:</p>\n<ul>\n<li>for every chunk in our mempool that had some txs included in the block</li>\n<li>if some tx in the chunk was not in the block, nevermind; ignore this for fee estimation</li>\n<li>otherwise, use the feerate of the chunk, and the time-in-mempool of the youngest tx in chunk, and add that info to the fee estimation</li>\n</ul>",
  "post_number": 6,
  "post_type": 1,
  "updated_at": "2023-12-24T11:14:22.431Z",
  "reply_count": 0,
  "reply_to_post_number": 4,
  "quote_count": 1,
  "incoming_link_count": 2,
  "reads": 6,
  "readers_count": 5,
  "score": 26.2,
  "yours": false,
  "topic_id": 312,
  "topic_slug": "package-aware-fee-estimator-post-cluster-mempool",
  "topic_title": "Package aware Fee estimator post cluster mempool",
  "topic_html_title": "Package aware Fee estimator post cluster mempool",
  "category_id": 8,
  "display_username": "Anthony Towns",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"ismaelsadeeq, post:4, topic:312\"]\nSo we should track chunks, individual transactions are also chunks with single transactions.\n[/quote]\n\nMy understanding is that we model \"how many blocks does it take for a tx at this fee rate to be confirmed\", and we count from when a tx entered the mempool until it was confirmed in a block. But if we have a CPFP where tx C pays for tx P, we might initially have a chunk [P] in the mempool at 50sat/vb, then later a chunk [P,C] in the mempool at 90sat/vb. If [P,C] then confirms, presumably we count how many blocks since we say P. But what if C gets RBF'ed by some unrelated tx D, and then P eventually confirms on its own at 50sat/vb? Do we bump the count back up to however long P has been sitting in the mempool?\n\nI think maybe you could do a rule like:\n * for every chunk in our mempool that had some txs included in the block\n * if some tx in the chunk was not in the block, nevermind; ignore this for fee estimation\n * otherwise, use the feerate of the chunk, and the time-in-mempool of the youngest tx in chunk, and add that info to the fee estimation",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": true,
  "admin": true,
  "staff": true,
  "user_id": 3,
  "hidden": false,
  "trust_level": 4,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false
}