{
  "id": 120,
  "name": "Gregory Sanders",
  "username": "instagibbs",
  "avatar_template": "/user_avatar/delvingbitcoin.org/instagibbs/{size}/28_2.png",
  "created_at": "2023-08-22T20:05:06.343Z",
  "cooked": "<p>BIP345 is in roughly <a href=\"https://github.com/bitcoin/bips/pull/1421\">final form</a>, but why not dream a little more?</p>\n<p>Here\u2019s a small set of modifications I had proposed that would make the proposal slightly more flexible and interesting, at the cost of a few WU. James disagrees it\u2019s necessary, but others might find it interesting to think about. A slight cleanup of <a href=\"https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-March/021528.html\">OP_FORWARD_PARTIAL</a> in my humble opinion.</p>\n<p>Instead of <code>OP_VAULT</code> taking <code>&lt;revault-amount&gt;</code>, have it take <code>&lt;unvault-amount&gt;</code>. Drop <code>&lt;revault-vout-idx&gt;</code>. Instead of pushing <code>0x01</code> on the stack, have it push the minimally-encoded \u201cresidual\u201d value of the input left over from <code>&lt;unvault-amount&gt;</code> onto the stack. This residual will be fed directly into the next opcode\u2026</p>\n<p>OP_VAULT args are then just:</p>\n<pre><code class=\"lang-auto\">&lt;leaf-update-script-body&gt;\n&lt;n-pushes&gt;\n[ n leaf-update script data items ... ]\n&lt;trigger-vout-idx&gt;\n</code></pre>\n<p>Then create <code>OP_REVAULT</code> which takes:</p>\n<pre><code class=\"lang-auto\">&lt;revault-amount&gt;\n&lt;revault-vout-idx&gt;\n</code></pre>\n<p>and returns <code>0x01</code> on success.</p>\n<p>Typical usage looks like:</p>\n<pre><code class=\"lang-auto\">&lt;revault-vout-idx&gt; &lt;trigger-vout-idx&gt; &lt;trigger-amt&gt;\n[ n leaf-update script data items ... ] &lt;n-pushes&gt;\n&lt;leaf-update-script-body&gt; OP_VAULT OP_REVAULT\n</code></pre>\n<p>But now that these are split, we can do things like add partial collateral(by committing to additional VAULT opcodes):</p>\n<pre><code class=\"lang-auto\">&lt;leaf-update-script-body&gt; OP_VAULT OP_REVAULT\n&lt;duplicated args to make sure it's same trigger output spk....&gt;\n&lt;collat-amt&gt; OP_VAULT\n</code></pre>\n<p>by having multiple <code>OP_VAULT</code> opcodes with the explicit amounts.</p>\n<p>Or per-utxo-rate-limited unvaults(by committing to the unvaulting amount):</p>\n<pre><code class=\"lang-auto\">&lt;deposit-delay&gt; OP_CSV\nOP_DROP OP_DUP &lt;max-val&gt; OP_LEQ OP_VERIFY\n&lt;leaf-update-script-body&gt; OP_VAULT OP_REVAULT\n</code></pre>\n<p>with some additional math to break up \u201cdenominations\u201d in the actual use-case.</p>",
  "post_number": 1,
  "post_type": 1,
  "posts_count": 5,
  "updated_at": "2023-08-22T20:42:30.666Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 57,
  "reads": 25,
  "readers_count": 24,
  "score": 305.0,
  "yours": false,
  "topic_id": 55,
  "topic_slug": "op-vault-fanfiction-for-rate-limited-and-collateralized-unvaulting",
  "topic_title": "OP_VAULT fanfiction for rate-limited and collateralized unvaulting",
  "topic_html_title": "OP_VAULT fanfiction for rate-limited and collateralized unvaulting",
  "category_id": 7,
  "display_username": "Gregory Sanders",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 3,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "BIP345 is in roughly [final form](https://github.com/bitcoin/bips/pull/1421), but why not dream a little more?\n\nHere's a small set of modifications I had proposed that would make the proposal slightly more flexible and interesting, at the cost of a few WU. James disagrees it's necessary, but others might find it interesting to think about. A slight cleanup of [OP_FORWARD_PARTIAL](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-March/021528.html) in my humble opinion.\n\nInstead of `OP_VAULT` taking `<revault-amount>`, have it take `<unvault-amount>`. Drop `<revault-vout-idx>`. Instead of pushing `0x01` on the stack, have it push the minimally-encoded \"residual\" value of the input left over from `<unvault-amount>` onto the stack. This residual will be fed directly into the next opcode...\n\nOP_VAULT args are then just:\n```\n<leaf-update-script-body>\n<n-pushes>\n[ n leaf-update script data items ... ]\n<trigger-vout-idx>\n```\n \nThen create `OP_REVAULT` which takes:\n```\n<revault-amount>\n<revault-vout-idx>\n```\nand returns `0x01` on success.\n\nTypical usage looks like:\n```\n<revault-vout-idx> <trigger-vout-idx> <trigger-amt>\n[ n leaf-update script data items ... ] <n-pushes>\n<leaf-update-script-body> OP_VAULT OP_REVAULT\n```\n\nBut now that these are split, we can do things like add partial collateral(by committing to additional VAULT opcodes):\n```\n<leaf-update-script-body> OP_VAULT OP_REVAULT\n<duplicated args to make sure it's same trigger output spk....>\n<collat-amt> OP_VAULT\n```\nby having multiple `OP_VAULT` opcodes with the explicit amounts.\n\nOr per-utxo-rate-limited unvaults(by committing to the unvaulting amount):\n```\n<deposit-delay> OP_CSV\nOP_DROP OP_DUP <max-val> OP_LEQ OP_VERIFY\n<leaf-update-script-body> OP_VAULT OP_REVAULT\n```\nwith some additional math to break up \"denominations\" in the actual use-case.",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 31,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "BIP345 is in roughly <a href=\"https://github.com/bitcoin/bips/pull/1421\">final form</a>, but why not dream a little more? \nHere\u2019s a small set of modifications I had proposed that would make the proposal slightly more flexible and interesting, at the cost of a few WU. James disagrees it\u2019s necessary, but others might find it interesting to think about. A s&hellip;",
  "truncated": true,
  "post_url": "/t/op-vault-fanfiction-for-rate-limited-and-collateralized-unvaulting/55/1",
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null,
  "can_vote": false
}