{
  "id": 271,
  "name": "Steven Roose",
  "username": "stevenroose",
  "avatar_template": "/letter_avatar_proxy/v4/letter/s/8edcca/{size}.png",
  "created_at": "2023-10-02T23:57:02.006Z",
  "cooked": "<p>But with TXHASH and CSFS, both options are possible, while with a sighashtype only the at-sign-time option\u2026 To emulate a sighashtype, the user would pass a TxFieldSelector (or whatever you call the input to TXHASH) and a signature and then the script would generate the hash value using the user\u2019s input and then validate the signature.</p>\n<p>One could actually argue that this is a more pure implementation of OP_CHECKSIG in Bitcoin Script\u2026</p>",
  "post_number": 7,
  "post_type": 1,
  "updated_at": "2023-10-02T23:57:02.006Z",
  "reply_count": 1,
  "reply_to_post_number": 6,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 6,
  "readers_count": 5,
  "score": 6.2,
  "yours": false,
  "topic_id": 125,
  "topic_slug": "catt-thoughts-about-an-alternative-covenant-softfork-proposal",
  "topic_title": "CATT: thoughts about an alternative covenant softfork proposal",
  "topic_html_title": "CATT: thoughts about an alternative covenant softfork proposal",
  "category_id": 7,
  "display_username": "Steven Roose",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "username": "reardencode",
    "name": "Brandon Black",
    "avatar_template": "/user_avatar/delvingbitcoin.org/reardencode/{size}/27_2.png"
  },
  "bookmarked": false,
  "raw": "But with TXHASH and CSFS, both options are possible, while with a sighashtype only the at-sign-time option.. To emulate a sighashtype, the user would pass a TxFieldSelector (or whatever you call the input to TXHASH) and a signature and then the script would generate the hash value using the user's input and then validate the signature.\n\nOne could actually argue that this is a more pure implementation of OP_CHECKSIG in Bitcoin Script..",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 76,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}