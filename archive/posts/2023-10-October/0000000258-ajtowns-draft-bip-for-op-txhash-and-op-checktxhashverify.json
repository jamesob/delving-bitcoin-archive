{
  "id": 258,
  "name": "Anthony Towns",
  "username": "ajtowns",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/3_2.png",
  "created_at": "2023-10-02T10:55:27.317Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"stevenroose\" data-post=\"3\" data-topic=\"121\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/s/8edcca/48.png\" class=\"avatar\"> stevenroose:</div>\n<blockquote>\n<p>Are there any other fields that can realistically be set at arbitrary size within policy limits?</p>\n</blockquote>\n</aside>\n<p>Policy limits don\u2019t help here: quadratic hashing in a block is still a problem. In a block, the output scriptPubKey can also be arbitrarily large.</p>\n<p>If you\u2019re not prehashing outputs, I think the caching doesn\u2019t work well if input ranges can overlap: a hash of inputs (1-3) and a hash of inputs (2-4) can\u2019t share a prefix-cache for any of their inputs. That\u2019s why <a href=\"https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019243.html\">SIGHASH_GROUP</a> avoided allowing overlapping ranges. That\u2019s much worse if you allow selecting arbitrary sets of inputs via a bitfield, rather than just a range; but even ranges give you <span class=\"math\">n(n+1)/2</span> possible prefixes across the <span class=\"math\">n</span> inputs?</p>",
  "post_number": 4,
  "post_type": 1,
  "updated_at": "2023-10-02T10:55:27.317Z",
  "reply_count": 0,
  "reply_to_post_number": 3,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 1,
  "readers_count": 0,
  "score": 0,
  "yours": false,
  "topic_id": 121,
  "topic_slug": "draft-bip-for-op-txhash-and-op-checktxhashverify",
  "topic_title": "Draft BIP for OP_TXHASH and OP_CHECKTXHASHVERIFY",
  "topic_html_title": "Draft BIP for OP_TXHASH and OP_CHECKTXHASHVERIFY",
  "category_id": 7,
  "display_username": "Anthony Towns",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"stevenroose, post:3, topic:121\"]\nAre there any other fields that can realistically be set at arbitrary size within policy limits?\n[/quote]\n\nPolicy limits don't help here: quadratic hashing in a block is still a problem. In a block, the output scriptPubKey can also be arbitrarily large.\n\nIf you're not prehashing outputs, I think the caching doesn't work well if input ranges can overlap: a hash of inputs (1-3) and a hash of inputs (2-4) can't share a prefix-cache for any of their inputs. That's why [SIGHASH_GROUP](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019243.html) avoided allowing overlapping ranges. That's much worse if you allow selecting arbitrary sets of inputs via a bitfield, rather than just a range; but even ranges give you $n(n+1)/2$ possible prefixes across the $n$ inputs?",
  "actions_summary": [],
  "moderator": true,
  "admin": true,
  "staff": true,
  "user_id": 3,
  "hidden": false,
  "trust_level": 4,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}