{
  "id": 312,
  "name": "Anthony Towns",
  "username": "ajtowns",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/3_2.png",
  "created_at": "2023-10-14T04:12:59.568Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"dgpv\" data-post=\"3\" data-topic=\"137\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/dgpv/48/75_2.png\" class=\"avatar\"> dgpv:</div>\n<blockquote>\n<p>Can you give some examples of the <em>practical</em> scripts with non-static arg for <code>PICK</code> or <code>ROLL</code> ?</p>\n</blockquote>\n</aside>\n<p>I was looking at <a href=\"https://github.com/bitcoin/bips/pull/1421\"><code>OP_VAULT</code></a> which pops <code>n+5</code> elements off the stack, one of which is <code>n</code>. (In particular: I wanted to DUP one of the items deepest in the stack, and do so automatically by DUP\u2019ing <code>n</code> first)</p>\n<p>Without an opcode like that, <code>n</code> is effectively static, since you need to consume all but one element from the stack, and each opcode consumes a constant number of elements. Perhaps <code>CHECKMULTISIG</code> could do it, but that\u2019s not available in tapscript, of course.</p>\n<p>Being able to specify <code>$n in [1,2,3,4,5]</code> as a constraint in the file (ie pretending there was <code>DUP 3 NUMEQUALVERIFY</code> just prior to the <code>ROLL</code> or <code>PICK</code> for each value in the range) and just rerunning the analysis multiple times would work fine (and put the burden of the combinatorial explosion onto the user). I ended up just reframing my question to avoid the problem though, and that worked fine too.</p>",
  "post_number": 4,
  "post_type": 1,
  "updated_at": "2023-10-14T04:13:53.949Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 2,
  "readers_count": 1,
  "score": 0.2,
  "yours": false,
  "topic_id": 137,
  "topic_slug": "bsst-plugins-for-covenant-opcodes",
  "topic_title": "B'SST plugins for covenant opcodes",
  "topic_html_title": "B&rsquo;SST plugins for covenant opcodes",
  "category_id": 7,
  "display_username": "Anthony Towns",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"dgpv, post:3, topic:137\"]\nCan you give some examples of the *practical* scripts with non-static arg for `PICK` or `ROLL` ?\n[/quote]\n\nI was looking at [`OP_VAULT`](https://github.com/bitcoin/bips/pull/1421) which pops `n+5` elements off the stack, one of which is `n`. (In particular: I wanted to DUP one of the items deepest in the stack, and do so automatically by DUP'ing `n` first)\n\nWithout an opcode like that, `n` is effectively static, since you need to consume all but one element from the stack, and each opcode consumes a constant number of elements. Perhaps `CHECKMULTISIG` could do it, but that's not available in tapscript, of course.\n\nBeing able to specify `$n in [1,2,3,4,5]` as a constraint in the file (ie pretending there was `DUP 3 NUMEQUALVERIFY` just prior to the `ROLL` or `PICK` for each value in the range) and just rerunning the analysis multiple times would work fine (and put the burden of the combinatorial explosion onto the user). I ended up just reframing my question to avoid the problem though, and that worked fine too.",
  "actions_summary": [],
  "moderator": true,
  "admin": true,
  "staff": true,
  "user_id": 3,
  "hidden": false,
  "trust_level": 4,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}