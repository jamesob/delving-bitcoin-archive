{
  "id": 5719,
  "name": "nifty",
  "username": "niftynei",
  "avatar_template": "/letter_avatar_proxy/v4/letter/n/c77e96/{size}.png",
  "created_at": "2025-08-15T16:12:24.488Z",
  "cooked": "<p>I\u2019m not sure I follow.</p>\n<p>The universal sighash mode seems to allow for rangeproof style signature commitments or key delegation. In the original code sample you simply create a \u2018custom\u2019 sighash based on selective commitment to the transaction contents. It seems like you could also require a commitment to arbitrary data (however the data would have to be committed to in the script at creation time)</p>\n<p>Out of curiosity, what would be required for adding the universal sighash to simplicity?</p>",
  "post_number": 4,
  "post_type": 1,
  "posts_count": 4,
  "updated_at": "2025-08-15T16:12:24.488Z",
  "reply_count": 0,
  "reply_to_post_number": 3,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 8,
  "readers_count": 7,
  "score": 1.6,
  "yours": false,
  "topic_id": 1900,
  "topic_slug": "writing-simplicity-programs-with-simplicityhl",
  "topic_title": "Writing Simplicity Programs with SimplicityHL",
  "topic_html_title": "Writing Simplicity Programs with SimplicityHL",
  "category_id": 7,
  "display_username": "nifty",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "id": 14,
    "username": "sanket1729",
    "name": "Sanket Kanjalkar",
    "avatar_template": "/user_avatar/delvingbitcoin.org/sanket1729/{size}/13_2.png"
  },
  "bookmarked": false,
  "raw": "I\u2019m not sure I follow. \n\nThe universal sighash mode seems to allow for rangeproof style signature commitments or key delegation. In the original code sample you simply create a \u2018custom\u2019 sighash based on selective commitment to the transaction contents. It seems like you could also require a commitment to arbitrary data (however the data would have to be committed to in the script at creation time)\n\nOut of curiosity, what would be required for adding the universal sighash to simplicity?",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 541,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "I\u2019m not sure I follow. \nThe universal sighash mode seems to allow for rangeproof style signature commitments or key delegation. In the original code sample you simply create a \u2018custom\u2019 sighash based on selective commitment to the transaction contents. It seems like you could also require a commitmen&hellip;",
  "truncated": true,
  "post_url": "/t/writing-simplicity-programs-with-simplicityhl/1900/4",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}