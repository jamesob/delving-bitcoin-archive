{
  "id": 4507,
  "name": "Jeremy Rubin",
  "username": "JeremyRubin",
  "avatar_template": "/user_avatar/delvingbitcoin.org/jeremyrubin/{size}/264_2.png",
  "created_at": "2025-03-13T02:37:26.459Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"josh\" data-post=\"6\" data-topic=\"1517\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/josh/48/95_2.png\" class=\"avatar\"> josh:</div>\n<blockquote>\n<p>sequences, ScriptSigs, input index, and the input count.</p>\n</blockquote>\n</aside>\n<p>Just the sequences, ScriptSigs, input index, and the input count are committed to. So if you have an \u201coffer\u201d branch where funds need to be added, it can bind to a payment to a particular user.</p>\n<p>But if the other input is a p2sh or legacy, the commitment to scriptsig containing a signature will commit to the specific inputs.</p>\n<p>So if you gather the signature, e.g., using ANYONECANPAY, then you can get it to work because you avoid the hash cycle and commit to your input and can form a CTV, the CTV would be able to commit to the other inputs.</p>\n<p>This is a bit better than using a signature for presigning, since there\u2019s no other way to spend once it\u2019s in CTV.</p>",
  "post_number": 7,
  "post_type": 1,
  "updated_at": "2025-03-13T02:37:26.459Z",
  "reply_count": 1,
  "reply_to_post_number": 6,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 6,
  "readers_count": 5,
  "score": 6.2,
  "yours": false,
  "topic_id": 1517,
  "topic_slug": "question-about-op-ctv-and-non-recursive-covenants",
  "topic_title": "Question about OP_CTV and Non-Recursive Covenants",
  "topic_html_title": "Question about OP_CTV and Non-Recursive Covenants",
  "category_id": 7,
  "display_username": "Jeremy Rubin",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"josh, post:6, topic:1517\"]\nsequences, ScriptSigs, input index, and the input count.\n[/quote]\n\nJust the sequences, ScriptSigs, input index, and the input count are committed to. So if you have an \"offer\" branch where funds need to be added, it can bind to a payment to a particular user.\n\nBut if the other input is a p2sh or legacy, the commitment to scriptsig containing a signature will commit to the specific inputs.\n\nSo if you gather the signature, e.g., using ANYONECANPAY, then you can get it to work because you avoid the hash cycle and commit to your input and can form a CTV, the CTV would be able to commit to the other inputs.\n\nThis is a bit better than using a signature for presigning, since there's no other way to spend once it's in CTV.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 224,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}