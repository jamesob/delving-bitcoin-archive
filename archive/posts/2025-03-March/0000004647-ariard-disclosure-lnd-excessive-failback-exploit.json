{
  "id": 4647,
  "name": "Antoine Riard",
  "username": "ariard",
  "avatar_template": "/letter_avatar_proxy/v4/letter/a/c67d28/{size}.png",
  "created_at": "2025-03-30T20:35:16.971Z",
  "cooked": "<blockquote>\n<p>This is hard to follow because it looks like you\u2019re confusing <code>downstream</code> and <code>upstream</code> in several of your paragraphs\u2026I think I got the gist of it though, but I don\u2019t see how it applies to the change you\u2019re referring to.</p>\n</blockquote>\n<p>We do no use downstream or upstream as terminology in BOLT5, so lightning channels are always both directionals at all time, unless you unset the chan for forwarding (e.g with <code>announce_for_forwarding=false</code> in rust-lightning).</p>\n<p>For the matter of present analysis, the fact that you can have <code>offerered</code> and <code>received</code> HTLCs pending is an element to consider (e.g a node can inflate the feerate cost of a commitment tx). However, in the present example, yes all the HTLCs are supposed to flow from Mallory to Mallet, so I\u2019m correcting that in the initial post.</p>\n<aside class=\"quote no-group\" data-username=\"t-bast\" data-post=\"7\" data-topic=\"1493\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/t-bast/48/98_2.png\" class=\"avatar\"> t-bast:</div>\n<blockquote>\n<p>The BOLTs change only says that the preimage must be relayed upstream as soon as it\u2019s obtained downstream. At that point we only specify that nodes should correctly extract preimages from downstream and send <code>update_fulfill_htlc</code> upstream. This doesn\u2019t change the requirements of whether the node should force-close upstream (if its <code>update_fulfill_htlc</code> is not acked) or not.</p>\n</blockquote>\n</aside>\n<p>Note as I was pointing out to Morehouse above before the fixes, the problem is antecedent to the BOLTs\u2019s change. The fixes by indicating that the \u201c<em>MUST fulfill the corresponding incoming HTLC</em>\u201d as soon as the preimage is known, without waiting for a final <code>revoke_and_ack</code> of the peer or a local or remote commitment transaction that has reached reasonable depth in the chain.</p>",
  "post_number": 8,
  "post_type": 1,
  "posts_count": 8,
  "updated_at": "2025-03-30T20:35:16.971Z",
  "reply_count": 0,
  "reply_to_post_number": 7,
  "quote_count": 1,
  "incoming_link_count": 1,
  "reads": 26,
  "readers_count": 25,
  "score": 10.2,
  "yours": false,
  "topic_id": 1493,
  "topic_slug": "disclosure-lnd-excessive-failback-exploit",
  "topic_title": "Disclosure: LND Excessive Failback Exploit",
  "topic_html_title": "Disclosure: LND Excessive Failback Exploit",
  "category_id": 8,
  "display_username": "Antoine Riard",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "> This is hard to follow because it looks like you\u2019re confusing `downstream` and `upstream` in several of your paragraphs\u2026I think I got the gist of it though, but I don\u2019t see how it applies to the change you\u2019re referring to.\n\nWe do no use downstream or upstream as terminology in BOLT5, so lightning channels are always both directionals at all time, unless you unset the chan for forwarding (e.g with `announce_for_forwarding=false` in rust-lightning).\n\nFor the matter of present analysis, the fact that you can have `offerered` and `received` HTLCs pending is an element to consider (e.g a node can inflate the feerate cost of a commitment tx). However, in the present example, yes all the HTLCs are supposed to flow from Mallory to Mallet, so I\u2019m correcting that in the initial post.\n\n[quote=\"t-bast, post:7, topic:1493\"]\nThe BOLTs change only says that the preimage must be relayed upstream as soon as it\u2019s obtained downstream. At that point we only specify that nodes should correctly extract preimages from downstream and send `update_fulfill_htlc` upstream. This doesn\u2019t change the requirements of whether the node should force-close upstream (if its `update_fulfill_htlc` is not acked) or not.\n[/quote]\n\nNote as I was pointing out to Morehouse above before the fixes, the problem is antecedent to the BOLTs\u2019s change. The fixes by indicating that the \u201c*MUST fulfill the corresponding incoming HTLC*\u201d as soon as the preimage is known, without waiting for a final `revoke_and_ack` of the peer or a local or remote commitment transaction that has reached reasonable depth in the chain.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 5,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "This is hard to follow because it looks like you\u2019re confusing downstream and upstream in several of your paragraphs\u2026I think I got the gist of it though, but I don\u2019t see how it applies to the change you\u2019re referring to. \n\nWe do no use downstream or upstream as terminology in BOLT5, so lightning chan&hellip;",
  "truncated": true,
  "post_url": "/t/disclosure-lnd-excessive-failback-exploit/1493/8",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}