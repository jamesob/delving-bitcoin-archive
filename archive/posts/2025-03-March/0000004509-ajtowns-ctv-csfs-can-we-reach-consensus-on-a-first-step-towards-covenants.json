{
  "id": 4509,
  "name": "Anthony Towns",
  "username": "ajtowns",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/417_2.png",
  "created_at": "2025-03-13T05:18:58.979Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"ariard\" data-post=\"27\" data-topic=\"1509\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/a/c67d28/48.png\" class=\"avatar\"> ariard:</div>\n<blockquote>\n<p>To be fair here the usage of the word covenant in Bitcoin is not Jeremy\u2019s initiative. I think it comes with Gmax \"<a href=\"https://bitcointalk.org/index.php?topic=278122.0\">CoinCovenants using SCIP signatures, an amuingly bad idea</a>\u201d</p>\n</blockquote>\n</aside>\n<p>Greg used the term precisely and correctly \u2013 his post describes taking a general <a href=\"https://bitcointalk.org/index.php?topic=277389.0\">zero-knowledge proof</a> feature and using that to produce actual covenant constructions where a coin and all possible spends of that coin are permanently constrained in a particular way, creating a burn address that allows the burnt coins to be burnt again and again:</p>\n<blockquote>\n<p>A particular sort of rule could take the form of requiring any output scriptpubkey to be of the form <code>THIS_VALIDATION_KEY &amp;&amp; {whatever rules you want}</code> and by doing so you have effectively created a coin which is forever subject to a <a href=\"http://en.wikipedia.org/wiki/Covenant_%28law%29\">covenant</a> which will run with the coin and forever constrain the use of it and its descendants degrading and its fungibility.</p>\n</blockquote>",
  "post_number": 29,
  "post_type": 1,
  "updated_at": "2025-03-13T05:18:58.979Z",
  "reply_count": 0,
  "reply_to_post_number": 27,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 1,
  "readers_count": 0,
  "score": 0.2,
  "yours": false,
  "topic_id": 1509,
  "topic_slug": "ctv-csfs-can-we-reach-consensus-on-a-first-step-towards-covenants",
  "topic_title": "CTV+CSFS: Can we reach consensus on a first step towards covenants?",
  "topic_html_title": "CTV+CSFS: Can we reach consensus on a first step towards covenants?",
  "category_id": 7,
  "display_username": "Anthony Towns",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"ariard, post:27, topic:1509\"]\nTo be fair here the usage of the word covenant in Bitcoin is not Jeremy\u2019s initiative. I think it comes with Gmax \"[CoinCovenants using SCIP signatures, an amuingly bad idea](https://bitcointalk.org/index.php?topic=278122.0)\u201d\n[/quote]\n\nGreg used the term precisely and correctly -- his post describes taking a general [zero-knowledge proof](https://bitcointalk.org/index.php?topic=277389.0) feature and using that to produce actual covenant constructions where a coin and all possible spends of that coin are permanently constrained in a particular way, creating a burn address that allows the burnt coins to be burnt again and again:\n\n> A particular sort of rule could take the form of requiring any output scriptpubkey to be of the form `THIS_VALIDATION_KEY && {whatever rules you want}` and by doing so you have effectively created a coin which is forever subject to a [covenant](http://en.wikipedia.org/wiki/Covenant_%28law%29) which will run with the coin and forever constrain the use of it and its descendants degrading and its fungibility.",
  "actions_summary": [],
  "moderator": true,
  "admin": true,
  "staff": true,
  "user_id": 3,
  "hidden": false,
  "trust_level": 4,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}