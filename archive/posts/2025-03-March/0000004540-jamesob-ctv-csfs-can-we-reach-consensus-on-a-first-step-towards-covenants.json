{
  "id": 4540,
  "name": "James O'Beirne",
  "username": "jamesob",
  "avatar_template": "/user_avatar/delvingbitcoin.org/jamesob/{size}/271_2.png",
  "created_at": "2025-03-14T22:15:58.391Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"instagibbs\" data-post=\"43\" data-topic=\"1509\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/instagibbs/48/28_2.png\" class=\"avatar\"> instagibbs:</div>\n<blockquote>\n<p>IIUC, the NOP/verify pattern is primarily being justified due to bare usage.</p>\n</blockquote>\n</aside>\n<p>VERIFY is also important for upgradeability; if you don\u2019t have the &lt;32-byte-hash&gt; parameter, you can\u2019t make the opcode upgradeable.</p>\n<p>Now maybe in a tapscript context that\u2019s okay because you\u2019ve got so much unused opcode space.</p>\n<aside class=\"quote no-group\" data-username=\"instagibbs\" data-post=\"43\" data-topic=\"1509\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/instagibbs/48/28_2.png\" class=\"avatar\"> instagibbs:</div>\n<blockquote>\n<p>I\u2019d like to know why this is not a good idea.</p>\n</blockquote>\n</aside>\n<p>I\u2019m not averse to it, I\u2019m just trying to figure out why you want it, since all the uses of CTV I\u2019m familiar with are VERIFYs - I gather it\u2019s to make ln-symm more efficient or something? I\u2019m not trying to be glib here, I just think the motivation for what you suggested wasn\u2019t explicitly mentioned.</p>\n<p>I\u2019m totally fine with having adding a tapscript-only <code>OP_CHECKTEMPLATEHASH</code> that pushes the hash to the stack if it helps someone, that\u2019s not a lot of marginal complexity. But I think the idea that it would replace CTV as-is is sort of a different proposal.</p>\n<aside class=\"quote no-group\" data-username=\"instagibbs\" data-post=\"43\" data-topic=\"1509\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/instagibbs/48/28_2.png\" class=\"avatar\"> instagibbs:</div>\n<blockquote>\n<p>If reviewers (me) don\u2019t have to think about legacy script, it\u2019s a win.</p>\n</blockquote>\n</aside>\n<p>Again, not trying to be glib here but is there a more specific reason than \u201ceach reviewer has to review about 15 marginal lines of not-substantially-novel code?\u201d What about legacy is so complicated that it really moves the needle?</p>\n<p>I understand the argument that we only have so much NOP-space left, but given the bare CTV case is \u201cmost compact way possible to commit to <code>n</code> future spends,\u201d I think it probably justifies the allocation.</p>\n<p>Please grant me the goodwill to admit it\u2019s a reasonable thought that if chainspace ever does become massively short, congestion control is a good escape hatch to have on hand - even outside of the use for miners today.</p>",
  "post_number": 48,
  "post_type": 1,
  "updated_at": "2025-03-14T22:18:13.422Z",
  "reply_count": 0,
  "reply_to_post_number": 43,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 6,
  "readers_count": 5,
  "score": 1.0,
  "yours": false,
  "topic_id": 1509,
  "topic_slug": "ctv-csfs-can-we-reach-consensus-on-a-first-step-towards-covenants",
  "topic_title": "CTV+CSFS: Can we reach consensus on a first step towards covenants?",
  "topic_html_title": "CTV+CSFS: Can we reach consensus on a first step towards covenants?",
  "category_id": 7,
  "display_username": "James O'Beirne",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"instagibbs, post:43, topic:1509\"]\nIIUC, the NOP/verify pattern is primarily being justified due to bare usage.\n[/quote]\n\nVERIFY is also important for upgradeability; if you don't have the <32-byte-hash> parameter, you can't make the opcode upgradeable.\n\nNow maybe in a tapscript context that's okay because you've got so much unused opcode space.\n\n[quote=\"instagibbs, post:43, topic:1509\"]\nI\u2019d like to know why this is not a good idea.\n[/quote]\nI'm not averse to it, I'm just trying to figure out why you want it, since all the uses of CTV I'm familiar with are VERIFYs - I gather it's to make ln-symm more efficient or something? I'm not trying to be glib here, I just think the motivation for what you suggested wasn't explicitly mentioned.\n\nI'm totally fine with having adding a tapscript-only `OP_CHECKTEMPLATEHASH` that pushes the hash to the stack if it helps someone, that's not a lot of marginal complexity. But I think the idea that it would replace CTV as-is is sort of a different proposal.\n\n[quote=\"instagibbs, post:43, topic:1509\"]\nIf reviewers (me) don\u2019t have to think about legacy script, it\u2019s a win.\n[/quote]\nAgain, not trying to be glib here but is there a more specific reason than \"each reviewer has to review about 15 marginal lines of not-substantially-novel code?\" What about legacy is so complicated that it really moves the needle?\n\nI understand the argument that we only have so much NOP-space left, but given the bare CTV case is \"most compact way possible to commit to `n` future spends,\" I think it probably justifies the allocation.\n\nPlease grant me the goodwill to admit it's a reasonable thought that if chainspace ever does become massively short, congestion control is a good escape hatch to have on hand - even outside of the use for miners today.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 9,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}