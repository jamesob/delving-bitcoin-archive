{
  "id": 4514,
  "name": "Matt Morehouse",
  "username": "morehouse",
  "avatar_template": "/letter_avatar_proxy/v4/letter/m/df705f/{size}.png",
  "created_at": "2025-03-13T15:31:06.716Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"ismaelsadeeq\" data-post=\"3\" data-topic=\"1512\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ismaelsadeeq/48/151_2.png\" class=\"avatar\"> ismaelsadeeq:</div>\n<blockquote>\n<p>Calling <code>estimateSmartFee</code> with <code>n</code>, and expecting it to confirm ASAP is not not ideal, and would likely not confirm ASAP. Instead, they should call <code>estimateSmartFee</code> with a <code>conf_target</code> of <code>1</code>. If the transaction does not confirm within the next 1\u20132 blocks, they can then call the fee function to determine the fee rate they are willing to pay at that target based on the available budget (curve).</p>\n</blockquote>\n</aside>\n<p>Generally LN nodes want the transaction to confirm within <code>n</code> blocks but they don\u2019t want to pay more fees than necessary.  Confirming ASAP is generally not needed, unless deadlines are getting close.</p>\n<p>But I think you make a good point that there is probably a mismatch here between the fee estimator\u2019s intended use and what LN nodes do.  If the estimator says a certain fee rate should get the transaction confirmed within <code>n</code> blocks and then confirmation takes <code>n+1</code> blocks, that\u2019s probably not considered a big deal from the estimator\u2019s point of view.  But for LN nodes there\u2019s a huge (and expensive) difference.</p>\n<p>Presumably this is why eclair switches to exponential bumping once the deadline gets close, and why LDK uses exponential bumping whenever the estimator does not return an increased fee rate.</p>\n<aside class=\"quote no-group\" data-username=\"ismaelsadeeq\" data-post=\"3\" data-topic=\"1512\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ismaelsadeeq/48/151_2.png\" class=\"avatar\"> ismaelsadeeq:</div>\n<blockquote>\n<p>See the API proposal for Bitcoin Core\u2019s improved fee estimator response, which provides the state of the mempool in the past with respect to miner\u2019s mempool. This information could help clients make more informed decisions: <a href=\"https://github.com/bitcoin/bitcoin/issues/30392#issuecomment-2717491587\" rel=\"noopener nofollow ugc\">Fee Estimation via Fee rate Forecasters tracking issue \u00b7 Issue #30392 \u00b7 bitcoin/bitcoin \u00b7 GitHub</a></p>\n</blockquote>\n</aside>\n<p>Improving Bitcoin Core\u2019s estimator is great and should decrease the number of LN node operators that rely on third-party estimators such as mempool.space or Blockstream.</p>\n<p>But fundamentally, estimators are still estimators and cannot guarantee that transactions confirm before deadlines, especially when directed attacks are in play (pinning, censorship, etc.).  In such situations a naive budget-based fee bumping strategy is much more reliable.</p>",
  "post_number": 4,
  "post_type": 1,
  "updated_at": "2025-03-13T15:31:06.716Z",
  "reply_count": 2,
  "reply_to_post_number": 3,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 9,
  "readers_count": 8,
  "score": 11.8,
  "yours": false,
  "topic_id": 1512,
  "topic_slug": "lnds-deadline-aware-budget-sweeper",
  "topic_title": "LND's Deadline-Aware Budget Sweeper",
  "topic_html_title": "LND&rsquo;s Deadline-Aware Budget Sweeper",
  "category_id": 8,
  "display_username": "Matt Morehouse",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"ismaelsadeeq, post:3, topic:1512\"]\nCalling `estimateSmartFee` with `n`, and expecting it to confirm ASAP is not not ideal, and would likely not confirm ASAP. Instead, they should call `estimateSmartFee` with a `conf_target` of `1`. If the transaction does not confirm within the next 1\u20132 blocks, they can then call the fee function to determine the fee rate they are willing to pay at that target based on the available budget (curve).\n[/quote]\n\nGenerally LN nodes want the transaction to confirm within `n` blocks but they don't want to pay more fees than necessary.  Confirming ASAP is generally not needed, unless deadlines are getting close.\n\nBut I think you make a good point that there is probably a mismatch here between the fee estimator's intended use and what LN nodes do.  If the estimator says a certain fee rate should get the transaction confirmed within `n` blocks and then confirmation takes `n+1` blocks, that's probably not considered a big deal from the estimator's point of view.  But for LN nodes there's a huge (and expensive) difference.\n\nPresumably this is why eclair switches to exponential bumping once the deadline gets close, and why LDK uses exponential bumping whenever the estimator does not return an increased fee rate.\n\n\n[quote=\"ismaelsadeeq, post:3, topic:1512\"]\nSee the API proposal for Bitcoin Core\u2019s improved fee estimator response, which provides the state of the mempool in the past with respect to miner\u2019s mempool. This information could help clients make more informed decisions: [Fee Estimation via Fee rate Forecasters tracking issue \u00b7 Issue #30392 \u00b7 bitcoin/bitcoin \u00b7 GitHub](https://github.com/bitcoin/bitcoin/issues/30392#issuecomment-2717491587)\n[/quote]\n\nImproving Bitcoin Core's estimator is great and should decrease the number of LN node operators that rely on third-party estimators such as mempool.space or Blockstream.\n\nBut fundamentally, estimators are still estimators and cannot guarantee that transactions confirm before deadlines, especially when directed attacks are in play (pinning, censorship, etc.).  In such situations a naive budget-based fee bumping strategy is much more reliable.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 47,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}