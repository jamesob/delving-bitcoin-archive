{
  "id": 4578,
  "name": "Antoine Riard",
  "username": "ariard",
  "avatar_template": "/letter_avatar_proxy/v4/letter/a/c67d28/{size}.png",
  "created_at": "2025-03-19T22:49:58.530Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"morehouse\" data-post=\"3\" data-topic=\"1493\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/m/df705f/48.png\" class=\"avatar\"> morehouse:</div>\n<blockquote>\n<p>My <a href=\"https://github.com/lightning/bolts/pull/1233\">proposed spec change</a> is to require that nodes should <em>not</em> fail back HTLCs for which a preimage is known.</p>\n</blockquote>\n</aside>\n<p>So currently, if I\u2019m reading correctly this is a <code>MAY</code> and not a <code>SHOULD NOT</code>:</p>\n<pre><code class=\"lang-auto\">    - MAY fail the corresponding incoming HTLC sooner.\n</code></pre>\n<p>This could be more precise, as the incoming HTLC might not be included in the commitment transaction. If it\u2019s not included, failing it backward is not a problem. If it is included, this is a different problem as a routing LN node as it\u2019s all depends the mempool feerates at the time of failing backward. With anchor output, the feerate cost to confirm the commitment_tx on the incoming channel could be higher than the <em>received</em> HTLC\u2019s <code>amount_msat</code>.</p>\n<blockquote>\n<p>That is an orthogonal problem. The decision of whether to claim an HTLC on chain or not (because it would be uneconomical) is independent of the decision to fail back <em>off-chain</em> .</p>\n</blockquote>\n<p>Sure, however if the decision to fail back is not materialized <em>on-chain</em> (see comments above), this only works if the LN channel counterparty is <em>cooperative</em>, and I think the implicit assumption with BOLT5 (\u201cRecommendations for On-chain Transaction Handling\u201d) as a LN node cannot rely on <em>interactivity</em> with the counterparty to decide to go on-chain or not.</p>",
  "post_number": 4,
  "post_type": 1,
  "updated_at": "2025-03-19T22:49:58.530Z",
  "reply_count": 1,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 6,
  "reads": 17,
  "readers_count": 16,
  "score": 38.4,
  "yours": false,
  "topic_id": 1493,
  "topic_slug": "disclosure-lnd-excessive-failback-exploit",
  "topic_title": "Disclosure: LND Excessive Failback Exploit",
  "topic_html_title": "Disclosure: LND Excessive Failback Exploit",
  "category_id": 8,
  "display_username": "Antoine Riard",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"morehouse, post:3, topic:1493\"]\nMy [proposed spec change](https://github.com/lightning/bolts/pull/1233) is to require that nodes should *not* fail back HTLCs for which a preimage is known.\n[/quote]\n\nSo currently, if I\u2019m reading correctly this is a `MAY` and not a `SHOULD NOT`:\n\n```\n    - MAY fail the corresponding incoming HTLC sooner.\n```\n\nThis could be more precise, as the incoming HTLC might not be included in the commitment transaction. If it\u2019s not included, failing it backward is not a problem. If it is included, this is a different problem as a routing LN node as it\u2019s all depends the mempool feerates at the time of failing backward. With anchor output, the feerate cost to confirm the commitment_tx on the incoming channel could be higher than the *received* HTLC\u2019s `amount_msat`.\n\n> That is an orthogonal problem. The decision of whether to claim an HTLC on chain or not (because it would be uneconomical) is independent of the decision to fail back *off-chain* .\n\nSure, however if the decision to fail back is not materialized *on-chain* (see comments above), this only works if the LN channel counterparty is *cooperative*, and I think the implicit assumption with BOLT5 (\u201cRecommendations for On-chain Transaction Handling\u201d) as a LN node cannot rely on *interactivity* with the counterparty to decide to go on-chain or not.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 5,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}