{
  "id": 4379,
  "name": "Antoine Poinsot",
  "username": "AntoineP",
  "avatar_template": "/user_avatar/delvingbitcoin.org/antoinep/{size}/483_2.png",
  "created_at": "2025-02-25T19:19:21.102Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"ajtowns\" data-post=\"3\" data-topic=\"1470\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ajtowns/48/417_2.png\" class=\"avatar\"> ajtowns:</div>\n<blockquote>\n<p>I\u2019m not convinced multiprocess is the right way</p>\n</blockquote>\n</aside>\n<p>As i shared in my comment above I don\u2019t think a split around multiprocess binaries is ideal. But i believe it is important to refocus the main project on the node parts of the software, and i just see such a split as the only realistic and socially acceptable way of achieving that. Do you have a better suggestion?</p>\n<aside class=\"quote no-group\" data-username=\"ajtowns\" data-post=\"3\" data-topic=\"1470\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ajtowns/48/417_2.png\" class=\"avatar\"> ajtowns:</div>\n<blockquote>\n<p>Having all our wallet features be available via a library (or command-line tool, like bitcoin-tx or bitcoin-wallet)</p>\n</blockquote>\n</aside>\n<p>I agree that raw transaction parsing, PSBT updating, script decoding, signing, etc\u2026 should not be part of the node RPC since it does not required a node in the first place. But yes it\u2019s tangential.</p>\n<aside class=\"quote no-group\" data-username=\"ajtowns\" data-post=\"3\" data-topic=\"1470\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ajtowns/48/417_2.png\" class=\"avatar\"> ajtowns:</div>\n<blockquote>\n<p>BDK also <a href=\"https://bitcoindevkit.github.io/book-of-bdk/cookbook/syncing/electrum/\">seems to assume</a> having access to indexes like that is a good idea. That\u2019s something core has traditionally resisted</p>\n</blockquote>\n</aside>\n<p>BDK does not assume that anymore. It now just indexes wallet transactions and has a wallet-spk-to-derivation-index index just like the Core wallet. It has a <a href=\"https://github.com/bitcoindevkit/bdk/tree/master/crates/bitcoind_rpc\">bitcoind RPC chain data source</a> as well.</p>\n<aside class=\"quote no-group\" data-username=\"ajtowns\" data-post=\"3\" data-topic=\"1470\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ajtowns/48/417_2.png\" class=\"avatar\"> ajtowns:</div>\n<blockquote>\n<p>Personally, I like the idea that bitcoin core aims to provide enough software to make Bitcoin usable</p>\n</blockquote>\n</aside>\n<p>Me too. Unfortunately with the current resources it comes at non-trivial cost for all Bitcoin users, who are indirectly using Core, for the benefit of a handful of direct Core GUI users.</p>\n<aside class=\"quote no-group\" data-username=\"ajtowns\" data-post=\"3\" data-topic=\"1470\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ajtowns/48/417_2.png\" class=\"avatar\"> ajtowns:</div>\n<blockquote>\n<p>Having wallet functionality also seems useful to have in doing functional tests</p>\n</blockquote>\n</aside>\n<p>We have <code>MiniWallet</code> for this?</p>\n<aside class=\"quote no-group\" data-username=\"ajtowns\" data-post=\"3\" data-topic=\"1470\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ajtowns/48/417_2.png\" class=\"avatar\"> ajtowns:</div>\n<blockquote>\n<p>and experimenting with bitcoin more broadly (eg, messing around on signet).</p>\n</blockquote>\n</aside>\n<p>In a split future this could just be done using the Core wallet project which would release the equivalent of today\u2019s <code>bitcoind</code>? Or just any other wallet that would bundle a <code>bitcoin-node</code> (Sparrow, Liana, \u2026).</p>",
  "post_number": 9,
  "post_type": 1,
  "updated_at": "2025-02-25T19:19:21.102Z",
  "reply_count": 0,
  "reply_to_post_number": 3,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 6,
  "readers_count": 5,
  "score": 1.0,
  "yours": false,
  "topic_id": 1470,
  "topic_slug": "antoine-poinsot-on-bitcoin-cores-priorities",
  "topic_title": "Antoine Poinsot on Bitcoin Core's Priorities",
  "topic_html_title": "Antoine Poinsot on Bitcoin Core&rsquo;s Priorities",
  "category_id": 8,
  "display_username": "Antoine Poinsot",
  "primary_group_name": null,
  "flair_name": "wg-consensus-cleanup",
  "flair_url": "/uploads/default/original/1X/856d779f9ec58484f3a96285a21a813538b689f6.png",
  "flair_bg_color": "",
  "flair_color": "",
  "flair_group_id": 43,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": "Regular",
  "title_is_group": false,
  "bookmarked": false,
  "raw": "[quote=\"ajtowns, post:3, topic:1470\"]\nI\u2019m not convinced multiprocess is the right way\n[/quote]\n\nAs i shared in my comment above I don't think a split around multiprocess binaries is ideal. But i believe it is important to refocus the main project on the node parts of the software, and i just see such a split as the only realistic and socially acceptable way of achieving that. Do you have a better suggestion?\n\n[quote=\"ajtowns, post:3, topic:1470\"]\nHaving all our wallet features be available via a library (or command-line tool, like bitcoin-tx or bitcoin-wallet)\n[/quote]\n\nI agree that raw transaction parsing, PSBT updating, script decoding, signing, etc.. should not be part of the node RPC since it does not required a node in the first place. But yes it's tangential.\n\n[quote=\"ajtowns, post:3, topic:1470\"]\nBDK also [seems to assume](https://bitcoindevkit.github.io/book-of-bdk/cookbook/syncing/electrum/) having access to indexes like that is a good idea. That\u2019s something core has traditionally resisted\n[/quote]\n\nBDK does not assume that anymore. It now just indexes wallet transactions and has a wallet-spk-to-derivation-index index just like the Core wallet. It has a [bitcoind RPC chain data source](https://github.com/bitcoindevkit/bdk/tree/master/crates/bitcoind_rpc) as well.\n\n[quote=\"ajtowns, post:3, topic:1470\"]\nPersonally, I like the idea that bitcoin core aims to provide enough software to make Bitcoin usable\n[/quote]\n\nMe too. Unfortunately with the current resources it comes at non-trivial cost for all Bitcoin users, who are indirectly using Core, for the benefit of a handful of direct Core GUI users.\n\n[quote=\"ajtowns, post:3, topic:1470\"]\nHaving wallet functionality also seems useful to have in doing functional tests\n[/quote]\n\nWe have `MiniWallet` for this?\n\n[quote=\"ajtowns, post:3, topic:1470\"]\nand experimenting with bitcoin more broadly (eg, messing around on signet).\n[/quote]\n\nIn a split future this could just be done using the Core wallet project which would release the equivalent of today's `bitcoind`? Or just any other wallet that would bundle a `bitcoin-node` (Sparrow, Liana, ..).",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 12,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}