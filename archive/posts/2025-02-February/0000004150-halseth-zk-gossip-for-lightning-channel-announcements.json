{
  "id": 4150,
  "name": "Johan T. Halseth",
  "username": "halseth",
  "avatar_template": "/user_avatar/delvingbitcoin.org/halseth/{size}/198_2.png",
  "created_at": "2025-02-03T14:03:57.645Z",
  "cooked": "<p>Thanks for the insights! (and for finding a bug <img src=\"https://delvingbitcoin.org/images/emoji/twitter/smile.png?v=12\" title=\":smile:\" class=\"emoji\" alt=\":smile:\" loading=\"lazy\" width=\"20\" height=\"20\"> )</p>\n<aside class=\"quote no-group\" data-username=\"AdamISZ\" data-post=\"9\" data-topic=\"1407\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/adamisz/48/418_2.png\" class=\"avatar\"> AdamISZ:</div>\n<blockquote>\n<p>Your <a href=\"https://github.com/halseth/output-zero/blob/15cfb6adcef11379c5601831a864e15fe09910dc/docs/musig2.md\" rel=\"noopener nofollow ugc\">gist</a> has an 80 second prove time for the un-wrapped, correct? Does the wrapped version take more time, if so how much more?</p>\n</blockquote>\n</aside>\n<p>Yes, that\u2019s correct. On my laptop (M1 Max, 32GB) creating the STARK creates about 80 seconds. The wrapped (groth16) version is currently not possible to create on non-x86 hardware.</p>\n<p>RISC0 provides a (trusted) proof server one can use. Using that server the fully wrapped proof is created in less than 30 seconds. I must assume that it is sporting som beefy GPUs, but it gives you an idea what is possible. I am aiming to rent som GPUs myself to see what proving times I can get to for the groth16 proof.</p>\n<p>An interesting thing to note is that wrapping the proof (STARK-&gt;SNARK) reveals nothing about the private inputs, so one can imagine outsourcing the wrapping to a non-trusted server without giving up privacy.</p>\n<aside class=\"quote no-group\" data-username=\"AdamISZ\" data-post=\"9\" data-topic=\"1407\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/adamisz/48/418_2.png\" class=\"avatar\"> AdamISZ:</div>\n<blockquote>\n<p>Do we have a path to getting these numbers down, do you think?</p>\n</blockquote>\n</aside>\n<p>I\u2019m certain these numbers can be brought down quite a lot. As of now I have spent close to no time profiling the ZK application. RiscZero has an extensive guide on how one can do this: <a href=\"https://dev.risczero.com/api/zkvm/optimization\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Guest Optimization Guide | RISC Zero Developer Docs</a></p>\n<p>In addition there are alternative implementations of the zkVM that claims to have better performance, like <a href=\"https://github.com/succinctlabs/sp1\" rel=\"noopener nofollow ugc\">SP1</a>. It would be worthwhile spending some time comparing them.</p>\n<aside class=\"quote no-group\" data-username=\"AdamISZ\" data-post=\"9\" data-topic=\"1407\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/adamisz/48/418_2.png\" class=\"avatar\"> AdamISZ:</div>\n<blockquote>\n<p>\u201cConcise\u201d in the above para. : maybe 2-4kB is not concise! There is some analysis <a href=\"https://github.com/AdamISZ/aut-ct/issues/19\" rel=\"noopener nofollow ugc\">here</a>. I always assumed that was fine, but for LN \u2026 perhaps it just isn\u2019t (?), even if there are other advantages like &lt; 100ms verification and 1-2 seconds for proof.</p>\n</blockquote>\n</aside>\n<p>My hunch is that we need verification times to be at least sub-second on \u201cnormal\u201d hardware, preferably sub-100ms. Proof times I am not too worried about, several minutes is not a problem since you are waiting several blocks anyway before announcing it. Proofs are gossiped around so they should not be too big (and maybe they have to be less than 65kB to fit the LN max message size?).</p>",
  "post_number": 13,
  "post_type": 1,
  "posts_count": 30,
  "updated_at": "2025-02-03T14:03:57.645Z",
  "reply_count": 1,
  "reply_to_post_number": 9,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 32,
  "readers_count": 31,
  "score": 11.4,
  "yours": false,
  "topic_id": 1407,
  "topic_slug": "zk-gossip-for-lightning-channel-announcements",
  "topic_title": "ZK-gossip for lightning channel announcements",
  "topic_html_title": "ZK-gossip for lightning channel announcements",
  "category_id": 7,
  "display_username": "Johan T. Halseth",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Thanks for the insights! (and for finding a bug :smile: )\n\n[quote=\"AdamISZ, post:9, topic:1407\"]\nYour [gist](https://github.com/halseth/output-zero/blob/15cfb6adcef11379c5601831a864e15fe09910dc/docs/musig2.md) has an 80 second prove time for the un-wrapped, correct? Does the wrapped version take more time, if so how much more?\n[/quote]\n\nYes, that's correct. On my laptop (M1 Max, 32GB) creating the STARK creates about 80 seconds. The wrapped (groth16) version is currently not possible to create on non-x86 hardware. \n\nRISC0 provides a (trusted) proof server one can use. Using that server the fully wrapped proof is created in less than 30 seconds. I must assume that it is sporting som beefy GPUs, but it gives you an idea what is possible. I am aiming to rent som GPUs myself to see what proving times I can get to for the groth16 proof.\n\nAn interesting thing to note is that wrapping the proof (STARK->SNARK) reveals nothing about the private inputs, so one can imagine outsourcing the wrapping to a non-trusted server without giving up privacy.\n\n[quote=\"AdamISZ, post:9, topic:1407\"]\nDo we have a path to getting these numbers down, do you think?\n[/quote]\nI'm certain these numbers can be brought down quite a lot. As of now I have spent close to no time profiling the ZK application. RiscZero has an extensive guide on how one can do this: https://dev.risczero.com/api/zkvm/optimization\n\nIn addition there are alternative implementations of the zkVM that claims to have better performance, like [SP1](https://github.com/succinctlabs/sp1). It would be worthwhile spending some time comparing them.\n\n[quote=\"AdamISZ, post:9, topic:1407\"]\n\u201cConcise\u201d in the above para. : maybe 2-4kB is not concise! There is some analysis [here](https://github.com/AdamISZ/aut-ct/issues/19). I always assumed that was fine, but for LN \u2026 perhaps it just isn\u2019t (?), even if there are other advantages like < 100ms verification and 1-2 seconds for proof.\n[/quote]\nMy hunch is that we need verification times to be at least sub-second on \"normal\" hardware, preferably sub-100ms. Proof times I am not too worried about, several minutes is not a problem since you are waiting several blocks anyway before announcing it. Proofs are gossiped around so they should not be too big (and maybe they have to be less than 65kB to fit the LN max message size?).",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 163,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Thanks for the insights! (and for finding a bug :smile: ) \n\nYes, that\u2019s correct. On my laptop (M1 Max, 32GB) creating the STARK creates about 80 seconds. The wrapped (groth16) version is currently not possible to create on non-x86 hardware. \nRISC0 provides a (trusted) proof server one can use. Using&hellip;",
  "truncated": true,
  "post_url": "/t/zk-gossip-for-lightning-channel-announcements/1407/13",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}