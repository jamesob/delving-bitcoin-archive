{
  "id": 4312,
  "name": "Matt Morehouse",
  "username": "morehouse",
  "avatar_template": "/letter_avatar_proxy/v4/letter/m/df705f/{size}.png",
  "created_at": "2025-02-14T22:07:12.944Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"carla\" data-post=\"7\" data-topic=\"1147\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/carla/48/119_2.png\" class=\"avatar\"> carla:</div>\n<blockquote>\n<p>The graph below shows the attacker\u2019s reputation with the target node in a sink attack against a graph centered on the acinq node where the attacker bootstraps their reputation for 90 days before starting an attack.</p>\n</blockquote>\n</aside>\n<p>It\u2019s interesting that the reputation delta fluctuates so much.  Once the hodling begins, the attacker\u2019s reputation should be strictly decreasing.  So I presume the delta variance is entirely from fluctuations in the target node\u2019s incoming revenue?</p>\n<p>Or perhaps some variance is from the randomness of endorsed payments being sent to the attacker.  It would be interesting to see at which points on the graph did new endorsed payments arrive at the attacker.  We could also reduce that variance by having the attacker take a more direct approach to jamming \u2013 after building reputation, they would send themselves a payment of the maximum amount they can get endorsed and hodl.</p>\n<p>I\u2019m also curious how you chose to exclude outliers and how the graph looks with them included.</p>\n<aside class=\"quote no-group\" data-username=\"carla\" data-post=\"7\" data-topic=\"1147\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/carla/48/119_2.png\" class=\"avatar\"> carla:</div>\n<blockquote>\n<p>In a system with bi-directional reputation, we\u2019re able to enforce that both ends of the channel are compensated (either directly through the attacker\u2019s payments or transitively because they\u2019ll have to build up reputation on both ends). In the original example, <code>M0</code> will need to build incoming reputation with <code>T</code> in addition to <code>M1</code> building outgoing reputation with <code>T</code>\u2019s peers to achieve the same attack.</p>\n</blockquote>\n</aside>\n<p>So with outgoing reputation the final nodes in the jamming path get compensated.  And with incoming reputation the initial nodes in the jamming path get compensated.  What about all the intermediate nodes in the jamming path?</p>\n<p>Consider a simple example:</p>\n<pre data-code-height=\"60\" data-code-wrap=\"mermaid\"><code class=\"lang-mermaid\">graph LR \nM0 --- A --- T --- B --- M1\n</code></pre>\n<p><code>M0</code> builds reputation with <code>A</code>, <code>M1</code> builds reputation with <code>B</code>, and then the malicious nodes jam the <code>A-T</code> and <code>T-B</code> channels.  <code>T</code> gets nothing in this case.</p>\n<p>If the goal is to compensate <em>all</em> victims of a jamming attack, I don\u2019t think the current reputation algorithm can do that, bidirectional or not.</p>\n<h3><a name=\"p-4312-path-length-attack-multiplier-1\" class=\"anchor\" href=\"#p-4312-path-length-attack-multiplier-1\"></a>Path-Length Attack Multiplier</h3>\n<p>In general, the problem gets worse the more intermediate nodes there are.  Not only do those intermediate nodes not get compensated, but also the attacker\u2019s cost remains fixed while the damage multiplies.</p>\n<p>The worst case involves a maximum route of 27 hops, with the attacker able to route endorsed payment(s) across all of them while only paying to build reputation with the edge nodes (<code>A</code> and <code>B</code>):</p>\n<pre data-code-height=\"60\" data-code-wrap=\"mermaid\"><code class=\"lang-mermaid\">graph LR\nM0 --- A --- T0 --- TX((...))--- T23 --- B --- M1\n</code></pre>\n<p>Equivalently (and more realistically), the attacker can use circular routing to multiply the damage across a smaller core of target nodes:</p>\n<pre data-code-height=\"95\" data-code-wrap=\"mermaid\"><code class=\"lang-mermaid\">graph LR\nM0 --&gt; T0 --&gt; T1\nT1 --&gt; T2 --&gt; T0\nT2 --&gt; M1\n</code></pre>\n<p>Thus once the attacker has enough reputation to route a single endorsed HTLC, they can actually do ~24x as much jamming and reputation damage (8 HTLC cycles * 3 target channels).</p>",
  "post_number": 8,
  "post_type": 1,
  "updated_at": "2025-02-14T22:07:12.944Z",
  "reply_count": 0,
  "reply_to_post_number": 7,
  "quote_count": 1,
  "incoming_link_count": 1,
  "reads": 9,
  "readers_count": 8,
  "score": 6.6,
  "yours": false,
  "topic_id": 1147,
  "topic_slug": "hybrid-jamming-mitigation-results-and-updates",
  "topic_title": "Hybrid Jamming Mitigation: Results and Updates",
  "topic_html_title": "Hybrid Jamming Mitigation: Results and Updates",
  "category_id": 7,
  "display_username": "Matt Morehouse",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"carla, post:7, topic:1147\"]\nThe graph below shows the attacker\u2019s reputation with the target node in a sink attack against a graph centered on the acinq node where the attacker bootstraps their reputation for 90 days before starting an attack.\n[/quote]\n\nIt's interesting that the reputation delta fluctuates so much.  Once the hodling begins, the attacker's reputation should be strictly decreasing.  So I presume the delta variance is entirely from fluctuations in the target node's incoming revenue?\n\nOr perhaps some variance is from the randomness of endorsed payments being sent to the attacker.  It would be interesting to see at which points on the graph did new endorsed payments arrive at the attacker.  We could also reduce that variance by having the attacker take a more direct approach to jamming -- after building reputation, they would send themselves a payment of the maximum amount they can get endorsed and hodl.\n\nI'm also curious how you chose to exclude outliers and how the graph looks with them included.\n\n[quote=\"carla, post:7, topic:1147\"]\nIn a system with bi-directional reputation, we\u2019re able to enforce that both ends of the channel are compensated (either directly through the attacker\u2019s payments or transitively because they\u2019ll have to build up reputation on both ends). In the original example, `M0` will need to build incoming reputation with `T` in addition to `M1` building outgoing reputation with `T`\u2019s peers to achieve the same attack.\n[/quote]\n\nSo with outgoing reputation the final nodes in the jamming path get compensated.  And with incoming reputation the initial nodes in the jamming path get compensated.  What about all the intermediate nodes in the jamming path?\n\nConsider a simple example:\n\n```mermaid height=60,auto\ngraph LR \nM0 --- A --- T --- B --- M1\n```\n\n`M0` builds reputation with `A`, `M1` builds reputation with `B`, and then the malicious nodes jam the `A-T` and `T-B` channels.  `T` gets nothing in this case.\n\nIf the goal is to compensate *all* victims of a jamming attack, I don't think the current reputation algorithm can do that, bidirectional or not.\n\n### Path-Length Attack Multiplier\n\nIn general, the problem gets worse the more intermediate nodes there are.  Not only do those intermediate nodes not get compensated, but also the attacker's cost remains fixed while the damage multiplies.\n\nThe worst case involves a maximum route of 27 hops, with the attacker able to route endorsed payment(s) across all of them while only paying to build reputation with the edge nodes (`A` and `B`):\n\n```mermaid height=60,auto\ngraph LR\nM0 --- A --- T0 --- TX((...))--- T23 --- B --- M1\n```\n\nEquivalently (and more realistically), the attacker can use circular routing to multiply the damage across a smaller core of target nodes:\n\n```mermaid height=95,auto\ngraph LR\nM0 --> T0 --> T1\nT1 --> T2 --> T0\nT2 --> M1\n```\n\nThus once the attacker has enough reputation to route a single endorsed HTLC, they can actually do ~24x as much jamming and reputation damage (8 HTLC cycles * 3 target channels).",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 47,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}