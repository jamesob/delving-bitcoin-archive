{
  "id": 4144,
  "name": "Adam Gibson",
  "username": "AdamISZ",
  "avatar_template": "/user_avatar/delvingbitcoin.org/adamisz/{size}/418_2.png",
  "created_at": "2025-02-01T23:00:58.162Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"MattCorallo\" data-post=\"10\" data-topic=\"1407\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/m/e47c2d/48.png\" class=\"avatar\"> MattCorallo:</div>\n<blockquote>\n<p>Shucks. Then it seems we\u2019re right back where we were three years ago - this is in theory a great idea, we know we want to do it, we even have some ideas for optimizations for it, but ultimately there simply is no suitable proof scheme with a mature implementation space.</p>\n</blockquote>\n</aside>\n<p>I mean, sure, possibly. But from <em>my</em> point of view it\u2019s certainly not \u201cwe\u2019re in the same place as 3 years ago\u201d because that\u2019s when I was looking at ring sigs for this idea and they never get past O(N) compute and verify. Curve Trees are to me a very clearly better version of that, with as they say in the paper \u201cconcretely small proving, verifying times\u201d. And since it can all be built on secp/secq (including bulletproofs circuits) it isn\u2019t dragging in a new area of dependencies to bitcoin coders (I mean, OK, <em>kinda</em>). As you put it, indeed, \u201cwe could optimize a lot by not trying to verify secp256k1 curve ops in RISC-V\u201d. Of course my aut-ct repo is little more than a hobbyist project, as it caveats it\u2019s not something ready for production use, and nor will it be without other people contributing/analyzing it. And apart from the aforementioned FCMP++ project (which, worth mentioning, at least has an audit! - not to mention generally being a more substantial project), there is not as you put it a \u201cmature implementation space\u201d, i.e. who else is even using Curve Trees? But, that\u2019s a high bar for a quite novel concept in play here.</p>\n<p>But of course this thread is about <a class=\"mention\" href=\"/u/halseth\">@halseth</a> 's scheme with zkSTARKs so I\u2019ll stop talking about an alternative idea, here (there is another thread about that!).</p>\n<blockquote>\n<p>The state of things may be better here than it was three years ago when we last looked, so happy to be proven wrong!</p>\n</blockquote>\n<p>Indeed it may be. But, the main thought that I have in reading your analysis here is, that I perhaps (can\u2019t speak for others in the discussion) don\u2019t know the set of criteria you (and other lightning engineers) have in mind of what exactly is acceptable and/or needed to do a ZKP of utxo ownership that\u2019s actually workable in LN (gossip).</p>\n<blockquote>\n<p>Verification in the 1-3 second range is already probably too slow here</p>\n</blockquote>\n<p>OK that\u2019s what I originally thought, though I had other use cases in mind too. Yeah, that\u2019s part of why the \u201cjuice not worth the squeeze\u201d comment.</p>",
  "post_number": 11,
  "post_type": 1,
  "updated_at": "2025-02-01T23:00:58.162Z",
  "reply_count": 1,
  "reply_to_post_number": 10,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 8,
  "readers_count": 7,
  "score": 6.6,
  "yours": false,
  "topic_id": 1407,
  "topic_slug": "zk-gossip-for-lightning-channel-announcements",
  "topic_title": "ZK-gossip for lightning channel announcements",
  "topic_html_title": "ZK-gossip for lightning channel announcements",
  "category_id": 7,
  "display_username": "Adam Gibson",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"MattCorallo, post:10, topic:1407\"]\nShucks. Then it seems we\u2019re right back where we were three years ago - this is in theory a great idea, we know we want to do it, we even have some ideas for optimizations for it, but ultimately there simply is no suitable proof scheme with a mature implementation space.\n[/quote]\n\nI mean, sure, possibly. But from *my* point of view it's certainly not \"we're in the same place as 3 years ago\" because that's when I was looking at ring sigs for this idea and they never get past O(N) compute and verify. Curve Trees are to me a very clearly better version of that, with as they say in the paper \"concretely small proving, verifying times\". And since it can all be built on secp/secq (including bulletproofs circuits) it isn't dragging in a new area of dependencies to bitcoin coders (I mean, OK, *kinda*). As you put it, indeed, \"we could optimize a lot by not trying to verify secp256k1 curve ops in RISC-V\". Of course my aut-ct repo is little more than a hobbyist project, as it caveats it's not something ready for production use, and nor will it be without other people contributing/analyzing it. And apart from the aforementioned FCMP++ project (which, worth mentioning, at least has an audit! - not to mention generally being a more substantial project), there is not as you put it a \"mature implementation space\", i.e. who else is even using Curve Trees? But, that's a high bar for a quite novel concept in play here.\n\nBut of course this thread is about @halseth 's scheme with zkSTARKs so I'll stop talking about an alternative idea, here (there is another thread about that!).\n\n> The state of things may be better here than it was three years ago when we last looked, so happy to be proven wrong!\n\nIndeed it may be. But, the main thought that I have in reading your analysis here is, that I perhaps (can't speak for others in the discussion) don't know the set of criteria you (and other lightning engineers) have in mind of what exactly is acceptable and/or needed to do a ZKP of utxo ownership that's actually workable in LN (gossip).\n\n> Verification in the 1-3 second range is already probably too slow here\n\nOK that's what I originally thought, though I had other use cases in mind too. Yeah, that's part of why the \"juice not worth the squeeze\" comment.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 343,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}