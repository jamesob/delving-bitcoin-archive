{
  "id": 4288,
  "name": "J\u00e1n S\u00e1ren\u00edk",
  "username": "jsarenik",
  "avatar_template": "/user_avatar/delvingbitcoin.org/jsarenik/{size}/1021_2.png",
  "created_at": "2025-02-12T11:25:41.280Z",
  "cooked": "<p>Following is the latest version of best block hash shortening with a practical application for naming time-sensitive entries in the end.</p>\n<h1><a name=\"p-4288-motivation-1\" class=\"anchor\" href=\"#p-4288-motivation-1\"></a>Motivation</h1>\n<p>To write less and still grasp it all.</p>\n<h1><a name=\"p-4288-demo-2\" class=\"anchor\" href=\"#p-4288-demo-2\"></a>Demo</h1>\n<p>See the following block text-only block with its height and hash including the \u201cshortened kode\u201d <code>sk</code> and the new \u201canecdotal kode\u201d <code>ak</code>. Available live at\n<a href=\"https://anyone.eu.org/niceblack.txt\" rel=\"noopener nofollow ugc\">https://anyone.eu.org/niceblack.txt</a> although from now only with <code>ak</code> code.</p>\n<p>Both codes have the same octet in the end. Explained in <a href=\"https://anyone.eu.org/skm.txt\" rel=\"noopener nofollow ugc\">https://anyone.eu.org/skm.txt</a></p>\n<p>An example which includes both follows:</p>\n<pre><code class=\"lang-auto\">     _|_|      _|_|    _|_|_|    \n   _|    _|  _|    _|        _|  \n     _|_|      _|_|      _|_|    \n   _|    _|  _|    _|        _|  \n     _|_|      _|_|    _|_|_|    \n\n     _|  _|      _|  _|_|_|_|  \n     _|  _|    _|_|  _|        \n     _|_|_|_|    _|  _|_|_|    \n         _|      _|        _|  \n         _|      _|  _|_|_|    \n\n  ,---   .123 4567 89ab cdef   ---,\n  | ..   .... .... .... ....   .f |\n  | 1.   ...1 64ea 5622 1a9b   1f |\n  | 2.   6512 2cd3 dcd9 75fa   2f |\n  | 3.   aac. 1.47 3ea4 c883   3f |\n  '===   ==== ==== ==== ====   ==='\n   sk:   c883 94\n   ak:   841. 94\n</code></pre>\n<h1><a name=\"p-4288-what-happens-3\" class=\"anchor\" href=\"#p-4288-what-happens-3\"></a>What happens</h1>\n<p>All of the \u201cdoublets\u201d (double octets) shown above are XORed to get <code>ak</code>.</p>\n<p>See <a href=\"https://anyone.eu.org/bitcoin.txt\" rel=\"noopener nofollow ugc\">https://anyone.eu.org/bitcoin.txt</a> and look for \u201cshortform\u201d there. It was the first thought of mine, some years ago.</p>\n<h1><a name=\"p-4288-practical-use-4\" class=\"anchor\" href=\"#p-4288-practical-use-4\"></a>Practical use</h1>\n<p>To describe SHA256 sum of any data one would make an <code>ak</code> of the hash, XOR it with <code>ak</code> of a Bitcoin block and publish the result widely including the block height. The string is much shorter than the original 32 octets but allows checking with full 32-byte hashes (one of the block and the other of input data) whenever needed and promotes running Bitcoin nodes in order to locally query for the full block hash.</p>\n<h2><a name=\"p-4288-old-example-using-sk-5\" class=\"anchor\" href=\"#p-4288-old-example-using-sk-5\"></a>Old example using <code>sk</code></h2>\n<p>See <a href=\"http://anyone.eu.org/ws\" rel=\"noopener nofollow ugc\">http://anyone.eu.org/ws</a> and <a href=\"https://anyone.eu.org/ws/883417-c1a4a4.txt\" rel=\"noopener nofollow ugc\">https://anyone.eu.org/ws/883417-c1a4a4.txt</a> for a current example.</p>\n<h2><a name=\"p-4288-new-example-using-ak-6\" class=\"anchor\" href=\"#p-4288-new-example-using-ak-6\"></a>New example using <code>ak</code></h2>\n<p>See <a href=\"https://anyone.eu.org/as/\" rel=\"noopener nofollow ugc\">https://anyone.eu.org/as/</a> and <a href=\"https://anyone.eu.org/as/883438-53c655.txt\" rel=\"noopener nofollow ugc\">https://anyone.eu.org/as/883438-53c655.txt</a></p>\n<h1><a name=\"p-4288-fin-7\" class=\"anchor\" href=\"#p-4288-fin-7\"></a>fin</h1>\n<p>I will be happy for feedback since I have never heard any complaint other than <code>16777215</code> (<code>0xFFFFFF</code>) is a too small number.</p>",
  "post_number": 1,
  "post_type": 1,
  "updated_at": "2025-02-12T14:55:49.628Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 1,
  "reads": 10,
  "readers_count": 9,
  "score": 6.8,
  "yours": false,
  "topic_id": 1441,
  "topic_slug": "anecdotal-kode-code-for-humans",
  "topic_title": "Anecdotal kode (code) for humans",
  "topic_html_title": "Anecdotal kode (code) for humans",
  "category_id": 8,
  "display_username": "J\u00e1n S\u00e1ren\u00edk",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 5,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Following is the latest version of best block hash shortening with a practical application for naming time-sensitive entries in the end.\n\n# Motivation\n\nTo write less and still grasp it all.\n\n# Demo\n\nSee the following block text-only block with its height and hash including the \"shortened kode\" `sk` and the new \"anecdotal kode\" `ak`. Available live at \nhttps://anyone.eu.org/niceblack.txt although from now only with `ak` code.\n\nBoth codes have the same octet in the end. Explained in https://anyone.eu.org/skm.txt\n\nAn example which includes both follows:\n\n```\n     _|_|      _|_|    _|_|_|    \n   _|    _|  _|    _|        _|  \n     _|_|      _|_|      _|_|    \n   _|    _|  _|    _|        _|  \n     _|_|      _|_|    _|_|_|    \n\n     _|  _|      _|  _|_|_|_|  \n     _|  _|    _|_|  _|        \n     _|_|_|_|    _|  _|_|_|    \n         _|      _|        _|  \n         _|      _|  _|_|_|    \n\n  ,---   .123 4567 89ab cdef   ---,\n  | ..   .... .... .... ....   .f |\n  | 1.   ...1 64ea 5622 1a9b   1f |\n  | 2.   6512 2cd3 dcd9 75fa   2f |\n  | 3.   aac. 1.47 3ea4 c883   3f |\n  '===   ==== ==== ==== ====   ==='\n   sk:   c883 94\n   ak:   841. 94\n```\n\n# What happens\n\nAll of the \"doublets\" (double octets) shown above are XORed to get `ak`.\n\nSee https://anyone.eu.org/bitcoin.txt and look for \"shortform\" there. It was the first thought of mine, some years ago.\n\n# Practical use\n\nTo describe SHA256 sum of any data one would make an `ak` of the hash, XOR it with `ak` of a Bitcoin block and publish the result widely including the block height. The string is much shorter than the original 32 octets but allows checking with full 32-byte hashes (one of the block and the other of input data) whenever needed and promotes running Bitcoin nodes in order to locally query for the full block hash. \n\n## Old example using `sk`\n\nSee http://anyone.eu.org/ws and https://anyone.eu.org/ws/883417-c1a4a4.txt for a current example.\n\n## New example using `ak`\n\nSee https://anyone.eu.org/as/ and https://anyone.eu.org/as/883438-53c655.txt\n\n# fin\n\nI will be happy for feedback since I have never heard any complaint other than `16777215` (`0xFFFFFF`) is a too small number.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 659,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}