{
  "id": 4162,
  "name": "Anthony Towns",
  "username": "ajtowns",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/417_2.png",
  "created_at": "2025-02-04T05:58:35.383Z",
  "cooked": "<p>I think the approach in the Oct 2021 thread addressed this by having two parts to the commitment tx: an output containing Alice\u2019s balance and the HTLCs from Alice to Bob, and another with the same but for Bob. That way you have 0.5 RTT updates to either output, with signatures from just one party, without invalidating the signatures from the other party on the latest spend of the other output.</p>\n<p>Note: when you want to update the underlying commitment (to reshuffle the balances once payments have succeeded), that still requires 1.5 round trips, but can be done in a quiet period, or just less frequently.</p>\n<p>So the txs look like:</p>\n<pre data-code-height=\"598\" data-code-wrap=\"mermaid\"><code class=\"lang-mermaid\">classDiagram\n    class Commitment{\n        FundingTx\n        Alice()\n        Bob()\n        anchor()\n    }\n    class AliceCmt{\n        Commitment.Alice\n        AliceBal()\n        HTLC-X()\n        anchor()\n    }\n    class HTLC-X-Claim{\n        AliceCmt.HTLC-X[Preimage]\n        Bob()\n        anchor()\n    }\n    class HTLC-X-Refund{\n        AliceCmt.HTLC-X[Timeout]\n        Alice()\n    }\n    Commitment &lt;|-- AliceCmt\n    AliceCmt  &lt;|--HTLC-X-Claim\n    AliceCmt  &lt;|--HTLC-X-Refund\n</code></pre>\n<p>at which point you can have the preimage path for HTLC-X-Claim require both Alice\u2019s and Bob\u2019s signature and commit to being v3, but the refund path requires just Alice\u2019s signature and a timeout, and does not commit to being v3. If Bob updates BobCmt, that doesn\u2019t affect the signatures here, so that\u2019s fine.</p>\n<p>(If these are for PTLCs instead of HTLCs, the claim tx needs to be signed by both Alice and Bob in order to force Bob to reveal the PTLC preimage, which was the original motivation for this setup)</p>",
  "post_number": 7,
  "post_type": 1,
  "updated_at": "2025-02-04T05:58:35.383Z",
  "reply_count": 1,
  "reply_to_post_number": 6,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 11,
  "readers_count": 10,
  "score": 37.0,
  "yours": false,
  "topic_id": 1414,
  "topic_slug": "minimal-signing-flow-changes-for-truc-channels",
  "topic_title": "Minimal signing flow changes for TRUC channels",
  "topic_html_title": "Minimal signing flow changes for TRUC channels",
  "category_id": 7,
  "display_username": "Anthony Towns",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "username": "instagibbs",
    "name": "Gregory Sanders",
    "avatar_template": "/user_avatar/delvingbitcoin.org/instagibbs/{size}/28_2.png"
  },
  "bookmarked": false,
  "raw": "I think the approach in the Oct 2021 thread addressed this by having two parts to the commitment tx: an output containing Alice's balance and the HTLCs from Alice to Bob, and another with the same but for Bob. That way you have 0.5 RTT updates to either output, with signatures from just one party, without invalidating the signatures from the other party on the latest spend of the other output.\n\nNote: when you want to update the underlying commitment (to reshuffle the balances once payments have succeeded), that still requires 1.5 round trips, but can be done in a quiet period, or just less frequently.\n\nSo the txs look like:\n\n```mermaid height=598,auto\nclassDiagram\n    class Commitment{\n        FundingTx\n        Alice()\n        Bob()\n        anchor()\n    }\n    class AliceCmt{\n        Commitment.Alice\n        AliceBal()\n        HTLC-X()\n        anchor()\n    }\n    class HTLC-X-Claim{\n        AliceCmt.HTLC-X[Preimage]\n        Bob()\n        anchor()\n    }\n    class HTLC-X-Refund{\n        AliceCmt.HTLC-X[Timeout]\n        Alice()\n    }\n    Commitment <|-- AliceCmt\n    AliceCmt  <|--HTLC-X-Claim\n    AliceCmt  <|--HTLC-X-Refund\n```\n\nat which point you can have the preimage path for HTLC-X-Claim require both Alice's and Bob's signature and commit to being v3, but the refund path requires just Alice's signature and a timeout, and does not commit to being v3. If Bob updates BobCmt, that doesn't affect the signatures here, so that's fine.\n\n(If these are for PTLCs instead of HTLCs, the claim tx needs to be signed by both Alice and Bob in order to force Bob to reveal the PTLC preimage, which was the original motivation for this setup)",
  "actions_summary": [
    {
      "id": 2,
      "count": 2
    }
  ],
  "moderator": true,
  "admin": true,
  "staff": true,
  "user_id": 3,
  "hidden": false,
  "trust_level": 4,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    },
    {
      "id": "eyes",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 2,
  "current_user_used_main_reaction": false
}