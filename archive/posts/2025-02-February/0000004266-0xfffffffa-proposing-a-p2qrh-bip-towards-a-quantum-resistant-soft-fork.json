{
  "id": 4266,
  "name": "Quantum Safe Bitcoin Project",
  "username": "0xfffffffa",
  "avatar_template": "/user_avatar/delvingbitcoin.org/0xfffffffa/{size}/1027_2.png",
  "created_at": "2025-02-10T15:37:09.807Z",
  "cooked": "<p>Hello,</p>\n<p>Its my first post here and have come across this very interesting work by <a class=\"mention\" href=\"/u/cryptoquick\">@cryptoquick</a></p>\n<p>I\u2019ve been working on <a href=\"https://www.bitcoinqs.org\" rel=\"noopener nofollow ugc\">https://www.bitcoinqs.org</a> - its a L2 solution rather than a soft/hard fork of the L1 Bitcoin network.</p>\n<p>Behind the scenes, I\u2019ve gone for ML-DSA/Dilithium.</p>\n<p>I\u2019ve created a bridge between L1 / L2 BitcoinQS that bridges back and forth between L1 Bitcoin and L2 Quantum Wrapped Bitcoin (Quantum Safe) BQS at a 1:1 ratio ie same in same quantum wrapped out and vice versa.</p>\n<p>I considered the BIP route as well, but given historically BIPS take an incredibly long time to get implemented and supported I thought this would be the fastest way to get a working solution ready.</p>\n<p>High level, signature algo ML-DSA as previously stated. At present while on testnet the  address generation uses SHA3 256 and base58 encoding. However I\u2019m in the process of upgrading this in time for mainnet launch.</p>\n<p>Key generation , signing all happen entirely in the browser. Console tools are being developed to perform same from the command line. The platform is non custodial and at no point do we have access to user keys.</p>\n<p>Once transaction is signed in the browser, it is broadcast as expected to various validators that confirm said signature and update their state.</p>\n<p>A block size in testnet is defined as 2 transactions once 2 transactions happen on L2 they are hashed and posted to L1 Bitcoin using OP_RETURN referencing the previous hash (first genesis hash is simply the word GENESIS followed by the hash of the transaction).</p>\n<p>On mainnet, I\u2019m still rather undecided what the optimal block size would be as need to find the golden ratio between security and keeping transaction costs low (possibly 20) - ultimately this will depend on adoption and # of txs per hour.</p>\n<p>Given its L2, can implement all sorts of wonderful extensions such as quantum resistant BRC20 tokens. We can implement quantum safe smart contracts and others.</p>\n<p>there is no limit to what the imagination can conceive and extend the base system to support.</p>\n<p>We are thinking along the same lines and it would be nice to collaborate feel free to reach out on twitter <span class=\"mention\">@bitcoinqs</span></p>",
  "post_number": 6,
  "post_type": 1,
  "updated_at": "2025-02-10T15:37:09.807Z",
  "reply_count": 1,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 11,
  "readers_count": 10,
  "score": 7.2,
  "yours": false,
  "topic_id": 956,
  "topic_slug": "proposing-a-p2qrh-bip-towards-a-quantum-resistant-soft-fork",
  "topic_title": "Proposing a P2QRH BIP towards a quantum resistant soft fork",
  "topic_html_title": "Proposing a P2QRH BIP towards a quantum resistant soft fork",
  "category_id": 7,
  "display_username": "Quantum Safe Bitcoin Project",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Hello, \n\nIts my first post here and have come across this very interesting work by @cryptoquick \n\nI've been working on https://www.bitcoinqs.org - its a L2 solution rather than a soft/hard fork of the L1 Bitcoin network. \n\nBehind the scenes, I've gone for ML-DSA/Dilithium. \n\nI've created a bridge between L1 / L2 BitcoinQS that bridges back and forth between L1 Bitcoin and L2 Quantum Wrapped Bitcoin (Quantum Safe) BQS at a 1:1 ratio ie same in same quantum wrapped out and vice versa.\n\nI considered the BIP route as well, but given historically BIPS take an incredibly long time to get implemented and supported I thought this would be the fastest way to get a working solution ready. \n\nHigh level, signature algo ML-DSA as previously stated. At present while on testnet the  address generation uses SHA3 256 and base58 encoding. However I'm in the process of upgrading this in time for mainnet launch.\n\nKey generation , signing all happen entirely in the browser. Console tools are being developed to perform same from the command line. The platform is non custodial and at no point do we have access to user keys. \n\nOnce transaction is signed in the browser, it is broadcast as expected to various validators that confirm said signature and update their state.\n\nA block size in testnet is defined as 2 transactions once 2 transactions happen on L2 they are hashed and posted to L1 Bitcoin using OP_RETURN referencing the previous hash (first genesis hash is simply the word GENESIS followed by the hash of the transaction). \n\nOn mainnet, I'm still rather undecided what the optimal block size would be as need to find the golden ratio between security and keeping transaction costs low (possibly 20) - ultimately this will depend on adoption and # of txs per hour. \n\nGiven its L2, can implement all sorts of wonderful extensions such as quantum resistant BRC20 tokens. We can implement quantum safe smart contracts and others. \n\nthere is no limit to what the imagination can conceive and extend the base system to support. \n\nWe are thinking along the same lines and it would be nice to collaborate feel free to reach out on twitter @bitcoinqs",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 663,
  "hidden": false,
  "trust_level": 0,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}