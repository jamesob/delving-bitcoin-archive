{
  "id": 4172,
  "name": "Johan T. Halseth",
  "username": "halseth",
  "avatar_template": "/user_avatar/delvingbitcoin.org/halseth/{size}/198_2.png",
  "created_at": "2025-02-04T14:45:08.444Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"AdamISZ\" data-post=\"16\" data-topic=\"1407\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/adamisz/48/418_2.png\" class=\"avatar\"> AdamISZ:</div>\n<blockquote>\n<p>I\u2019m not convinced that times of 1min + will be viable.</p>\n</blockquote>\n</aside>\n<p>Considering</p>\n<ul>\n<li>opening channels is not something you do often AND</li>\n<li>you wait minimum 6 blocks before announcing the channel AND</li>\n<li>you should perhaps wait even longer to increase your anonymity set AND</li>\n<li>either channel party can create the proof (the one with the beefiest hw) AND</li>\n<li>it can likely be optimized quite a lot AND</li>\n<li>hardware acceleration tends to become more widespread</li>\n</ul>\n<p>I think we can quickly get proving times down to something reasonable.</p>\n<aside class=\"quote no-group\" data-username=\"AdamISZ\" data-post=\"16\" data-topic=\"1407\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/adamisz/48/418_2.png\" class=\"avatar\"> AdamISZ:</div>\n<blockquote>\n<p>This feels a bit flaky. In the docs of the non-MuSig version I see you did hash(x) where x is privkey (for single control utxo), which to me is kind of \u201cthe\u201d way to do it; a key image is, functionally, almost exactly the same as a hash of a private key.</p>\n</blockquote>\n</aside>\n<p>I understand why you say that. I myself spent some time convincing myself this was safe (I\u2019m happy to hear a counterargument).</p>\n<p>The thinking here is that these public keys are never revealed to anyone other than the two channel counterparties (and they have all the information to leak the existence of the channel anyway of course), hence it is \u201csemi-private\u201d.</p>\n<p>If they leak, then an observer can obviously link the channel to the output. But that is still not worse than today, where the link is already public and gossiped around.</p>\n<p>I do get the confusion that a \u201cpublic key that should be kept private\u201d could bring though. And I believe you could indeed do a ECDH as an alternative. The problem with that as I see it, is that you need to give the prover access to the private key (or give it access to APIs that can perform the ECDH). With the hash of public keys we currently do  the LN implementation can just spit out a regular channel accnouncement, then this external tool can convert it to a ZK proof before it gets broadcasted.</p>",
  "post_number": 18,
  "post_type": 1,
  "updated_at": "2025-02-04T14:45:08.444Z",
  "reply_count": 0,
  "reply_to_post_number": 16,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 6,
  "readers_count": 5,
  "score": 1.2,
  "yours": false,
  "topic_id": 1407,
  "topic_slug": "zk-gossip-for-lightning-channel-announcements",
  "topic_title": "ZK-gossip for lightning channel announcements",
  "topic_html_title": "ZK-gossip for lightning channel announcements",
  "category_id": 7,
  "display_username": "Johan T. Halseth",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"AdamISZ, post:16, topic:1407\"]\nI\u2019m not convinced that times of 1min + will be viable.\n[/quote]\n\nConsidering \n- opening channels is not something you do often AND\n- you wait minimum 6 blocks before announcing the channel AND\n- you should perhaps wait even longer to increase your anonymity set AND\n- either channel party can create the proof (the one with the beefiest hw) AND\n- it can likely be optimized quite a lot AND\n- hardware acceleration tends to become more widespread\n\nI think we can quickly get proving times down to something reasonable. \n\n[quote=\"AdamISZ, post:16, topic:1407\"]\nThis feels a bit flaky. In the docs of the non-MuSig version I see you did hash(x) where x is privkey (for single control utxo), which to me is kind of \u201cthe\u201d way to do it; a key image is, functionally, almost exactly the same as a hash of a private key.\n[/quote]\nI understand why you say that. I myself spent some time convincing myself this was safe (I'm happy to hear a counterargument). \n\nThe thinking here is that these public keys are never revealed to anyone other than the two channel counterparties (and they have all the information to leak the existence of the channel anyway of course), hence it is \"semi-private\".\n\nIf they leak, then an observer can obviously link the channel to the output. But that is still not worse than today, where the link is already public and gossiped around.\n\nI do get the confusion that a \"public key that should be kept private\" could bring though. And I believe you could indeed do a ECDH as an alternative. The problem with that as I see it, is that you need to give the prover access to the private key (or give it access to APIs that can perform the ECDH). With the hash of public keys we currently do  the LN implementation can just spit out a regular channel accnouncement, then this external tool can convert it to a ZK proof before it gets broadcasted.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 163,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}