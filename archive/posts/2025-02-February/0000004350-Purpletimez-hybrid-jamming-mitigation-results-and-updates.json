{
  "id": 4350,
  "name": null,
  "username": "Purpletimez",
  "avatar_template": "/letter_avatar_proxy/v4/letter/p/7ab992/{size}.png",
  "created_at": "2025-02-20T21:18:23.878Z",
  "cooked": "<p>Topological Graphic of \u201cSink\u201d attack, afaiu.</p>\n<pre><code class=\"lang-auto\">                                                                 ------------------------\n                                                                  |                      |\n                                                        ----------|  direct neighbor #1  |---------\n                                                        |         |______________________|        |\n                                                        |                                         |\n                                                        |         ------------------------        |\n                                                        |         |                      |        |\n                                                        |---------|  direct neighbor #2  |--------|\n                                                        |         |______________________|        |\n                                                        |                                         |\n                                ---------------         |         ------------------------        |\n                                |             |         |         |                      |        |\n                ----------------| target node |---------|---------|  direct neighbor #3  |--------|\n                |               |_____________|         |         |______________________|        |\n                |                                       |                                         |\n                |                                       |         ------------------------        |\n                |                                       |         |                      |        |\n                |                                       |---------|  direct neighbor #4  |--------|\n                |                                       |         |______________________|        |\n                |                                       |                                         |\n                |                                       |         ------------------------        |\n                |                                       |         |                      |        |\n                |                                       |---------|  direct nighbor #5   |--------|\n                |                                                 |______________________|        |\n                |                                                                                 |\n        -----------------                                                                         |\n        |               |                                                                         |\n        | attacker node |                                                                         |\n        |_______________|                                                                         |\n                |                                                                                 | \n                |                                                                                 |\n                |                                                                                 |\n                |                                                                                 |\n                |               ----------------------------                                      |\n                |               |                          |                                      |\n                |---------------| indirect neighbor * #15  |--------------------------------------|\n                                |__________________________|\n\n\n</code></pre>\n<aside class=\"quote no-group\" data-username=\"carla\" data-post=\"7\" data-topic=\"1147\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/carla/48/119_2.png\" class=\"avatar\"> carla:</div>\n<blockquote>\n<p>Our results were pretty consistent across simulation runs. As the attacker holds endorsed payments, their reputation drops and the target node will stop forwarding them endorsed payments. In all simulations the attacker loses its reputation with the target quickly, and the target\u2019s reputation does not drop below peacetime projections</p>\n</blockquote>\n</aside>\n<p>Afaiu, a \u201csink\u201d attack in the absence of outgoing reputation exploiting the lack of outgpoing reputation works in the following way, there is a target node A connected to a number of direct neighbor, which are themselves connected to a large indirect neighbor. A HTLC from a target node\u2019s direct neighbor at destination of an indirect neighbor is withheld for few hours during which there is no resolution.</p>\n<p>The attacker node might already general jam the channel links between the target node\u2019s direct neighbor and the indirect neighbor to provoke the traffic re-direction from the target node\u2019s peers links to the \u201cdestination\u201d large node to the attacker carried links.</p>\n<p>In that simulation outline, still afaiu, the attacker should get a drop of the incoming reputation of the target node\u2019s peers links and hypothetically the target revenue has dropped below its revenue as time of no jam.</p>\n<p>What is not said in presenting the simulation results is if it is encompassing in the attack cost computation, the subsidiary cost of jamming the links between the direct neighbor and indirect neighbor to provoke the traffic re-direction.</p>\n<aside class=\"quote no-group\" data-username=\"carla\" data-post=\"7\" data-topic=\"1147\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/carla/48/119_2.png\" class=\"avatar\"> carla:</div>\n<blockquote>\n<p>The graph below shows the attacker\u2019s reputation with the target node in a sink attack against a graph centered on the acinq node where the attacker bootstraps their reputation for 90 days before starting an attack. The target will forward endorsed payments to the attacker when the reputation delta is &gt; 0 and drop them otherwise.</p>\n</blockquote>\n</aside>\n<p>While for simulation reproducibility, one can go to collect <code>channel_announcement</code> signed by the acinq node pubkey, this is only for pub channel and it doesn\u2019t display the private chan, which by design are not announced on the gossip network.</p>\n<p>I think it\u2019s an interesting research question if there is bootstrapping asymmetries in the design of\nlocal ressource conservation that an attacker could exploit by spawning of a lot of spikes nodes to a high-\u201cpub-chan\u201d-density routing node to downgrade the incoming or outgoing reputation of a node.</p>\n<aside class=\"quote no-group\" data-username=\"carla\" data-post=\"7\" data-topic=\"1147\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/carla/48/119_2.png\" class=\"avatar\"> carla:</div>\n<blockquote>\n<p>Open to suggestions here if there\u2019s any particular scenario that you\u2019d like to see! Our current plan is to come up with some manufactured \u201cworst case\u201d topologies where the attacker is at a great advantage, with the reasoning that if the solution works there then it\u2019ll work in less ideal scenarios as well.</p>\n</blockquote>\n</aside>\n<p>If there is a repository somewhere for the traffic patterns samples that have been already run, that it\u2019s interesting for reproducibility. Alternatively the fuzz targets should be good enough as it\u2019s verbose to indicate what should be the traffic patterns yield.</p>\n<p>Apart of the pub-chan vs private-chan as pointed above, another \u201cworst case\u201d topologies scenario, where the attacker could have a great advantage, if its the attacker is \u201callowed\u201d to open links during the simulation or if the simulation is only considering a static chan graph.</p>\n<blockquote>\n<p>We began to look at outgoing reputation after the observation from <a class=\"mention\" href=\"/u/proofofkeags\">@ProofOfKeags</a> and &gt; <a class=\"mention\" href=\"/u/morehouse\">@morehouse</a> that a slow jamming attack requires a malicious downstream node, but not &gt; necessarily a malicious upstream node. Fast jamming attacks are perpetrated by upstream &gt; nodes, but we have unconditional fees to protect against this type of spam so perhaps we &gt; don\u2019t need to worry about incoming reputation.</p>\n</blockquote>\n<p>I think this is a correct observation that you do not necessarily need a malicious upstream node. Going even further in the world of lightning today, one could use invoice <code>r</code> routing hints to inject jamming in the graph, with neither upstream or downstream node at all (-- i believe there is an astucious trick here). Leveraging peerswap style flow both as traffic entries and exists can be an interesting point to study.</p>\n<aside class=\"quote no-group\" data-username=\"carla\" data-post=\"7\" data-topic=\"1147\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/carla/48/119_2.png\" class=\"avatar\"> carla:</div>\n<blockquote>\n<p>In a system with bi-directional reputation, we\u2019re able to enforce that both ends of the channel are compensated (either directly through the attacker\u2019s payments or transitively because they\u2019ll have to build up reputation on both ends). In the original example, <code>M0</code> will need to build incoming reputation with <code>T</code> in addition to <code>M1</code> building outgoing reputation with <code>T</code>\u2019s peers to achieve the same attack. We\u2019ve got some thoughts on how to address the UX drawbacks that come along with bidirectional reputation, but will share those in another post!</p>\n</blockquote>\n</aside>\n<p>I believe this is mostly correct, that you have to doubly compensate reputation-wise both incoming and outgoing links (or negatively downward their reputation) though I believe there might be a thorny case where both incoming and outgoing links are malicious and holding the resolution (i.e not signing commitment_signed on time) to break the transitivity. Somehow, I think the bi-directional reputation might have to be ticked by the same clock for a same HTLC transit, though still treaded in isolation for the viewpoint of the target node. I have not given more thoughts to it.</p>",
  "post_number": 9,
  "post_type": 1,
  "updated_at": "2025-02-20T21:18:23.878Z",
  "reply_count": 0,
  "reply_to_post_number": 7,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 6,
  "readers_count": 5,
  "score": 1.0,
  "yours": false,
  "topic_id": 1147,
  "topic_slug": "hybrid-jamming-mitigation-results-and-updates",
  "topic_title": "Hybrid Jamming Mitigation: Results and Updates",
  "topic_html_title": "Hybrid Jamming Mitigation: Results and Updates",
  "category_id": 7,
  "display_username": null,
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Topological Graphic of \"Sink\" attack, afaiu.\n\n```\n                                                                 ------------------------\n                                                                  |                      |\n                                                        ----------|  direct neighbor #1  |---------\n                                                        |         |______________________|        |\n                                                        |                                         |\n                                                        |         ------------------------        |\n                                                        |         |                      |        |\n                                                        |---------|  direct neighbor #2  |--------|\n                                                        |         |______________________|        |\n                                                        |                                         |\n                                ---------------         |         ------------------------        |\n                                |             |         |         |                      |        |\n                ----------------| target node |---------|---------|  direct neighbor #3  |--------|\n                |               |_____________|         |         |______________________|        |\n                |                                       |                                         |\n                |                                       |         ------------------------        |\n                |                                       |         |                      |        |\n                |                                       |---------|  direct neighbor #4  |--------|\n                |                                       |         |______________________|        |\n                |                                       |                                         |\n                |                                       |         ------------------------        |\n                |                                       |         |                      |        |\n                |                                       |---------|  direct nighbor #5   |--------|\n                |                                                 |______________________|        |\n                |                                                                                 |\n        -----------------                                                                         |\n        |               |                                                                         |\n        | attacker node |                                                                         |\n        |_______________|                                                                         |\n                |                                                                                 | \n                |                                                                                 |\n                |                                                                                 |\n                |                                                                                 |\n                |               ----------------------------                                      |\n                |               |                          |                                      |\n                |---------------| indirect neighbor * #15  |--------------------------------------|\n                                |__________________________|\n\n\n```\n\n[quote=\"carla, post:7, topic:1147\"]\nOur results were pretty consistent across simulation runs. As the attacker holds endorsed payments, their reputation drops and the target node will stop forwarding them endorsed payments. In all simulations the attacker loses its reputation with the target quickly, and the target\u2019s reputation does not drop below peacetime projections\n[/quote]\n\nAfaiu, a \"sink\" attack in the absence of outgoing reputation exploiting the lack of outgpoing reputation works in the following way, there is a target node A connected to a number of direct neighbor, which are themselves connected to a large indirect neighbor. A HTLC from a target node's direct neighbor at destination of an indirect neighbor is withheld for few hours during which there is no resolution.\n\nThe attacker node might already general jam the channel links between the target node's direct neighbor and the indirect neighbor to provoke the traffic re-direction from the target node's peers links to the \"destination\" large node to the attacker carried links.\n\nIn that simulation outline, still afaiu, the attacker should get a drop of the incoming reputation of the target node's peers links and hypothetically the target revenue has dropped below its revenue as time of no jam.\n\nWhat is not said in presenting the simulation results is if it is encompassing in the attack cost computation, the subsidiary cost of jamming the links between the direct neighbor and indirect neighbor to provoke the traffic re-direction.\n\n[quote=\"carla, post:7, topic:1147\"]\nThe graph below shows the attacker\u2019s reputation with the target node in a sink attack against a graph centered on the acinq node where the attacker bootstraps their reputation for 90 days before starting an attack. The target will forward endorsed payments to the attacker when the reputation delta is > 0 and drop them otherwise.\n[/quote]\n\nWhile for simulation reproducibility, one can go to collect `channel_announcement` signed by the acinq node pubkey, this is only for pub channel and it doesn't display the private chan, which by design are not announced on the gossip network.\n\nI think it's an interesting research question if there is bootstrapping asymmetries in the design of\nlocal ressource conservation that an attacker could exploit by spawning of a lot of spikes nodes to a high-\"pub-chan\"-density routing node to downgrade the incoming or outgoing reputation of a node.\n\n[quote=\"carla, post:7, topic:1147\"]\nOpen to suggestions here if there\u2019s any particular scenario that you\u2019d like to see! Our current plan is to come up with some manufactured \u201cworst case\u201d topologies where the attacker is at a great advantage, with the reasoning that if the solution works there then it\u2019ll work in less ideal scenarios as well.\n[/quote]\n\nIf there is a repository somewhere for the traffic patterns samples that have been already run, that it's interesting for reproducibility. Alternatively the fuzz targets should be good enough as it's verbose to indicate what should be the traffic patterns yield.\n\nApart of the pub-chan vs private-chan as pointed above, another \"worst case\" topologies scenario, where the attacker could have a great advantage, if its the attacker is \"allowed\" to open links during the simulation or if the simulation is only considering a static chan graph.\n\n> We began to look at outgoing reputation after the observation from @ProofOfKeags and > @morehouse that a slow jamming attack requires a malicious downstream node, but not > necessarily a malicious upstream node. Fast jamming attacks are perpetrated by upstream > nodes, but we have unconditional fees to protect against this type of spam so perhaps we > don\u2019t need to worry about incoming reputation.\n\nI think this is a correct observation that you do not necessarily need a malicious upstream node. Going even further in the world of lightning today, one could use invoice `r` routing hints to inject jamming in the graph, with neither upstream or downstream node at all (-- i believe there is an astucious trick here). Leveraging peerswap style flow both as traffic entries and exists can be an interesting point to study.\n\n[quote=\"carla, post:7, topic:1147\"]\nIn a system with bi-directional reputation, we\u2019re able to enforce that both ends of the channel are compensated (either directly through the attacker\u2019s payments or transitively because they\u2019ll have to build up reputation on both ends). In the original example, `M0` will need to build incoming reputation with `T` in addition to `M1` building outgoing reputation with `T`\u2019s peers to achieve the same attack. We\u2019ve got some thoughts on how to address the UX drawbacks that come along with bidirectional reputation, but will share those in another post!\n[/quote]\n\nI believe this is mostly correct, that you have to doubly compensate reputation-wise both incoming and outgoing links (or negatively downward their reputation) though I believe there might be a thorny case where both incoming and outgoing links are malicious and holding the resolution (i.e not signing commitment_signed on time) to break the transitivity. Somehow, I think the bi-directional reputation might have to be ticked by the same clock for a same HTLC transit, though still treaded in isolation for the viewpoint of the target node. I have not given more thoughts to it.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 660,
  "hidden": false,
  "trust_level": 0,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}