{
  "id": 4278,
  "name": "Anthony Towns",
  "username": "ajtowns",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/417_2.png",
  "created_at": "2025-02-11T10:02:17.483Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"sipa\" data-post=\"38\" data-topic=\"303\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/sipa/48/102_2.png\" class=\"avatar\"> sipa:</div>\n<blockquote>\n<p>I ran regression on its data set, and obtain runtimes that are approximated by <span class=\"math\">t = 0.00098 \\times n^{0.091} \\times m^{0.77}</span>.</p>\n</blockquote>\n</aside>\n<p>That just suggests the example problems being solved are effectively getting simpler as <span class=\"math\">n,m</span> increase, no?</p>\n<p>I haven\u2019t read the papers, but I\u2019m not following how you construct a network flow where solving a max flow / min cut gives you a subset of txs that maximises <span class=\"math\">f_C - \\lambda s_C</span> for a given <span class=\"math\">\\lambda</span>. The <a href=\"https://delvingbitcoin.org/t/how-to-linearize-your-cluster/303/15\">DeepSeek</a> approach seems like it could solve for a <span class=\"math\">C</span> that gives the largest feerate, by bisecting on different values for <span class=\"math\">\\lambda</span>, but that seems more like finding the breakpoints in order?</p>\n<p>If you have txs A at <span class=\"math\">f/s = 100/1</span>, B at 3980/50, C at 920/49 (with <span class=\"math\">\\lambda=5000/100=50</span>), and where C spends B and B spends A, what\u2019s the flow diagram that tells you the first/best breakpoint is AB vs C, rather than A vs BC?</p>",
  "post_number": 41,
  "post_type": 1,
  "updated_at": "2025-02-11T10:02:17.483Z",
  "reply_count": 0,
  "reply_to_post_number": 38,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 2,
  "readers_count": 1,
  "score": 0.2,
  "yours": false,
  "topic_id": 303,
  "topic_slug": "how-to-linearize-your-cluster",
  "topic_title": "How to linearize your cluster",
  "topic_html_title": "How to linearize your cluster",
  "category_id": 8,
  "display_username": "Anthony Towns",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"sipa, post:38, topic:303\"]\nI ran regression on its data set, and obtain runtimes that are approximated by $t = 0.00098 \\times n^{0.091} \\times m^{0.77}$.\n[/quote]\n\nThat just suggests the example problems being solved are effectively getting simpler as $n,m$ increase, no?\n\nI haven't read the papers, but I'm not following how you construct a network flow where solving a max flow / min cut gives you a subset of txs that maximises $f_C - \\lambda s_C$ for a given $\\lambda$. The [DeepSeek](https://delvingbitcoin.org/t/how-to-linearize-your-cluster/303/15) approach seems like it could solve for a $C$ that gives the largest feerate, by bisecting on different values for $\\lambda$, but that seems more like finding the breakpoints in order?\n\nIf you have txs A at $f/s = 100/1$, B at 3980/50, C at 920/49 (with $\\lambda=5000/100=50$), and where C spends B and B spends A, what's the flow diagram that tells you the first/best breakpoint is AB vs C, rather than A vs BC?",
  "actions_summary": [],
  "moderator": true,
  "admin": true,
  "staff": true,
  "user_id": 3,
  "hidden": false,
  "trust_level": 4,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}