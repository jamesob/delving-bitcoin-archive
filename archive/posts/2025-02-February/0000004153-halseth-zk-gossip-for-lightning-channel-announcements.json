{
  "id": 4153,
  "name": "Johan T. Halseth",
  "username": "halseth",
  "avatar_template": "/user_avatar/delvingbitcoin.org/halseth/{size}/198_2.png",
  "created_at": "2025-02-03T14:19:28.201Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"AdamISZ\" data-post=\"12\" data-topic=\"1407\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/adamisz/48/418_2.png\" class=\"avatar\"> AdamISZ:</div>\n<blockquote>\n<p><a class=\"mention\" href=\"/u/halseth\">@halseth</a> one more question, I don\u2019t immediately know whether your scheme enforces distinctness/uniqueness? Does it output something like a nullifier or key image such that you can\u2019t reuse the (channel or otherwise) utxo more than once?</p>\n</blockquote>\n</aside>\n<p>In this context (Musig2 for LN gossip) you should look at the <a href=\"https://github.com/halseth/output-zero/blob/15cfb6adcef11379c5601831a864e15fe09910dc/docs/musig2.md\" rel=\"noopener nofollow ugc\">musig2 branch</a> and the <a href=\"https://github.com/halseth/output-zero/blob/15cfb6adcef11379c5601831a864e15fe09910dc/docs/ln_gossip.md\" rel=\"noopener nofollow ugc\">LN gossip document</a> there.</p>\n<p>Here we enforce uniqueness by hashing the public keys before they are aggregated to a taproot key:</p>\n<pre><code class=\"lang-auto\">pk_hash = hash(bitcoin_keys[0] || bitcoin_keys[1])\n</code></pre>\n<p>These individual Musig2 public keys never go on-chain, so the idea is that no observer is able to link this hash with an on-chain output or spend.</p>",
  "post_number": 15,
  "post_type": 1,
  "updated_at": "2025-02-03T14:24:44.565Z",
  "reply_count": 0,
  "reply_to_post_number": 12,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 5,
  "readers_count": 4,
  "score": 1.0,
  "yours": false,
  "topic_id": 1407,
  "topic_slug": "zk-gossip-for-lightning-channel-announcements",
  "topic_title": "ZK-gossip for lightning channel announcements",
  "topic_html_title": "ZK-gossip for lightning channel announcements",
  "category_id": 7,
  "display_username": "Johan T. Halseth",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"AdamISZ, post:12, topic:1407\"]\n@halseth one more question, I don\u2019t immediately know whether your scheme enforces distinctness/uniqueness? Does it output something like a nullifier or key image such that you can\u2019t reuse the (channel or otherwise) utxo more than once?\n[/quote]\nIn this context (Musig2 for LN gossip) you should look at the [musig2 branch](https://github.com/halseth/output-zero/blob/15cfb6adcef11379c5601831a864e15fe09910dc/docs/musig2.md) and the [LN gossip document](https://github.com/halseth/output-zero/blob/15cfb6adcef11379c5601831a864e15fe09910dc/docs/ln_gossip.md) there.\n\nHere we enforce uniqueness by hashing the public keys before they are aggregated to a taproot key: \n\n```\npk_hash = hash(bitcoin_keys[0] || bitcoin_keys[1])\n```\n\nThese individual Musig2 public keys never go on-chain, so the idea is that no observer is able to link this hash with an on-chain output or spend.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 163,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": "Github link was replaced with a permanent link",
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}