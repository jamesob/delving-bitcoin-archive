{
  "id": 2349,
  "name": "Anthony Towns",
  "username": "ajtowns",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/417_2.png",
  "created_at": "2024-04-30T02:28:23.087Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"adiabat\" data-post=\"1\" data-topic=\"832\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/adiabat/48/532_2.png\" class=\"avatar\"> adiabat:</div>\n<blockquote>\n<p>What\u2019s nice is that private key holders A, B, and C can still interact to sign with the explodable key to send it somewhere else.</p>\n</blockquote>\n</aside>\n<p>Without being able to enforce a timeout on the exploding path, I don\u2019t think having a key path is very interesting? In adversarial scenarios you can\u2019t use it, because your adversary can just broadcast the exploding version; in non-adversarial scenarios you wait until feerates are load and use the key path to spend directly to wherever you want and don\u2019t need an exploding tx in the middle?</p>\n<p>I think you could extend this design to fix that, though, by making the commitment something like:</p>\n<pre data-code-wrap=\"raw\"><code class=\"lang-raw\">keyZ = H(nLockTime, nSequence, annex)*G\nkeyW = KeyAgg(keyA', keyB', keyC', keyZ)\n</code></pre>\n<p>with <code>nLockTime</code>, <code>nSequence</code> and <code>annex</code> pulled from the exploding spend. At that point, A,B,C have until the locktime/nseq expires to agree on and broadcast a key path spend, or after that time, they all just get their money back via the exploding tx. That would allow a one-shot payment pool, I think?</p>\n<p>I don\u2019t see a way to tweak the maths to allow you to have both an exploding spend path and a script spend path \u2013 I think in that case the exploding path would still need to reveal the script (hash), and at that point you might as well just use a script path in first place?</p>",
  "post_number": 2,
  "post_type": 1,
  "updated_at": "2024-04-30T02:28:23.087Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 10,
  "readers_count": 9,
  "score": 2.0,
  "yours": false,
  "topic_id": 832,
  "topic_slug": "exploding-keys-covenant-construction",
  "topic_title": "Exploding Keys - Covenant construction",
  "topic_html_title": "Exploding Keys - Covenant construction",
  "category_id": 7,
  "display_username": "Anthony Towns",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"adiabat, post:1, topic:832\"]\nWhat\u2019s nice is that private key holders A, B, and C can still interact to sign with the explodable key to send it somewhere else.\n[/quote]\n\nWithout being able to enforce a timeout on the exploding path, I don't think having a key path is very interesting? In adversarial scenarios you can't use it, because your adversary can just broadcast the exploding version; in non-adversarial scenarios you wait until feerates are load and use the key path to spend directly to wherever you want and don't need an exploding tx in the middle?\n\nI think you could extend this design to fix that, though, by making the commitment something like:\n\n```raw\nkeyZ = H(nLockTime, nSequence, annex)*G\nkeyW = KeyAgg(keyA', keyB', keyC', keyZ)\n```\n\nwith `nLockTime`, `nSequence` and `annex` pulled from the exploding spend. At that point, A,B,C have until the locktime/nseq expires to agree on and broadcast a key path spend, or after that time, they all just get their money back via the exploding tx. That would allow a one-shot payment pool, I think?\n\nI don't see a way to tweak the maths to allow you to have both an exploding spend path and a script spend path -- I think in that case the exploding path would still need to reveal the script (hash), and at that point you might as well just use a script path in first place?",
  "actions_summary": [],
  "moderator": true,
  "admin": true,
  "staff": true,
  "user_id": 3,
  "hidden": false,
  "trust_level": 4,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}