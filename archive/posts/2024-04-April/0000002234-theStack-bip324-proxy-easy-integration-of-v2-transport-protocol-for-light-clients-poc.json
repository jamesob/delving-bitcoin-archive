{
  "id": 2234,
  "name": "Sebastian Falbesoner",
  "username": "theStack",
  "avatar_template": "/user_avatar/delvingbitcoin.org/thestack/{size}/420_2.png",
  "created_at": "2024-04-15T17:12:42.714Z",
  "cooked": "<p><a class=\"mention\" href=\"/u/yonson\">@yonson</a>: That\u2019s very cool, thanks for working on that! I\u2019m looking forward to try it out later and do some manual testing with clients that I\u2019ve tried bip324-proxy with before (i.e. primarily nakamoto, neutrino, bcoin in SPV mode, and last but not least, Bitcoin Core). Also happy to hear that the project helps shaping the interface for the bip324 library.</p>\n<blockquote>\n<p>I am also going to be working on a threaded implementation since this has been a pretty useful exercise to help inform what type of interface we want our bip324 protocol library to expose. We have a bit more to clean up and iterate on there, but have generally adopted a \u201csans I/O\u201d approach to keep it runtime agnostic.</p>\n</blockquote>\n<p>Can you elaborate in what aspects the threaded implementation will differ from the current one? To my understanding, a thread is already spawned for each incoming v1 connection (otherwise, only one connection would be supported).</p>",
  "post_number": 12,
  "post_type": 1,
  "updated_at": "2024-04-15T17:12:42.714Z",
  "reply_count": 1,
  "reply_to_post_number": 11,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 9,
  "readers_count": 8,
  "score": 6.8,
  "yours": false,
  "topic_id": 678,
  "topic_slug": "bip324-proxy-easy-integration-of-v2-transport-protocol-for-light-clients-poc",
  "topic_title": "BIP324 Proxy: easy integration of v2 transport protocol for light clients (PoC)",
  "topic_html_title": "BIP324 Proxy: easy integration of v2 transport protocol for light clients (PoC)",
  "category_id": 8,
  "display_username": "Sebastian Falbesoner",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "username": "yonson",
    "name": "Nick Johnson",
    "avatar_template": "/user_avatar/delvingbitcoin.org/yonson/{size}/330_2.png"
  },
  "bookmarked": false,
  "raw": "@yonson: That's very cool, thanks for working on that! I'm looking forward to try it out later and do some manual testing with clients that I've tried bip324-proxy with before (i.e. primarily nakamoto, neutrino, bcoin in SPV mode, and last but not least, Bitcoin Core). Also happy to hear that the project helps shaping the interface for the bip324 library.\n\n> I am also going to be working on a threaded implementation since this has been a pretty useful exercise to help inform what type of interface we want our bip324 protocol library to expose. We have a bit more to clean up and iterate on there, but have generally adopted a \u201csans I/O\u201d approach to keep it runtime agnostic.\n\nCan you elaborate in what aspects the threaded implementation will differ from the current one? To my understanding, a thread is already spawned for each incoming v1 connection (otherwise, only one connection would be supported).",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 346,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}