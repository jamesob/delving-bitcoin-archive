{
  "id": 2235,
  "name": "Nick Johnson",
  "username": "yonson",
  "avatar_template": "/user_avatar/delvingbitcoin.org/yonson/{size}/330_2.png",
  "created_at": "2024-04-15T17:35:23.952Z",
  "cooked": "<blockquote>\n<p>Can you elaborate in what aspects the threaded implementation will differ from the current one? To my understanding, a thread is already spawned for each incoming v1 connection (otherwise, only one connection would be supported).</p>\n</blockquote>\n<p>Sure! The async implementation is <a href=\"https://tokio.rs/tokio/tutorial/spawning\" rel=\"noopener nofollow ugc\">\u201cspawning\u201d</a> new threads of work, but these are \u201cgreen threads\u201d not tied 1:1 with operating system threads.</p>\n<p>My use of \u201cthreaded implementation\u201d is a bit vague with all this concurrency talk, but I specifically mean an operating system thread implementation. The big benefit of this is that we could then code up standard library based wrappers which work against the std::io::Read/Write traits (these generally don\u2019t play nice in async-land). The cost of the OS thread impl simplicity is the standard heavy resource usage per connection.</p>",
  "post_number": 13,
  "post_type": 1,
  "updated_at": "2024-04-15T17:35:23.952Z",
  "reply_count": 0,
  "reply_to_post_number": 12,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 8,
  "readers_count": 7,
  "score": 1.6,
  "yours": false,
  "topic_id": 678,
  "topic_slug": "bip324-proxy-easy-integration-of-v2-transport-protocol-for-light-clients-poc",
  "topic_title": "BIP324 Proxy: easy integration of v2 transport protocol for light clients (PoC)",
  "topic_html_title": "BIP324 Proxy: easy integration of v2 transport protocol for light clients (PoC)",
  "category_id": 8,
  "display_username": "Nick Johnson",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "username": "theStack",
    "name": "Sebastian Falbesoner",
    "avatar_template": "/user_avatar/delvingbitcoin.org/thestack/{size}/420_2.png"
  },
  "bookmarked": false,
  "raw": "> Can you elaborate in what aspects the threaded implementation will differ from the current one? To my understanding, a thread is already spawned for each incoming v1 connection (otherwise, only one connection would be supported).\n\nSure! The async implementation is [\"spawning\"](https://tokio.rs/tokio/tutorial/spawning) new threads of work, but these are \"green threads\" not tied 1:1 with operating system threads.\n\nMy use of \"threaded implementation\" is a bit vague with all this concurrency talk, but I specifically mean an operating system thread implementation. The big benefit of this is that we could then code up standard library based wrappers which work against the std::io::Read/Write traits (these generally don't play nice in async-land). The cost of the OS thread impl simplicity is the standard heavy resource usage per connection.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 181,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}