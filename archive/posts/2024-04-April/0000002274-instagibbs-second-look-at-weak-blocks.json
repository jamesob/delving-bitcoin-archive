{
  "id": 2274,
  "name": "Gregory Sanders",
  "username": "instagibbs",
  "avatar_template": "/user_avatar/delvingbitcoin.org/instagibbs/{size}/28_2.png",
  "created_at": "2024-04-18T15:47:09.925Z",
  "cooked": "<p>Hi Bob!</p>\n<aside class=\"quote no-group\" data-username=\"mcelrath\" data-post=\"7\" data-topic=\"805\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/mcelrath/48/521_2.png\" class=\"avatar\"> mcelrath:</div>\n<blockquote>\n<p>As a means to synchronize the mempool in a fragmented mempool world, this does not (and cannot) accomplish that goal. When miners are taking fees out of band, they will not relay the txs they\u2019ve been paid for out of band, nor will they advertise them in weak blocks, as this allows other miners to snipe the fees they\u2019ve been paid out of band.</p>\n</blockquote>\n</aside>\n<p>Mempool synchronization was not the goal here, it\u2019s for improved relay. It\u2019s also (obviously) not a replacement for something that could incentivize the publishing of \u201chidden\u201d transactions.</p>\n<aside class=\"quote no-group\" data-username=\"mcelrath\" data-post=\"7\" data-topic=\"805\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/mcelrath/48/521_2.png\" class=\"avatar\"> mcelrath:</div>\n<blockquote>\n<p>This what Braidpool intends to accomplish.</p>\n</blockquote>\n</aside>\n<p>I\u2019d be interested in a discussion of braidpool in a different thread of course. I just am not making any claims to solve what braidpool is claiming to solve.</p>\n<aside class=\"quote no-group\" data-username=\"mcelrath\" data-post=\"7\" data-topic=\"805\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/mcelrath/48/521_2.png\" class=\"avatar\"> mcelrath:</div>\n<blockquote>\n<p>Another problem with this proposal is that it interferes with the \u201cfirst seen\u201d rule of the mempool. When constructing a block in the face of conflicting transactions, the mempool accepts the \u201cfirst seen\u201d of conflicting transactions. This is not censorship resistant broadcast, and weak blocks (alone) is also not censorship resistant. Putting a weak PoW on a blob of transactions alone does not give me any consensus on which txs came first, and timestamps can be manipulated. Seeing a weak block and retrieving txs in it does not give me a solution to resolve conflicting txs between two weak blocks.</p>\n</blockquote>\n</aside>\n<p>I\u2019m not sure what this is addressing. I suspect based on your linked writing you have additional requirements I\u2019m not attempting to include here, which is again, just a discussion about using PoW as a DoS-resistant cache to speed up propagation of blocks. I\u2019m not suggesting these be directly used to construct block templates or even necessarily effect a node\u2019s local mempool.</p>\n<p>Thanks for the links regardless, obviously braidpool is the more ambitious idea here with wider implications!</p>",
  "post_number": 8,
  "post_type": 1,
  "updated_at": "2024-04-18T15:47:09.925Z",
  "reply_count": 0,
  "reply_to_post_number": 7,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 1,
  "readers_count": 0,
  "score": 0,
  "yours": false,
  "topic_id": 805,
  "topic_slug": "second-look-at-weak-blocks",
  "topic_title": "Second Look at Weak Blocks",
  "topic_html_title": "Second Look at Weak Blocks",
  "category_id": 8,
  "display_username": "Gregory Sanders",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Hi Bob!\n\n[quote=\"mcelrath, post:7, topic:805\"]\nAs a means to synchronize the mempool in a fragmented mempool world, this does not (and cannot) accomplish that goal. When miners are taking fees out of band, they will not relay the txs they\u2019ve been paid for out of band, nor will they advertise them in weak blocks, as this allows other miners to snipe the fees they\u2019ve been paid out of band.\n[/quote]\n\nMempool synchronization was not the goal here, it's for improved relay. It's also (obviously) not a replacement for something that could incentivize the publishing of \"hidden\" transactions.\n\n[quote=\"mcelrath, post:7, topic:805\"]\nThis what Braidpool intends to accomplish.\n[/quote]\nI'd be interested in a discussion of braidpool in a different thread of course. I just am not making any claims to solve what braidpool is claiming to solve.\n\n[quote=\"mcelrath, post:7, topic:805\"]\nAnother problem with this proposal is that it interferes with the \u201cfirst seen\u201d rule of the mempool. When constructing a block in the face of conflicting transactions, the mempool accepts the \u201cfirst seen\u201d of conflicting transactions. This is not censorship resistant broadcast, and weak blocks (alone) is also not censorship resistant. Putting a weak PoW on a blob of transactions alone does not give me any consensus on which txs came first, and timestamps can be manipulated. Seeing a weak block and retrieving txs in it does not give me a solution to resolve conflicting txs between two weak blocks.\n[/quote]\n\nI'm not sure what this is addressing. I suspect based on your linked writing you have additional requirements I'm not attempting to include here, which is again, just a discussion about using PoW as a DoS-resistant cache to speed up propagation of blocks. I'm not suggesting these be directly used to construct block templates or even necessarily effect a node's local mempool.\n\nThanks for the links regardless, obviously braidpool is the more ambitious idea here with wider implications!",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 31,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}