{
  "id": 2131,
  "name": "jungly",
  "username": "jungly",
  "avatar_template": "/user_avatar/delvingbitcoin.org/jungly/{size}/289_2.png",
  "created_at": "2024-04-02T10:56:33.502Z",
  "cooked": "<p>That\u2019s really cool.</p>\n<p>I wonder if we can make such template using a declarative syntax. It depends on what the above example really wants to do, but maybe something like:</p>\n<pre><code class=\"lang-auto\">\"ADD 3.times('ADD ADD (counter from: 0, step: 42) (counter from: 42, step: 1)' ADD\"\n</code></pre>\n<p>In the above, the <code>times</code> generator tracks <code>i</code> and <code>j</code> and allows the developer to focus on what they want to do, without having to write imperative code.</p>\n<p>Could such a declarative syntax make it easier to write scripts for BitVM?</p>\n<p>I need to look at the constructs used in BitVM to be able to make a meaningful suggestion. Posting the above just to show an alternative example.</p>",
  "post_number": 9,
  "post_type": 1,
  "updated_at": "2024-04-02T10:56:33.502Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 2,
  "reads": 12,
  "readers_count": 11,
  "score": 12.2,
  "yours": false,
  "topic_id": 748,
  "topic_slug": "dsl-for-experimenting-with-contracts",
  "topic_title": "DSL for experimenting with contracts",
  "topic_html_title": "DSL for experimenting with contracts",
  "category_id": 8,
  "display_username": "jungly",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "That's really cool.\n\nI wonder if we can make such template using a declarative syntax. It depends on what the above example really wants to do, but maybe something like:\n\n```\n\"ADD 3.times('ADD ADD (counter from: 0, step: 42) (counter from: 42, step: 1)' ADD\"\n```\n\nIn the above, the `times` generator tracks `i` and `j` and allows the developer to focus on what they want to do, without having to write imperative code.\n\nCould such a declarative syntax make it easier to write scripts for BitVM?\n\nI need to look at the constructs used in BitVM to be able to make a meaningful suggestion. Posting the above just to show an alternative example.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 102,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}