{
  "id": 2207,
  "name": "",
  "username": "rijndael",
  "avatar_template": "/letter_avatar_proxy/v4/letter/r/8797f3/{size}.png",
  "created_at": "2024-04-11T22:18:11.109Z",
  "cooked": "<p>Excellent find! You\u2019re right: if we are using input/output ordering to implicitly check for where the covenant input/output is, but can\u2019t enforce it, we\u2019re gonna have a bad time.</p>\n<p>for this vault case specifically, one easy mitigation would be to require a signature check in addition to the rest of the script. OP_VAULT has the idea of a \u201ctrigger key\u201d. I think that\u2019s a feature that makes a lot of sense. There\u2019s not a great reason it\u2019s not included in this implementation, I just didn\u2019t do it. I\u2019ll add that to my todo list as well <img src=\"https://delvingbitcoin.org/images/emoji/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>Thinking more generally, we do cover the <a href=\"https://github.com/taproot-wizards/purrfect_vault/blob/ee7ee57ba9b5ed8fee7382334625bacbe27f8c36/src/vault/signature_building.rs#L266\" rel=\"noopener nofollow ugc\">index of the input</a> in our signature message (<a href=\"https://github.com/bitcoin/bips/blob/b3701faef2bdb98a0d7ace4eedbeefa2da4c89ed/bip-0341.mediawiki#common-signature-message\" rel=\"noopener nofollow ugc\">full spec in bip341</a>) so I think we could enforce that the covenant input is at index 0 (or whatever).</p>\n<p>On the dust, you are also right. I was seeing a lot of 546-value\u2019d outputs and just picked that as reasonable-dust.</p>",
  "post_number": 9,
  "post_type": 1,
  "updated_at": "2024-04-11T22:23:13.754Z",
  "reply_count": 1,
  "reply_to_post_number": 7,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 4,
  "readers_count": 3,
  "score": 5.8,
  "yours": false,
  "topic_id": 576,
  "topic_slug": "basic-vault-prototype-using-op-cat",
  "topic_title": "Basic vault prototype using OP_CAT",
  "topic_html_title": "Basic vault prototype using OP_CAT",
  "category_id": 7,
  "display_username": "",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "username": "dgpv",
    "name": "",
    "avatar_template": "/user_avatar/delvingbitcoin.org/dgpv/{size}/75_2.png"
  },
  "bookmarked": false,
  "raw": "Excellent find! You're right: if we are using input/output ordering to implicitly check for where the covenant input/output is, but can't enforce it, we're gonna have a bad time. \n\nfor this vault case specifically, one easy mitigation would be to require a signature check in addition to the rest of the script. OP_VAULT has the idea of a \"trigger key\". I think that's a feature that makes a lot of sense. There's not a great reason it's not included in this implementation, I just didn't do it. I'll add that to my todo list as well :slight_smile: \n\nThinking more generally, we do cover the [index of the input](https://github.com/taproot-wizards/purrfect_vault/blob/ee7ee57ba9b5ed8fee7382334625bacbe27f8c36/src/vault/signature_building.rs#L266) in our signature message ([full spec in bip341](https://github.com/bitcoin/bips/blob/b3701faef2bdb98a0d7ace4eedbeefa2da4c89ed/bip-0341.mediawiki#common-signature-message)) so I think we could enforce that the covenant input is at index 0 (or whatever). \n\n\nOn the dust, you are also right. I was seeing a lot of 546-value'd outputs and just picked that as reasonable-dust.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 288,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": "Github link was replaced with a permanent link",
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}