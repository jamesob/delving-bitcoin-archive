{
  "id": 2173,
  "name": "Antoine Poinsot",
  "username": "AntoineP",
  "avatar_template": "/user_avatar/delvingbitcoin.org/antoinep/{size}/483_2.png",
  "created_at": "2024-04-05T15:32:17.134Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"ajtowns\" data-post=\"7\" data-topic=\"710\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ajtowns/48/417_2.png\" class=\"avatar\"> ajtowns:</div>\n<blockquote>\n<p>I don\u2019t think that does reduce the worst case UTXO set growth?</p>\n</blockquote>\n</aside>\n<p>Indeed. It was a late (and not though-through) addition to the examples of things i don\u2019t think meet the bar to be \u201cfixed\u201d as part of this effort. Thanks for the correction, this all makes sense.</p>\n<aside class=\"quote no-group\" data-username=\"ajtowns\" data-post=\"7\" data-topic=\"710\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ajtowns/48/417_2.png\" class=\"avatar\"> ajtowns:</div>\n<blockquote>\n<p>moves validation cost to where validation actually occurs</p>\n</blockquote>\n</aside>\n<p>Yes. With regard to validation costs i think we should instead make sigops of prevouts with bare scripts count toward the budget of the block it\u2019s spent in. It\u2019d make them be counted twice but:</p>\n<ul>\n<li>we can\u2019t \u201cuncount\u201d the ones at creation time without a hard fork;</li>\n<li>better to double count them than to not count them at all where it matters;</li>\n<li>it should not affect any real world usage.</li>\n</ul>\n<p>If we are worried about the last point we could, as you suggested to me elsewhere, discount 3 sigops per prevout to account for the current standard usage. But i don\u2019t think it\u2019s necessary, the size limit is hit before the sigop limit for any non-pathological use of legacy (or any) script. (From some napkin maths the less pathological legacy transaction which would hit the sigop limit is a (&gt;773 kB) transaction which spends at least 6667 1-of-3 bare multisigs to a p2sh output.)</p>\n<aside class=\"quote no-group\" data-username=\"ajtowns\" data-post=\"8\" data-topic=\"710\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ajtowns/48/417_2.png\" class=\"avatar\"> ajtowns:</div>\n<blockquote>\n<p>This insecure use of SIGHASH_SINGLE is useful</p>\n</blockquote>\n</aside>\n<p>Yes, it also seems worthless to fix on its own. The author didn\u2019t take the time to suggest a \u201cfix\u201d, but changing this behaviour (besides just disabling it) would be a hard fork. The obvious backward compatible alternative is to have a new script version application developers can opt in to use. Good news: it exists, it\u2019s Taproot. Furthermore i don\u2019t think anybody reported having an issue with this since it was first discussed more than a decade ago. In fact it is so much not worth fixing that even Segwit v0 <a href=\"https://github.com/bitcoin/bips/blob/b3701faef2bdb98a0d7ace4eedbeefa2da4c89ed/bip-0143.mediawiki#cite_note-7\">explicitly did not</a>.</p>\n<aside class=\"quote no-group\" data-username=\"recent798\" data-post=\"11\" data-topic=\"710\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/r/ecd19e/48.png\" class=\"avatar\"> recent798:</div>\n<blockquote>\n<p>How many of those coinbase outputs are spent along with another coinbase output that stems from a coinbase transaction that can not be duplicated? If all are spent in this fashion, then a future soft fork may not be needed?</p>\n</blockquote>\n</aside>\n<p>I did not check how each of these 189,023 transactions were spent. Indeed if we are really sure all of the BIP34 exceptions have been spent in this fashion, and buried under an amount of work deemed sufficient, then we could get rid of the BIP30 validation without mandating the block height in <code>nLockTime</code> (or the witness commitment).</p>\n<p>Still i would argue:</p>\n<ol>\n<li>This analysis is tedious, error-prone and difficult to peer-review;</li>\n<li>Making absolutely sure txids are unique seems like a good property to have in Bitcoin. And making it so comes at very little cost as this rule would only take effect in 21 years (much more than the current lifetime of Bitcoin).</li>\n</ol>\n<aside class=\"quote no-group\" data-username=\"recent798\" data-post=\"11\" data-topic=\"710\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/r/ecd19e/48.png\" class=\"avatar\"> recent798:</div>\n<blockquote>\n<p>The code comment in the reference also mentions that a soft-fork may be preferred, which \u201c<em>retroactively</em> prevents block [\u2026] from creating a duplicate coinbase\u201d.</p>\n</blockquote>\n</aside>\n<p>A check that the coinbase transaction at block 490,897 can never be <code>bec6606bb10f77f5f0395cc86d0489fbef70c0615b177a326612d8bd7b84f84d</code> could be hardcoded in the client, but i think if there is a reorg this deep we have bigger problems anyways.</p>",
  "post_number": 12,
  "post_type": 1,
  "posts_count": 85,
  "updated_at": "2024-04-05T15:37:24.826Z",
  "reply_count": 2,
  "reply_to_post_number": null,
  "quote_count": 3,
  "incoming_link_count": 4,
  "reads": 102,
  "readers_count": 101,
  "score": 50.4,
  "yours": false,
  "topic_id": 710,
  "topic_slug": "great-consensus-cleanup-revival",
  "topic_title": "Great Consensus Cleanup Revival",
  "topic_html_title": "Great Consensus Cleanup Revival",
  "category_id": 7,
  "display_username": "Antoine Poinsot",
  "primary_group_name": null,
  "flair_name": "wg-consensus-cleanup",
  "flair_url": "/uploads/default/original/1X/856d779f9ec58484f3a96285a21a813538b689f6.png",
  "flair_bg_color": "",
  "flair_color": "",
  "flair_group_id": 43,
  "badges_granted": [],
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": "Regular",
  "title_is_group": false,
  "bookmarked": false,
  "raw": "[quote=\"ajtowns, post:7, topic:710\"]\nI don\u2019t think that does reduce the worst case UTXO set growth?\n[/quote]\n\nIndeed. It was a late (and not though-through) addition to the examples of things i don't think meet the bar to be \"fixed\" as part of this effort. Thanks for the correction, this all makes sense.\n\n[quote=\"ajtowns, post:7, topic:710\"]\nmoves validation cost to where validation actually occurs\n[/quote]\n\nYes. With regard to validation costs i think we should instead make sigops of prevouts with bare scripts count toward the budget of the block it's spent in. It'd make them be counted twice but:\n- we can't \"uncount\" the ones at creation time without a hard fork;\n- better to double count them than to not count them at all where it matters;\n- it should not affect any real world usage.\n\nIf we are worried about the last point we could, as you suggested to me elsewhere, discount 3 sigops per prevout to account for the current standard usage. But i don't think it's necessary, the size limit is hit before the sigop limit for any non-pathological use of legacy (or any) script. (From some napkin maths the less pathological legacy transaction which would hit the sigop limit is a (>773 kB) transaction which spends at least 6667 1-of-3 bare multisigs to a p2sh output.)\n\n[quote=\"ajtowns, post:8, topic:710\"]\nThis insecure use of SIGHASH_SINGLE is useful\n[/quote]\n\nYes, it also seems worthless to fix on its own. The author didn't take the time to suggest a \"fix\", but changing this behaviour (besides just disabling it) would be a hard fork. The obvious backward compatible alternative is to have a new script version application developers can opt in to use. Good news: it exists, it's Taproot. Furthermore i don't think anybody reported having an issue with this since it was first discussed more than a decade ago. In fact it is so much not worth fixing that even Segwit v0 [explicitly did not](https://github.com/bitcoin/bips/blob/b3701faef2bdb98a0d7ace4eedbeefa2da4c89ed/bip-0143.mediawiki#cite_note-7).\n\n[quote=\"recent798, post:11, topic:710\"]\nHow many of those coinbase outputs are spent along with another coinbase output that stems from a coinbase transaction that can not be duplicated? If all are spent in this fashion, then a future soft fork may not be needed?\n[/quote]\n\nI did not check how each of these 189,023 transactions were spent. Indeed if we are really sure all of the BIP34 exceptions have been spent in this fashion, and buried under an amount of work deemed sufficient, then we could get rid of the BIP30 validation without mandating the block height in `nLockTime` (or the witness commitment).\n\nStill i would argue:\n1. This analysis is tedious, error-prone and difficult to peer-review;\n2. Making absolutely sure txids are unique seems like a good property to have in Bitcoin. And making it so comes at very little cost as this rule would only take effect in 21 years (much more than the current lifetime of Bitcoin).\n\n[quote=\"recent798, post:11, topic:710\"]\nThe code comment in the reference also mentions that a soft-fork may be preferred, which \u201c*retroactively* prevents block [\u2026] from creating a duplicate coinbase\u201d.\n[/quote]\n\nA check that the coinbase transaction at block 490,897 can never be `bec6606bb10f77f5f0395cc86d0489fbef70c0615b177a326612d8bd7b84f84d` could be hardcoded in the client, but i think if there is a reorg this deep we have bigger problems anyways.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 12,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": "Github link was replaced with a permanent link",
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Indeed. It was a late (and not though-through) addition to the examples of things i don\u2019t think meet the bar to be \u201cfixed\u201d as part of this effort. Thanks for the correction, this all makes sense. \n\nYes. With regard to validation costs i think we should instead make sigops of prevouts with bare scri&hellip;",
  "truncated": true,
  "post_url": "/t/great-consensus-cleanup-revival/710/12",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}