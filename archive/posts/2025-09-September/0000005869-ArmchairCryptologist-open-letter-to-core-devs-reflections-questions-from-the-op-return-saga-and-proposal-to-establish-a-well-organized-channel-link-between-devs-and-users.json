{
  "id": 5869,
  "name": null,
  "username": "ArmchairCryptologist",
  "avatar_template": "/letter_avatar_proxy/v4/letter/a/8e8cbc/{size}.png",
  "created_at": "2025-09-14T18:41:01.618Z",
  "cooked": "<p>Not a Core developer, but FWIW; the fundamental reason for some recent changes like OP_RETURN, full-RBF and minrelaytxfee is that a limitation that does not stop people from doing what it is intended to limit, and that encourages them to instead do it in a way that is actively worse or degrades the network, is a bad limitation.</p>\n<p>Keeping the OP_RETURN limit does not prevent people from storing data on the blockchain, since they were already doing so via ordinals etc. For smallish amounts of data, letting people store it in an OP_RETURN instead of abusing witness data is beneficial to both the sender and the network since it does not require an additional chained transaction to \u201creveal\u201d this data. And there is simply no good reason to increase the datacarriersize to a higher but still arbitrary value, instead of just having it limited by the max transaction size.</p>\n<p>Furthermore, node mempool policy that does not match miner mempool policy create a mismatch between the node mempools and the blocks that are being mined, which breaks compact blocks and makes block propagation (very) significantly slower. Nodes enforcing the RBF flag do not prevent miners from running full-RBF. Nodes enforcing a minrelaytxfee of 1 sat/vB do not prevent miners from accepting transactions paying less. And nodes enforcing a lower OP_RETURN datacarriersize do not prevent miners from mining blocks with larger limits. Most miners were doing at least one if not all of those things.</p>\n<p>In general, for open source projects, organizing communication from a loose connection of volunteer developers tends to be difficult, and whatever communication there is tends to get lost in the noise. But if you are sufficiently interested in the technical aspects of Bitcoin, there are many mailing lists and other forums you can subscribe to that would have thoroughly informed you of the rationales for these changes, not to mention the Github itself. The devs have better things to do than sit on Reddit and X all day long and argue with people who are already convinced they are right and who won\u2019t listen to reason.</p>\n<p>And to address one of your claims;</p>\n<blockquote>\n<p>this is shown by the fact that today 24% of the nodes run Knots (from less than 1% 4 months ago).</p>\n</blockquote>\n<p>According to BitNodes, of the ~7100 nodes with \u201cKnots\u201d in the subver, ~6100 are on tor. Seeing as you can make an unlimited number of onion addresses and map them to a single node, most of these are likely fake.</p>\n<p>There seem to be about 800 Knots nodes on IPv4, of a total of 6658, and it\u2019s hard to say how many of these were previously running Core and how many were deployed as new nodes to make the number larger. But seeing as about half of the Knots nodes are running a version that was released only 11 days ago, my money are on a good number of these being run by one or a mere handful of individuals.</p>",
  "post_number": 2,
  "post_type": 1,
  "posts_count": 2,
  "updated_at": "2025-09-14T18:41:16.599Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 5,
  "readers_count": 4,
  "score": 0.8,
  "yours": false,
  "topic_id": 1982,
  "topic_slug": "open-letter-to-core-devs-reflections-questions-from-the-op-return-saga-and-proposal-to-establish-a-well-organized-channel-link-between-devs-and-users",
  "topic_title": "Open letter to core devs (reflections/questions from the op_return saga and proposal to establish a well-organized channel/link between devs and users)",
  "topic_html_title": "Open letter to core devs (reflections/questions from the op_return saga and proposal to establish a well-organized channel/link between devs and users)",
  "category_id": 5,
  "display_username": null,
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Not a Core developer, but FWIW; the fundamental reason for some recent changes like OP_RETURN, full-RBF and minrelaytxfee is that a limitation that does not stop people from doing what it is intended to limit, and that encourages them to instead do it in a way that is actively worse or degrades the network, is a bad limitation.\n\nKeeping the OP_RETURN limit does not prevent people from storing data on the blockchain, since they were already doing so via ordinals etc. For smallish amounts of data, letting people store it in an OP_RETURN instead of abusing witness data is beneficial to both the sender and the network since it does not require an additional chained transaction to \u201creveal\u201d this data. And there is simply no good reason to increase the datacarriersize to a higher but still arbitrary value, instead of just having it limited by the max transaction size.\n\nFurthermore, node mempool policy that does not match miner mempool policy create a mismatch between the node mempools and the blocks that are being mined, which breaks compact blocks and makes block propagation (very) significantly slower. Nodes enforcing the RBF flag do not prevent miners from running full-RBF. Nodes enforcing a minrelaytxfee of 1 sat/vB do not prevent miners from accepting transactions paying less. And nodes enforcing a lower OP_RETURN datacarriersize do not prevent miners from mining blocks with larger limits. Most miners were doing at least one if not all of those things.\n\nIn general, for open source projects, organizing communication from a loose connection of volunteer developers tends to be difficult, and whatever communication there is tends to get lost in the noise. But if you are sufficiently interested in the technical aspects of Bitcoin, there are many mailing lists and other forums you can subscribe to that would have thoroughly informed you of the rationales for these changes, not to mention the Github itself. The devs have better things to do than sit on Reddit and X all day long and argue with people who are already convinced they are right and who won\u2019t listen to reason.\n\nAnd to address one of your claims;\n\n> this is shown by the fact that today 24% of the nodes run Knots (from less than 1% 4 months ago).\n\nAccording to BitNodes, of the \\~7100 nodes with \u201cKnots\u201d in the subver, \\~6100 are on tor. Seeing as you can make an unlimited number of onion addresses and map them to a single node, most of these are likely fake.\n\nThere seem to be about 800 Knots nodes on IPv4, of a total of 6658, and it\u2019s hard to say how many of these were previously running Core and how many were deployed as new nodes to make the number larger. But seeing as about half of the Knots nodes are running a version that was released only 11 days ago, my money are on a good number of these being run by one or a mere handful of individuals.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 888,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Not a Core developer, but FWIW; the fundamental reason for some recent changes like OP_RETURN, full-RBF and minrelaytxfee is that a limitation that does not stop people from doing what it is intended to limit, and that encourages them to instead do it in a way that is actively worse or degrades the &hellip;",
  "truncated": true,
  "post_url": "/t/open-letter-to-core-devs-reflections-questions-from-the-op-return-saga-and-proposal-to-establish-a-well-organized-channel-link-between-devs-and-users/1982/2",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}