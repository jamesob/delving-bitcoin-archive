{
  "id": 5949,
  "name": "ZmnSCPxj jxPCSnmZ",
  "username": "ZmnSCPxj",
  "avatar_template": "/letter_avatar_proxy/v4/letter/z/ee7513/{size}.png",
  "created_at": "2025-09-22T14:50:02.329Z",
  "cooked": "<p>My understanding is that trampoline would have to select one of the LSPs, though? The key part of the MultiPTLC is that it is offered to all the LSPs, not just one of them, and the LSPs can then compete to route to the receiver.  This competition is done via a modified RAFT algorithm, where the random timeout involved in leader selection is implemented using proof-of-work (there being no other proof possible in a relativistic universe where \u201cglobal event ordering\u201d is meaningless), and LSPs can only run for leadership if they can present a proof that the receiver is requesting the receiver-can-pay scalar from them.</p>\n<p>On the other hand, see: <a href=\"https://delvingbitcoin.org/t/a-decker-wattenhofer-multichannel-for-reduced-inter-lsp-trust/1994#p-5910-ursula-to-lsp-payment-hop-7\" class=\"inline-onebox\">A Decker-Wattenhofer MultiChannel For Reduced Inter-LSP Trust</a>\nIn the linked section, I pointed out that Spilman channels are <em><strong>truly</strong></em> unidirectional. meaning a failed HTLC <em><strong>cannot</strong></em> be returned to the sender; we need to update state at the decrementing-<code>nSequence</code> layer to remove the failed HTLC. Thus, my proposal is to simply have the LSPs do probing <em><strong>first</strong></em>, then show the results of probing to the user Ursula, who can then dedicate the HTLC to a <em><strong>single</strong></em> LSP, with a good chance that the HTLC will neither fail nor get stuck.  Since this is a single hop anyway, I think there is no real need for the forwarding to use trampoline in that case?</p>",
  "post_number": 10,
  "post_type": 1,
  "posts_count": 10,
  "updated_at": "2025-09-22T14:50:02.329Z",
  "reply_count": 0,
  "reply_to_post_number": 9,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 2,
  "readers_count": 1,
  "score": 0.2,
  "yours": false,
  "topic_id": 1983,
  "topic_slug": "multichannel-and-multiptlc-towards-a-global-high-availability-consistent-partition-tolerant-database-for-bitcoin-payments",
  "topic_title": "MultiChannel and MultiPTLC: Towards A Global High-Availability Consistent/Partition-Tolerant Database For Bitcoin Payments",
  "topic_html_title": "MultiChannel and MultiPTLC: Towards A Global High-Availability Consistent/Partition-Tolerant Database For Bitcoin Payments",
  "category_id": 7,
  "display_username": "ZmnSCPxj jxPCSnmZ",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "id": 101,
    "username": "t-bast",
    "name": "Bastien Teinturier",
    "avatar_template": "/user_avatar/delvingbitcoin.org/t-bast/{size}/98_2.png"
  },
  "bookmarked": false,
  "raw": "My understanding is that trampoline would have to select one of the LSPs, though? The key part of the MultiPTLC is that it is offered to all the LSPs, not just one of them, and the LSPs can then compete to route to the receiver.  This competition is done via a modified RAFT algorithm, where the random timeout involved in leader selection is implemented using proof-of-work (there being no other proof possible in a relativistic universe where \u201cglobal event ordering\u201d is meaningless), and LSPs can only run for leadership if they can present a proof that the receiver is requesting the receiver-can-pay scalar from them.\n\nOn the other hand, see: https://delvingbitcoin.org/t/a-decker-wattenhofer-multichannel-for-reduced-inter-lsp-trust/1994#p-5910-ursula-to-lsp-payment-hop-7\nIn the linked section, I pointed out that Spilman channels are ***truly*** unidirectional. meaning a failed HTLC ***cannot*** be returned to the sender; we need to update state at the decrementing-`nSequence` layer to remove the failed HTLC. Thus, my proposal is to simply have the LSPs do probing ***first***, then show the results of probing to the user Ursula, who can then dedicate the HTLC to a ***single*** LSP, with a good chance that the HTLC will neither fail nor get stuck.  Since this is a single hop anyway, I think there is no real need for the forwarding to use trampoline in that case?",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 104,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "My understanding is that trampoline would have to select one of the LSPs, though? The key part of the MultiPTLC is that it is offered to all the LSPs, not just one of them, and the LSPs can then compete to route to the receiver.  This competition is done via a modified RAFT algorithm, where the rand&hellip;",
  "truncated": true,
  "post_url": "/t/multichannel-and-multiptlc-towards-a-global-high-availability-consistent-partition-tolerant-database-for-bitcoin-payments/1983/10",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}