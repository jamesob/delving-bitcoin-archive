{
  "id": 5947,
  "name": null,
  "username": "aqua",
  "avatar_template": "/letter_avatar_proxy/v4/letter/a/b9bd4f/{size}.png",
  "created_at": "2025-09-22T06:30:52.347Z",
  "cooked": "<p>Need someone to tell if anything wrong with my understanding and fill the gaps</p>\n<p>I want to send 1 BTC from <strong>Alice</strong> to <strong>Bob</strong> using Lightning, <strong>Alice</strong> does not have a direct channel with <strong>Bob</strong>. In practice me (<strong>Alice</strong>) need to open ANY channel to LN in Electrum first, then pay <strong>Bob</strong>\u2019s invoice. Electrum requires to fund an entry channel to LN with I suppose <strong>ACINQ</strong> node by default. <strong>ACINQ node</strong> is also a <em>Trampoline Node</em> which has full map of LN nodes, so routing is done on <strong>ACINQ</strong> side and the node takes additional fee for that. Technically routing is done by applying <em>Dijkstra\u2019s algorithm</em> to all open channels of the network. I\u2019ve opened a channel with <strong>ACINQ</strong>, funded it, now I\u2019m, we can say, \u201cconnected to LN\u201d like a mesh-network.</p>\n<p>After <strong>Alice</strong> put LN invoice from <strong>Bob</strong> to Electrum and pressed \u201csend\u201d, the following happens - Electrum generates and signs a contract between <strong>Alice</strong> and <strong>ACINQ</strong>, which transfers <strong>1 BTC</strong> to <strong>ACINQ</strong> once invoice is paid by someone(!). <strong>ACINQ node,</strong> which is Trampoline Node, chooses full path <strong>P0</strong> via Dijkstra\u2019s: <em>Alice \u2192 ACINQ \u2192 N1 \u2192 N2 \u2192 \u2026 \u2192 Bob</em> and generates the same contract with the next node <strong>N1</strong>, <strong>N1</strong> does the same with <strong>N2</strong> and so on. Since <strong>ACINQ, N1, N2, \u2026</strong> are all interconnected, they negotiate the full chain <strong>P0</strong> as follows: <strong>N1</strong> signs its part of a contract and sends it to <strong>N2</strong>, if <strong>N2</strong> agrees to route, <strong>N2</strong> sends to <strong>N1</strong> back its own part of the contract. As I understand, <strong>Alice</strong> (<strong>ACINQ</strong> in case of delegating this to Trampoline Nodes) decides the full path LN transaction, which means that <strong>N1</strong> will have to negotiate contract with <strong>N2</strong> and not(!) <strong>N123</strong>, even if that path <strong>P2</strong> is possible too.</p>\n<h3><a name=\"p-5947-questions-1\" class=\"anchor\" href=\"#p-5947-questions-1\"></a>QUESTIONS</h3>\n<ol>\n<li>Is everything above correct?</li>\n<li>Is it possible that <strong>ACINQ node</strong> will deny to open a channel with me? For instance, for AML reasons</li>\n<li>Could interim nodes do the same when <strong>P0</strong> is negotiated? And do they on practice? e.g. <strong>N1</strong> thinks that <strong>N2</strong> has high AML risk and evades to participate in routing</li>\n<li>Does sender enforce its routing path <strong>P0</strong> (mandatory) or <strong>N1</strong> can on its own choose a channel to route <strong>Alice</strong>\u2019s payment from <strong>ACINQ,</strong> i.e. <strong>N123</strong> instead of <strong>N2</strong>? How technically these things are done? Couldn\u2019t google anything easy to understand on routing algo but read that <strong>Alice</strong> / <strong>ACINQ</strong> do know(!) the full route, same as in Tor onion layering</li>\n<li>What exactly the capacity term means in LN, i.e. <strong>ACINQ</strong> has ~424 BTC capacity - is it a sum of all opened channels? How can I evaluate it to something more practically meaningful, e.g. here capacity of ~424 BTC means sending 50 BTC has a chance of 30% to find a route to <strong>Bob</strong> who is connected only to <strong>Binance</strong> node. What is inbound / outbound efficiency?</li>\n<li>Why some huge nodes are marked as hard to reach despite them being top 5 capacity? i.e. nicehash and Kraken nodes on <a href=\"https://terminal.lightning.engineering/\" rel=\"noopener nofollow ugc\">https://terminal.lightning.engineering/</a> why is that? Nicehash has the channel with okx, so it should be basically reachable from everywhere</li>\n<li>If <strong>Alice</strong> entry channel to LN has e.g. 0.1 BTC capacity and <strong>Bob</strong> has a channel of 50 BTC will it be possible to send 50 BTC to <strong>Bob</strong> in practice? Capacity of 50 BTC doesn\u2019t guarantee that there will be a route summing up exactly to 50 BTC. I visualize it as a network of paired pipes, P1\u2192P2 and P2\u2192P1 where P is just an address/wallet. When sending from <strong>Alice</strong> to <strong>Bob</strong> we care only about the amount that all \u201cpipes\u201d of the network can send in <strong>Bob</strong>\u2019s direction but how to calculate that? It\u2019s exponentially hard, there is 20k channels open in LN, it seems impossible to find all route permutations. Maybe from those 50 BTC, 40 will be possible to route if given enough time calculating path, may be only 5</li>\n<li>Is it better to send huge sum in small chunks or it doesn\u2019t matter? Does Dijsktra\u2019s in Electrum handle chunking automatically? e.g. sending 50 BTC but there is no channels with comparable capacity to send it with 2 intermediaries 25 BTC each, so the amount is split to multiple 0.01 BTC chunks and send with 5000 interim channels which almost guarantees the sum will go through</li>\n<li>Closure related to questions 5 and 7: what are the real constraints I must consider when using LN regularly for B2B on a technical level? Let\u2019s say I\u2019m running an exchange and there can be a wide range of amounts sent from native Bitcoin network to LN, from 0.1 BTC to over 1000 BTC. I want to know a priori if swap even possible, what\u2019s the minimum entry channel capacity should be, what fees I\u2019ll incur, what time it will take</li>\n</ol>\n<p>There is definitely a mess in the questions especially in 5 and 7, I couldn\u2019t formulate them in more accessible manner but hope you guys got the idea of what I\u2019m asking about. Any help is appreciated.</p>",
  "post_number": 1,
  "post_type": 1,
  "posts_count": 1,
  "updated_at": "2025-09-22T13:20:14.767Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 14,
  "readers_count": 13,
  "score": 2.6,
  "yours": false,
  "topic_id": 2003,
  "topic_slug": "ln-routing-and-caveats",
  "topic_title": "LN routing and caveats",
  "topic_html_title": "LN routing and caveats",
  "category_id": 8,
  "display_username": null,
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 3,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Need someone to tell if anything wrong with my understanding and fill the gaps\n\nI want to send 1 BTC from **Alice** to **Bob** using Lightning, **Alice** does not have a direct channel with **Bob**. In practice me (**Alice**) need to open ANY channel to LN in Electrum first, then pay **Bob**\u2019s invoice. Electrum requires to fund an entry channel to LN with I suppose **ACINQ** node by default. **ACINQ node** is also a *Trampoline Node* which has full map of LN nodes, so routing is done on **ACINQ** side and the node takes additional fee for that. Technically routing is done by applying *Dijkstra\u2019s algorithm* to all open channels of the network. I\u2019ve opened a channel with **ACINQ**, funded it, now I\u2019m, we can say, \u201cconnected to LN\u201d like a mesh-network.\n\nAfter **Alice** put LN invoice from **Bob** to Electrum and pressed \u201csend\u201d, the following happens - Electrum generates and signs a contract between **Alice** and **ACINQ**, which transfers **1 BTC** to **ACINQ** once invoice is paid by someone(!). **ACINQ node,** which is Trampoline Node, chooses full path **P0** via Dijkstra\u2019s: *Alice \u2192 ACINQ \u2192 N1 \u2192 N2 \u2192 \u2026 \u2192 Bob* and generates the same contract with the next node **N1**, **N1** does the same with **N2** and so on. Since **ACINQ, N1, N2, \u2026** are all interconnected, they negotiate the full chain **P0** as follows: **N1** signs its part of a contract and sends it to **N2**, if **N2** agrees to route, **N2** sends to **N1** back its own part of the contract. As I understand, **Alice** (**ACINQ** in case of delegating this to Trampoline Nodes) decides the full path LN transaction, which means that **N1** will have to negotiate contract with **N2** and not(!) **N123**, even if that path **P2** is possible too.\n\n### QUESTIONS\n\n1. Is everything above correct?\n2. Is it possible that **ACINQ node** will deny to open a channel with me? For instance, for AML reasons\n3. Could interim nodes do the same when **P0** is negotiated? And do they on practice? e.g. **N1** thinks that **N2** has high AML risk and evades to participate in routing\n4. Does sender enforce its routing path **P0** (mandatory) or **N1** can on its own choose a channel to route **Alice**\u2019s payment from **ACINQ,** i.e. **N123** instead of **N2**? How technically these things are done? Couldn\u2019t google anything easy to understand on routing algo but read that **Alice** / **ACINQ** do know(!) the full route, same as in Tor onion layering\n5. What exactly the capacity term means in LN, i.e. **ACINQ** has \\~424 BTC capacity - is it a sum of all opened channels? How can I evaluate it to something more practically meaningful, e.g. here capacity of \\~424 BTC means sending 50 BTC has a chance of 30% to find a route to **Bob** who is connected only to **Binance** node. What is inbound / outbound efficiency?\n6. Why some huge nodes are marked as hard to reach despite them being top 5 capacity? i.e. nicehash and Kraken nodes on https://terminal.lightning.engineering/ why is that? Nicehash has the channel with okx, so it should be basically reachable from everywhere\n7. If **Alice** entry channel to LN has e.g. 0.1 BTC capacity and **Bob** has a channel of 50 BTC will it be possible to send 50 BTC to **Bob** in practice? Capacity of 50 BTC doesn\u2019t guarantee that there will be a route summing up exactly to 50 BTC. I visualize it as a network of paired pipes, P1\u2192P2 and P2\u2192P1 where P is just an address/wallet. When sending from **Alice** to **Bob** we care only about the amount that all \u201cpipes\u201d of the network can send in **Bob**\u2019s direction but how to calculate that? It\u2019s exponentially hard, there is 20k channels open in LN, it seems impossible to find all route permutations. Maybe from those 50 BTC, 40 will be possible to route if given enough time calculating path, may be only 5\n8. Is it better to send huge sum in small chunks or it doesn\u2019t matter? Does Dijsktra\u2019s in Electrum handle chunking automatically? e.g. sending 50 BTC but there is no channels with comparable capacity to send it with 2 intermediaries 25 BTC each, so the amount is split to multiple 0.01 BTC chunks and send with 5000 interim channels which almost guarantees the sum will go through\n9. Closure related to questions 5 and 7: what are the real constraints I must consider when using LN regularly for B2B on a technical level? Let\u2019s say I\u2019m running an exchange and there can be a wide range of amounts sent from native Bitcoin network to LN, from 0.1 BTC to over 1000 BTC. I want to know a priori if swap even possible, what\u2019s the minimum entry channel capacity should be, what fees I\u2019ll incur, what time it will take\n\nThere is definitely a mess in the questions especially in 5 and 7, I couldn\u2019t formulate them in more accessible manner but hope you guys got the idea of what I\u2019m asking about. Any help is appreciated.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 923,
  "hidden": false,
  "trust_level": 0,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Need someone to tell if anything wrong with my understanding and fill the gaps \nI want to send 1 BTC from Alice to Bob using Lightning, Alice does not have a direct channel with Bob. In practice me (Alice) need to open ANY channel to LN in Electrum first, then pay Bob\u2019s invoice. Electrum requires to&hellip;",
  "truncated": true,
  "post_url": "/t/ln-routing-and-caveats/2003/1",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null,
  "can_vote": false
}