{
  "id": 5982,
  "name": "Garlo Nicon",
  "username": "garlonicon",
  "avatar_template": "/letter_avatar_proxy/v4/letter/g/278dde/{size}.png",
  "created_at": "2025-09-29T11:30:33.595Z",
  "cooked": "<blockquote>\n<p>whats wrong with my questions?</p>\n</blockquote>\n<p>There is nothing wrong, I guess people are just focused on different things.</p>\n<blockquote>\n<p>How technically these things are done?</p>\n</blockquote>\n<blockquote>\n<p>Does Dijsktra\u2019s in Electrum handle chunking automatically?</p>\n</blockquote>\n<p>You can see it by running regtest, and setting up a network, where you can have more than one client, and then you can confirm it experimentally, which node can see what things, and what decisions can be made by which participant.</p>\n<blockquote>\n<p>Is it possible that ACINQ node will deny to open a channel with me? For instance, for AML reasons</p>\n</blockquote>\n<p>Of course. And exactly the same attack can be done by miners, because they decide, which transactions are included, and which are not. In case of main chain, you can in theory force the network to accept your transaction, by mining a valid block (as long as hashrate majority is not actively reorging your blocks). In case of LN, you can only choose a different node, because there is no mining (but it can be introduced, if needed).</p>\n<blockquote>\n<p>Could interim nodes do the same when P0 is negotiated?</p>\n</blockquote>\n<p>Anyone can disturb LN, by simply being offline. I think you are worried about AML reasons, or similar things, but LN can stop working in a much easier way: some node operators could simply disconnect, and wait. To raise a panic, all that is needed, is just convincing enough nodes to go offline.</p>\n<blockquote>\n<p>And do they on practice?</p>\n</blockquote>\n<p>There is no way to tell, because \u201cbeing offline\u201d and \u201crejecting connection for AML reasons\u201d can give you the same end result: forcing you to settle things on-chain. And anyone can tell you \u201cplease check your connection\u201d, instead of informing you about any AML rules.</p>\n<blockquote>\n<p>Capacity of 50 BTC doesn\u2019t guarantee that there will be a route summing up exactly to 50 BTC.</p>\n</blockquote>\n<p>LN payment can always fail. Some people prefer sidechains, instead of LN, because then, you can always send every coin to everyone else. In LN, you simply use the main chain to open and close channels, but contrary to the sidechains, it is hard to send and receive coins \u201cinside LN\u201d, without touching the main chain. It is possible to fix that by using <a href=\"https://petertodd.org/2025/fake-channels-and-rgb-lightning\" rel=\"noopener nofollow ugc\">fake channels</a>, but if LN is \u201cexperimental\u201d, then fake channels are \u201cdouble experimental\u201d.</p>\n<blockquote>\n<p>it seems impossible to find all route permutations</p>\n</blockquote>\n<p>The same is true with all transactions\u2019 permutations within a block. So it is based on \u201cbest effort\u201d, where you start with any solution, and improve it gradually. Because <a href=\"https://blog.citp.princeton.edu/2014/10/27/bitcoin-mining-is-np-hard/\" rel=\"noopener nofollow ugc\">Bitcoin mining is NP-hard</a>, and in case of LN, it is not any better than that, and LN nodes also solve NP-hard problems.</p>\n<blockquote>\n<p>Is it better to send huge sum in small chunks or it doesn\u2019t matter?</p>\n</blockquote>\n<p>It is a philosophical question, because there are also fees. In theory, you could make a lot of transactions, sending one satoshi each, and have a higher chances of sending a payment, which wouldn\u2019t fail. But in practice, LN fees could make that approach impractical. So, the amount you can send, and the way of sending it, is driven by network conditions. Just like on-chain, you can have lower or higher fees, when mempools are more or less congested, the same is true in LN: you can find a single connection, which will handle it atomically, or your payment can fail, if it would be a single payment, so you will be forced to split it into N smaller payments, to have any chances to succeed.</p>\n<p>Also, after reaching a certain amount, sending it on-chain may be cheaper, than sending it through LN. Because LN is made for small payments, where on-chain fees are too high to proceed. However, if you can see lower on-chain fees, than LN fees, then just use on-chain. Which is also a reason, why there is more on-chain than LN activity: after going beyond certain amount, it is more profitable, to close all channels, than to keep using them.</p>\n<blockquote>\n<p>what are the real constraints I must consider when using LN regularly for B2B on a technical level?</p>\n</blockquote>\n<p>Mainly transaction fees, and the risk of nodes being offline. Because LN is not a sidechain. You cannot send anything anywhere. Your actions highly depend on current network state, at the moment when you want to transact (which is also why anchors were introduced, to allow adjusting on-chain fees). If anything goes wrong, then you have to touch on-chain coins, so LN is just layer \u201cone and a half\u201d, instead of being the proper \u201clayer two\u201d.</p>\n<p>For example: some casinos officially rejected introducing LN, because they considered it \u201cnot worth the effort\u201d. Also, some Bitcoin ATM company decided to not support LN, because they tried and failed. And you can read their statement here: <a href=\"https://shitcoins.club/resources/pdf/stand_LN_en.pdf\" rel=\"noopener nofollow ugc\">https://shitcoins.club/resources/pdf/stand_LN_en.pdf</a></p>\n<p>So, LN can help you, if you want to make a lot of transactions, between participants, which are almost always online, and where you don\u2019t want to change network topology too much (which means, that the same amounts are constantly flying in both directions between similar participants, so you don\u2019t have liquidity problems, and you can delay going on-chain forever, and do almost everything off-chain). If your business doesn\u2019t meet this definition, then using LN may be more expensive, if you will be forced to go on-chain anyway, and then pay on-chain fees, and off-chain fees, instead of moving fractions of satoshis purely off-chain.</p>",
  "post_number": 3,
  "post_type": 1,
  "posts_count": 3,
  "updated_at": "2025-09-29T11:30:33.595Z",
  "reply_count": 0,
  "reply_to_post_number": 2,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 8,
  "readers_count": 7,
  "score": 1.6,
  "yours": false,
  "topic_id": 2003,
  "topic_slug": "ln-routing-and-caveats",
  "topic_title": "LN routing and caveats",
  "topic_html_title": "LN routing and caveats",
  "category_id": 8,
  "display_username": "Garlo Nicon",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "id": 923,
    "username": "aqua",
    "name": null,
    "avatar_template": "/letter_avatar_proxy/v4/letter/a/b9bd4f/{size}.png"
  },
  "bookmarked": false,
  "raw": "> whats wrong with my questions?\n\nThere is nothing wrong, I guess people are just focused on different things.\n\n> How technically these things are done?\n\n> Does Dijsktra\u2019s in Electrum handle chunking automatically?\n\nYou can see it by running regtest, and setting up a network, where you can have more than one client, and then you can confirm it experimentally, which node can see what things, and what decisions can be made by which participant.\n\n> Is it possible that ACINQ node will deny to open a channel with me? For instance, for AML reasons\n\nOf course. And exactly the same attack can be done by miners, because they decide, which transactions are included, and which are not. In case of main chain, you can in theory force the network to accept your transaction, by mining a valid block (as long as hashrate majority is not actively reorging your blocks). In case of LN, you can only choose a different node, because there is no mining (but it can be introduced, if needed).\n\n> Could interim nodes do the same when P0 is negotiated?\n\nAnyone can disturb LN, by simply being offline. I think you are worried about AML reasons, or similar things, but LN can stop working in a much easier way: some node operators could simply disconnect, and wait. To raise a panic, all that is needed, is just convincing enough nodes to go offline.\n\n> And do they on practice?\n\nThere is no way to tell, because \u201cbeing offline\u201d and \u201crejecting connection for AML reasons\u201d can give you the same end result: forcing you to settle things on-chain. And anyone can tell you \u201cplease check your connection\u201d, instead of informing you about any AML rules.\n\n> Capacity of 50 BTC doesn\u2019t guarantee that there will be a route summing up exactly to 50 BTC.\n\nLN payment can always fail. Some people prefer sidechains, instead of LN, because then, you can always send every coin to everyone else. In LN, you simply use the main chain to open and close channels, but contrary to the sidechains, it is hard to send and receive coins \u201cinside LN\u201d, without touching the main chain. It is possible to fix that by using [fake channels](https://petertodd.org/2025/fake-channels-and-rgb-lightning), but if LN is \u201cexperimental\u201d, then fake channels are \u201cdouble experimental\u201d.\n\n> it seems impossible to find all route permutations\n\nThe same is true with all transactions\u2019 permutations within a block. So it is based on \u201cbest effort\u201d, where you start with any solution, and improve it gradually. Because [Bitcoin mining is NP-hard](https://blog.citp.princeton.edu/2014/10/27/bitcoin-mining-is-np-hard/), and in case of LN, it is not any better than that, and LN nodes also solve NP-hard problems.\n\n> Is it better to send huge sum in small chunks or it doesn\u2019t matter?\n\nIt is a philosophical question, because there are also fees. In theory, you could make a lot of transactions, sending one satoshi each, and have a higher chances of sending a payment, which wouldn\u2019t fail. But in practice, LN fees could make that approach impractical. So, the amount you can send, and the way of sending it, is driven by network conditions. Just like on-chain, you can have lower or higher fees, when mempools are more or less congested, the same is true in LN: you can find a single connection, which will handle it atomically, or your payment can fail, if it would be a single payment, so you will be forced to split it into N smaller payments, to have any chances to succeed.\n\nAlso, after reaching a certain amount, sending it on-chain may be cheaper, than sending it through LN. Because LN is made for small payments, where on-chain fees are too high to proceed. However, if you can see lower on-chain fees, than LN fees, then just use on-chain. Which is also a reason, why there is more on-chain than LN activity: after going beyond certain amount, it is more profitable, to close all channels, than to keep using them.\n\n> what are the real constraints I must consider when using LN regularly for B2B on a technical level?\n\nMainly transaction fees, and the risk of nodes being offline. Because LN is not a sidechain. You cannot send anything anywhere. Your actions highly depend on current network state, at the moment when you want to transact (which is also why anchors were introduced, to allow adjusting on-chain fees). If anything goes wrong, then you have to touch on-chain coins, so LN is just layer \u201cone and a half\u201d, instead of being the proper \u201clayer two\u201d.\n\nFor example: some casinos officially rejected introducing LN, because they considered it \u201cnot worth the effort\u201d. Also, some Bitcoin ATM company decided to not support LN, because they tried and failed. And you can read their statement here: https://shitcoins.club/resources/pdf/stand_LN_en.pdf\n\nSo, LN can help you, if you want to make a lot of transactions, between participants, which are almost always online, and where you don\u2019t want to change network topology too much (which means, that the same amounts are constantly flying in both directions between similar participants, so you don\u2019t have liquidity problems, and you can delay going on-chain forever, and do almost everything off-chain). If your business doesn\u2019t meet this definition, then using LN may be more expensive, if you will be forced to go on-chain anyway, and then pay on-chain fees, and off-chain fees, instead of moving fractions of satoshis purely off-chain.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 372,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "whats wrong with my questions? \n\nThere is nothing wrong, I guess people are just focused on different things. \n\nHow technically these things are done? \n\n\nDoes Dijsktra\u2019s in Electrum handle chunking automatically? \n\nYou can see it by running regtest, and setting up a network, where you can have more&hellip;",
  "truncated": true,
  "post_url": "/t/ln-routing-and-caveats/2003/3",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}