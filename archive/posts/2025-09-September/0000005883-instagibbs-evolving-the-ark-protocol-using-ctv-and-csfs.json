{
  "id": 5883,
  "name": "Gregory Sanders",
  "username": "instagibbs",
  "avatar_template": "/user_avatar/delvingbitcoin.org/instagibbs/{size}/28_2.png",
  "created_at": "2025-09-16T14:44:44.073Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"stevenroose\" data-post=\"1\" data-topic=\"1602\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/stevenroose/48/1087_2.png\" class=\"avatar\"> stevenroose:</div>\n<blockquote>\n<pre><code class=\"lang-auto\">forfeit tx:\n| inputs  |    outputs | \n+=========+============+\n| exit tx | S + secret |\n|         | or  A + \u0394t |\n+---------+------------+\n</code></pre>\n</blockquote>\n</aside>\n<p>Slight improvement could be to have the input using a key-spend level adaptor signature instead to late-bind <code>R</code> to <code>secret</code>. Then the output can simply be going to <code>S</code>, since there is no need for for the Alice clause (she got her <code>secret</code> already).</p>\n<p>This would turn the <code>secret</code> hash into a curve point, so for maximal savings you\u2019d have the leaf policy in the new tree also be a key-level adaptor spend rather than a tapscript hash image reveal, leaking the same secret.</p>\n<p>Granted this is \u201cnever should happen\u201d stuff I normally warn against complexity for\u2026</p>",
  "post_number": 7,
  "post_type": 1,
  "posts_count": 7,
  "updated_at": "2025-09-16T14:49:09.670Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 3,
  "readers_count": 2,
  "score": 0.6,
  "yours": false,
  "topic_id": 1602,
  "topic_slug": "evolving-the-ark-protocol-using-ctv-and-csfs",
  "topic_title": "Evolving the Ark protocol using CTV and CSFS",
  "topic_html_title": "Evolving the Ark protocol using CTV and CSFS",
  "category_id": 7,
  "display_username": "Gregory Sanders",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"stevenroose, post:1, topic:1602\"]\n```\nforfeit tx:\n| inputs  |    outputs | \n+=========+============+\n| exit tx | S + secret |\n|         | or  A + \u0394t |\n+---------+------------+\n```\n\n[/quote]\n\nSlight improvement could be to have the input using a key-spend level adaptor signature instead to late-bind `R` to `secret`. Then the output can simply be going to `S`, since there is no need for for the Alice clause (she got her `secret` already).\n\nThis would turn the `secret` hash into a curve point, so for maximal savings you\u2019d have the leaf policy in the new tree also be a key-level adaptor spend rather than a tapscript hash image reveal, leaking the same secret.\n\nGranted this is \u201cnever should happen\u201d stuff I normally warn against complexity for\u2026",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 31,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Slight improvement could be to have the input using a key-spend level adaptor signature instead to late-bind R to secret. Then the output can simply be going to S, since there is no need for for the Alice clause (she got her secret already). \nThis would turn the secret hash into a curve point, so f&hellip;",
  "truncated": true,
  "post_url": "/t/evolving-the-ark-protocol-using-ctv-and-csfs/1602/7",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}