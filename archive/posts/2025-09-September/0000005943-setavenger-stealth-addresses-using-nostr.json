{
  "id": 5943,
  "name": "",
  "username": "setavenger",
  "avatar_template": "/user_avatar/delvingbitcoin.org/setavenger/{size}/573_2.png",
  "created_at": "2025-09-21T17:50:10.995Z",
  "cooked": "<p>Interesting idea, I have a few quick thoughts to share. As somebody who works a lot on Silent Payments I find this particularly interesting.</p>\n<p>How would you make sure that no transactions are \u201clost\u201d? As nostr has no global state, several scenarios come to mind where somehow a notification is \u201clost\u201d or missed.</p>\n<ul>\n<li>\n<p>It\u2019s inherent to nostr that if Alice and Bob don\u2019t share a relay Bob will not see notes broadcasted by Alice. So some prior agreement on which relays to use would be needed?</p>\n</li>\n<li>\n<p>If a relay deletes a note and before Bob has seen the note he will never know of the payment either. I guess one could solve this with a confirmation message. Alice could rebroadcast the notification note until Bob confirms receiving the notification. But this would only work if relay sets have an overlap.</p>\n</li>\n</ul>\n<p>The above issue could be somewhat mitigated if a wallet always makes sure it has checked for all <code>i \u00b1 x</code> the last received <code>i</code>. But this only helps if Bob receives several transactions from Alice. There seems to be no fallback for the receiver to find transactions (e.g. brute force searching for new payments).</p>\n<p>Another worry I\u2019d have are malicious actors flooding the receiver with fake notifications. Silent Payments in it\u2019s \u201cbase case\u201d checks Transactions accepted by a node, which has protection (e.g. PoW for confirmed txs) against transaction flooding.</p>\n<p>What if Alice accidentally looses count of <code>i</code>/reuses an already used <code>i</code>? It\u2019s the same two parties making the transaction which is not a big problem but probably not optimal either. A deterministic nonce could help but not sure what that could be in the nostr context.</p>\n<p>Compared to Silent Payments your proposal has basically no scanning effort which is quite nice. But a clear downside I currently see is the statelessness of nostr. If the receiver does not get the notification he will not know that he ever received a payment.</p>\n<p>I\u2019m not deep in the weeds on nostr\u2019s recent developments on private messaging without leaking metadata. It seems though that pairing your idea with silent payments could be quite interesting. i.e. I could see nostr notifications as an easy way to notify receivers of new Silent Payments. They could always fallback to a full chain scan if necessary (e.g. Bob suspects a missed transaction). My worries for nostr notifications were/are always the metadata leakage but I think some efforts were made to reduce that issue. Would be interested in hearing your opinions on the risk of metadata leakage when notifying receivers.</p>",
  "post_number": 6,
  "post_type": 1,
  "posts_count": 10,
  "updated_at": "2025-09-21T17:50:10.995Z",
  "reply_count": 1,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 26,
  "readers_count": 25,
  "score": 10.0,
  "yours": false,
  "topic_id": 1816,
  "topic_slug": "stealth-addresses-using-nostr",
  "topic_title": "Stealth addresses using nostr",
  "topic_html_title": "Stealth addresses using nostr",
  "category_id": 8,
  "display_username": "",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Interesting idea, I have a few quick thoughts to share. As somebody who works a lot on Silent Payments I find this particularly interesting.\n\nHow would you make sure that no transactions are \u201clost\u201d? As nostr has no global state, several scenarios come to mind where somehow a notification is \u201clost\u201d or missed.\n\n* It\u2019s inherent to nostr that if Alice and Bob don\u2019t share a relay Bob will not see notes broadcasted by Alice. So some prior agreement on which relays to use would be needed?\n\n* If a relay deletes a note and before Bob has seen the note he will never know of the payment either. I guess one could solve this with a confirmation message. Alice could rebroadcast the notification note until Bob confirms receiving the notification. But this would only work if relay sets have an overlap.\n\nThe above issue could be somewhat mitigated if a wallet always makes sure it has checked for all `i \u00b1 x` the last received `i`. But this only helps if Bob receives several transactions from Alice. There seems to be no fallback for the receiver to find transactions (e.g. brute force searching for new payments).\n\nAnother worry I\u2019d have are malicious actors flooding the receiver with fake notifications. Silent Payments in it\u2019s \u201cbase case\u201d checks Transactions accepted by a node, which has protection (e.g. PoW for confirmed txs) against transaction flooding.\n\nWhat if Alice accidentally looses count of `i`/reuses an already used `i`? It\u2019s the same two parties making the transaction which is not a big problem but probably not optimal either. A deterministic nonce could help but not sure what that could be in the nostr context.\n\nCompared to Silent Payments your proposal has basically no scanning effort which is quite nice. But a clear downside I currently see is the statelessness of nostr. If the receiver does not get the notification he will not know that he ever received a payment.\n\nI\u2019m not deep in the weeds on nostr\u2019s recent developments on private messaging without leaking metadata. It seems though that pairing your idea with silent payments could be quite interesting. i.e. I could see nostr notifications as an easy way to notify receivers of new Silent Payments. They could always fallback to a full chain scan if necessary (e.g. Bob suspects a missed transaction). My worries for nostr notifications were/are always the metadata leakage but I think some efforts were made to reduce that issue. Would be interested in hearing your opinions on the risk of metadata leakage when notifying receivers.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 435,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Interesting idea, I have a few quick thoughts to share. As somebody who works a lot on Silent Payments I find this particularly interesting. \nHow would you make sure that no transactions are \u201clost\u201d? As nostr has no global state, several scenarios come to mind where somehow a notification is \u201clost\u201d o&hellip;",
  "truncated": true,
  "post_url": "/t/stealth-addresses-using-nostr/1816/6",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}