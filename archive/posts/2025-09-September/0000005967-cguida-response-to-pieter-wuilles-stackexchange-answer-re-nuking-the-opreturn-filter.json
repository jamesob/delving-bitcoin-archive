{
  "id": 5967,
  "name": "Chris Guida",
  "username": "cguida",
  "avatar_template": "/letter_avatar_proxy/v4/letter/c/87869e/{size}.png",
  "created_at": "2025-09-24T19:32:19.558Z",
  "cooked": "<p>&gt;so you have I guess 4 rules here, size of data, high fees caused, utxo bloat, bitcoin vs non-bitcoin</p>\n<p>Yes. Each of these things is a somewhat blurry line, but I think a use case that objectively violates all four (eg brc-20) can be said to be objectively harmful, whereas things that violate none can be said to be objectively harmless. Again, there is a large gray zone, but there are use cases that are objectively harmful and it makes zero sense for a payment network to prioritize these over, eg, Lightning channel opens and closes.</p>\n<p>&gt;On size someone has a to make a rule about how big is/is not OK</p>\n<p>Yes, 80 bytes has been the limit for over a decade now. If people want to reopen this discussion that\u2019s fine, but it should be a discussion, not a unilateral decision.</p>\n<p>&gt;I think the difficulty with that that makes consensus difficult is, as we\u2019ve all seen, data just tends to move around to wherever it can\u2019t be ejected easily, and is cheapest</p>\n<p>Yes, and whenever harmful use cases emerge, we should attempt to restrict them.</p>\n<p>&gt;On utxo bloat I guess I agree, except for the points earlier made by others, ad nauseam, that it\u2019s incredibly difficult to ban data from utxos</p>\n<p>It\u2019s not actually. Knots has filters for inscriptions (which <a href=\"https://statoshi.info/d/000000009/unspent-transaction-output-set?orgId=1&amp;refresh=10m&amp;viewPanel=8&amp;from=1588309200000&amp;to=now\" rel=\"noopener nofollow ugc\">directly caused ~7GB of new utxoset growth</a>, which is over half the current utxoset). Citrea\u2019s watchtower challenge transactions are <a href=\"https://youtu.be/J9bRVIXOhm0?t=12555\" rel=\"noopener nofollow ugc\">also trivially filterable</a>.</p>\n<p>Data transactions tend to be harmful in direct proportion to how easy to detect they are. So we don\u2019t need to try to eliminate <em>all</em> data transactions; just restricting the most harmful formats is more than sufficient.</p>\n<p>&gt;albeit it will never be the cheapest option for the spammer.</p>\n<p>Spammers don\u2019t seem to be particularly fee-sensitive. BRC-20 is a case-in-point. Again, data use cases have infinitely more demand for block space than payment use cases, so if we don\u2019t bias payments at all, then data use cases will inevitably dominate.</p>\n<p>&gt;\u201cFiltering\u201d has no purpose if it is not with the intention of censoring (you are trying to stop the activity), and \u201cspam\u201d is not something you will ever be able to objectively define at the level of bitcoin transactions (the purpose of my somewhat awkward examples</p>\n<p>I think \u201cmakes bitcoin worse money\u201d is a good starting point for a definition of spam. Obviously there is an infinite amount of negotiation over what precisely this means; but I think most of us can probably agree that BRC-20 fits this definition.</p>\n<p>I would love to understand how the anti-filter crowd defines \u201ccensorship\u201d as this seems to be a persistent point of misunderstanding in these interactions. It sounds like you consider all spam filtration and all attempts at spam filtration to be censorship; is that correct? For example, do you consider email spam filters to be \u201ccensorship\u201d?</p>\n<p>&gt;Coinjoins</p>\n<p>I think it\u2019s pretty clear that coinjoins don\u2019t meet the definition of spam (as long as they don\u2019t use excessive data, bloat the utxoset, or cause excessive high fees).</p>\n<p>Coinjoins\u2019 purpose is to use bitcoin as permissionless money and they obviously increase its utility as such. I don\u2019t think anyone would ever argue that they are spam. Of course noderunners are free to refuse to relay them if they wish, but I find it very dubious that a significant portion of the network would decide to do so.</p>\n<p>&gt;client-side validation</p>\n<p>Yes, all L2s and apps do some degree of this. Again, I\u2019m fine with such use cases as long as they stay within 40 bytes (and 80 bytes is the quasi-consensus limit). Opreturn was specifically introduced for such things, and the limit was set to 40 bytes to accommodate a hash and an 8-byte identifier. If people need more space than this, then they should reopen the conversation and get bitcoiners\u2019 consent rather than just unilaterally shoving data into the blockchain. The former is peaceful; the latter is hostile.</p>\n<p>&gt;So I\u2019m really just making the same point again, that you can\u2019t easily, or sometimes at all, distinguish monetary uses, and at the highest level, it\u2019s fundamentally impossible because the whole <em>point</em> of using an L2 is to provide privacy and scalability <em>by removing the per-transaction semantics from the base blockchain</em></p>\n<p>I understand and appreciate your point that \u201cspam\u201d is not something that can be formally specified in such a way as to be reliable for the rest of time. I had to come to terms with this recently myself when trying to imagine a set of consensus rules that would always be able to reject data spam as invalid while always allowing payment use cases as valid. We agree 100% here. This is precisely the reason I am not advocating for a consensus change; since it is <a href=\"https://blog.bitmex.com/the-unstoppable-jpg-in-private-keys/\" rel=\"noopener nofollow ugc\">not even theoretically possible</a> to detect and filter all data use cases, attempting to formalize such things is a fool\u2019s errand.</p>\n<p>The fact that spam is not something that can be formally defined is precisely the reason why such things can only be countered at the social/mempool layer rather than the consensus layer, and it is precisely the reason why the protective bitcoin maximalist culture [and the filters its proponents run] will always be vital to bitcoin\u2019s survival and success.</p>\n<p><em>However</em>, it is <em>not</em> the case that, since spam cannot be formally specified, we necessarily need to give up all efforts to bias payments over data. Yes, there is a large gray area as I\u2019ve already acknowledged; but there are also transaction formats that are <em>only</em> abused for data. BRC-20 is the worst offender here, and, again, it is trivially easy to identify. It <em>objectively, permanently</em> harmed bitcoin and thus is <em>objectively spam and should be discouraged</em>.</p>\n<p>There is no <em>general</em> formula for spam, but we know <em>100% without a doubt</em> that BRC-20 <em>specifically</em> is spam, and it is very likely that all inscriptions are spam, especially those that violate the datacarriersize setting (80 bytes on a majority of nodes).</p>\n<p>&gt;So I think your position that we can police usage is only fully compatible with fixed format, public and unscalable payments on the base layer (and tbh, imo, not even compatible with that!).</p>\n<p>I am not following your train of reasoning to this conclusion. I am not saying that we can make a general filter that has no false positives; I am saying we can filter specific formats we *know* are data spam. Mempool filters are the ideal mechanism for this as they can adapt quickly to counter evolving spam threats.</p>\n<p>&gt;Our inability to bias is a feature, not a bug.</p>\n<p>No such \u201cinability\u201d exists. See again the <a href=\"https://x.com/oomahq/status/1931856202511888465\" rel=\"noopener nofollow ugc\">99% decrease in large opreturns</a> the opreturn filter causes. We have been biasing bitcoin towards payments since the days of Satoshi, and we should continue doing so for as long as we can.</p>\n<p>&gt;In fact it might be the main reason Bitcoin still exists 16+ years after inception.</p>\n<p>I disagree. Yes, censorship resistance is a primary reason bitcoin has been successful, but plenty of shitcoins are \u201ccensorship resistant\u201d too, and yet they are not money. Censorship resistance is necessary, but not sufficient, for bitcoin to be successful in the long run. We must also make sure that data use cases are de-prioritized as much as we can. It is bitcoin\u2019s maximalist culture and its hostility to scammy/spammy use cases (as well as its censorship-resistant architecture) that has led to bitcoin\u2019s success.</p>\n<p>Again, Ethereum is just as \u201ccensorship resistant\u201d as bitcoin, and yet it is not as successful and cannot make as strong a claim to being \u201cmoney\u201d as bitcoin. The difference between Ethereum and bitcoin is this \u201cbias\u201d towards good money, and this bias is a <em>cultural</em> (rather than <em>consensus</em>) phenomenon because <em>it has to be</em>, for the reasons outlined above.</p>\n<p>If we break with 16 years of precedent and remove this bias, there is <em>nothing</em> stopping bitcoin from becoming [something very much like] Ethereum, full stop. (You can easily see this effect on chains like BSV and BCH, which have devolved into shitcoin casinos, having given up on being permissionless money long ago.)</p>\n<p>&gt;The thing is, I do (I think) understand your basically opposite position: that on the contrary, Bitcoin is threatened with not existing by the ability to fill it with non-monetary data. I disagree. Perhaps I\u2019ll expand elsewhere, this will get too long otherwise.</p>\n<p>I would love to hear your full rationale, and I can\u2019t really think of a better venue for such discussion than here on Delving.</p>\n<p>&gt;Totally agree with the first half, for the second half it\u2019s nuanced to me: I certainly don\u2019t want to be able to <em>force</em> people not to run filters, but that\u2019s not quite the same as not <em>wanting</em> people to not run filters - there is a reason to want it not to happen, namely the centralization pressure on miners that Pieter and others have gone into. But hey, obviously it\u2019s nuanced.</p>\n<p>Yes, it\u2019s definitely nuanced. I think this conflict is likely never to resolve to anyone\u2019s satisfaction, because the flipside of attempting to prevent users from submitting certain transactions is attempting to prevent users from deciding which transactions they are able to refuse to announce to their peers, which is arguably a matter of free speech and the right to remain silent. I\u2019m sure you would agree that forcing someone to say something against their will is bad; it could be considered compelled speech. Forcing nodes to relay transactions they don\u2019t want to relay is the same thing.</p>\n<p>[1] To nerd out for a moment, signing on pubkeys in utxos is the only idea I know to stop utxo spam, and it\u2019s clearly a scalability nightmare. It\u2019s also extremely unpleasant security wise having a signature onchain immediately with every new coin, although I\u2019m speaking theoretically there; I know of no practical security impact (and I\u2019m not considering the quantum threat practical!). An interesting technical question is whether there might still be a way to embed data if scriptpubkeys are (P, (R, s)). I remember looking into it but not finding one, at least not if we speak specifically of Schnorr pubkey-prefixed signatures, and specifically that the (implicit) message signed includes the pubkey P. Of course you can always grind some bytes into a validly generated pubkey, but that\u2019s not really worth considering (vanity etc.).</p>\n<p>Completely agreed, which is why, again, consensus is not the proper place to fight spam. Mempool policy is much better suited to this purpose.</p>\n<p>It\u2019s likely that key grinding (or hiding data in privkeys as the BitMex article shows) would defeat pretty much any consensus-level filter. It is much more cost-effective to filter specific spam tx formats at the mempool level than to try to predict all possible future spam formats and enshrine those in consensus (which would obviously stifle innovation).</p>",
  "post_number": 7,
  "post_type": 1,
  "posts_count": 8,
  "updated_at": "2025-09-24T19:32:19.558Z",
  "reply_count": 1,
  "reply_to_post_number": 6,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 13,
  "readers_count": 12,
  "score": 7.6,
  "yours": false,
  "topic_id": 1991,
  "topic_slug": "response-to-pieter-wuilles-stackexchange-answer-re-nuking-the-opreturn-filter",
  "topic_title": "Response to Pieter Wuille's StackExchange Answer Re: Nuking the Opreturn Filter",
  "topic_html_title": "Response to Pieter Wuille&rsquo;s StackExchange Answer Re: Nuking the Opreturn Filter",
  "category_id": 5,
  "display_username": "Chris Guida",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "id": 343,
    "username": "AdamISZ",
    "name": "Adam Gibson",
    "avatar_template": "/user_avatar/delvingbitcoin.org/adamisz/{size}/418_2.png"
  },
  "bookmarked": false,
  "raw": "\\>so you have I guess 4 rules here, size of data, high fees caused, utxo bloat, bitcoin vs non-bitcoin\n\nYes. Each of these things is a somewhat blurry line, but I think a use case that objectively violates all four (eg brc-20) can be said to be objectively harmful, whereas things that violate none can be said to be objectively harmless. Again, there is a large gray zone, but there are use cases that are objectively harmful and it makes zero sense for a payment network to prioritize these over, eg, Lightning channel opens and closes.\n\n\\>On size someone has a to make a rule about how big is/is not OK\n\nYes, 80 bytes has been the limit for over a decade now. If people want to reopen this discussion that\u2019s fine, but it should be a discussion, not a unilateral decision.\n\n\\>I think the difficulty with that that makes consensus difficult is, as we\u2019ve all seen, data just tends to move around to wherever it can\u2019t be ejected easily, and is cheapest\n\nYes, and whenever harmful use cases emerge, we should attempt to restrict them.\n\n\\>On utxo bloat I guess I agree, except for the points earlier made by others, ad nauseam, that it\u2019s incredibly difficult to ban data from utxos\n\nIt\u2019s not actually. Knots has filters for inscriptions (which [directly caused \\~7GB of new utxoset growth](https://statoshi.info/d/000000009/unspent-transaction-output-set?orgId=1&refresh=10m&viewPanel=8&from=1588309200000&to=now), which is over half the current utxoset). Citrea\u2019s watchtower challenge transactions are [also trivially filterable](https://youtu.be/J9bRVIXOhm0?t=12555).\n\nData transactions tend to be harmful in direct proportion to how easy to detect they are. So we don\u2019t need to try to eliminate *all* data transactions; just restricting the most harmful formats is more than sufficient.\n\n\\>albeit it will never be the cheapest option for the spammer.\n\nSpammers don\u2019t seem to be particularly fee-sensitive. BRC-20 is a case-in-point. Again, data use cases have infinitely more demand for block space than payment use cases, so if we don\u2019t bias payments at all, then data use cases will inevitably dominate.\n\n\\>\u201cFiltering\u201d has no purpose if it is not with the intention of censoring (you are trying to stop the activity), and \u201cspam\u201d is not something you will ever be able to objectively define at the level of bitcoin transactions (the purpose of my somewhat awkward examples\n\nI think \u201cmakes bitcoin worse money\u201d is a good starting point for a definition of spam. Obviously there is an infinite amount of negotiation over what precisely this means; but I think most of us can probably agree that BRC-20 fits this definition.\n\nI would love to understand how the anti-filter crowd defines \u201ccensorship\u201d as this seems to be a persistent point of misunderstanding in these interactions. It sounds like you consider all spam filtration and all attempts at spam filtration to be censorship; is that correct? For example, do you consider email spam filters to be \u201ccensorship\u201d?\n\n\\>Coinjoins\n\nI think it\u2019s pretty clear that coinjoins don\u2019t meet the definition of spam (as long as they don\u2019t use excessive data, bloat the utxoset, or cause excessive high fees).\n\nCoinjoins\u2019 purpose is to use bitcoin as permissionless money and they obviously increase its utility as such. I don\u2019t think anyone would ever argue that they are spam. Of course noderunners are free to refuse to relay them if they wish, but I find it very dubious that a significant portion of the network would decide to do so.\n\n\\>client-side validation\n\nYes, all L2s and apps do some degree of this. Again, I\u2019m fine with such use cases as long as they stay within 40 bytes (and 80 bytes is the quasi-consensus limit). Opreturn was specifically introduced for such things, and the limit was set to 40 bytes to accommodate a hash and an 8-byte identifier. If people need more space than this, then they should reopen the conversation and get bitcoiners\u2019 consent rather than just unilaterally shoving data into the blockchain. The former is peaceful; the latter is hostile.\n\n\\>So I\u2019m really just making the same point again, that you can\u2019t easily, or sometimes at all, distinguish monetary uses, and at the highest level, it\u2019s fundamentally impossible because the whole *point* of using an L2 is to provide privacy and scalability *by removing the per-transaction semantics from the base blockchain*\n\nI understand and appreciate your point that \u201cspam\u201d is not something that can be formally specified in such a way as to be reliable for the rest of time. I had to come to terms with this recently myself when trying to imagine a set of consensus rules that would always be able to reject data spam as invalid while always allowing payment use cases as valid. We agree 100% here. This is precisely the reason I am not advocating for a consensus change; since it is [not even theoretically possible](https://blog.bitmex.com/the-unstoppable-jpg-in-private-keys/) to detect and filter all data use cases, attempting to formalize such things is a fool\u2019s errand.\n\nThe fact that spam is not something that can be formally defined is precisely the reason why such things can only be countered at the social/mempool layer rather than the consensus layer, and it is precisely the reason why the protective bitcoin maximalist culture \\[and the filters its proponents run\\] will always be vital to bitcoin\u2019s survival and success.\n\n*However*, it is *not* the case that, since spam cannot be formally specified, we necessarily need to give up all efforts to bias payments over data. Yes, there is a large gray area as I\u2019ve already acknowledged; but there are also transaction formats that are *only* abused for data. BRC-20 is the worst offender here, and, again, it is trivially easy to identify. It *objectively, permanently* harmed bitcoin and thus is *objectively spam and should be discouraged*.\n\nThere is no *general* formula for spam, but we know *100% without a doubt* that BRC-20 *specifically* is spam, and it is very likely that all inscriptions are spam, especially those that violate the datacarriersize setting (80 bytes on a majority of nodes).\n\n\\>So I think your position that we can police usage is only fully compatible with fixed format, public and unscalable payments on the base layer (and tbh, imo, not even compatible with that!).\n\nI am not following your train of reasoning to this conclusion. I am not saying that we can make a general filter that has no false positives; I am saying we can filter specific formats we \\*know\\* are data spam. Mempool filters are the ideal mechanism for this as they can adapt quickly to counter evolving spam threats.\n\n\\>Our inability to bias is a feature, not a bug.\n\nNo such \u201cinability\u201d exists. See again the [99% decrease in large opreturns](https://x.com/oomahq/status/1931856202511888465) the opreturn filter causes. We have been biasing bitcoin towards payments since the days of Satoshi, and we should continue doing so for as long as we can.\n\n\\>In fact it might be the main reason Bitcoin still exists 16+ years after inception.\n\nI disagree. Yes, censorship resistance is a primary reason bitcoin has been successful, but plenty of shitcoins are \u201ccensorship resistant\u201d too, and yet they are not money. Censorship resistance is necessary, but not sufficient, for bitcoin to be successful in the long run. We must also make sure that data use cases are de-prioritized as much as we can. It is bitcoin\u2019s maximalist culture and its hostility to scammy/spammy use cases (as well as its censorship-resistant architecture) that has led to bitcoin\u2019s success.\n\nAgain, Ethereum is just as \u201ccensorship resistant\u201d as bitcoin, and yet it is not as successful and cannot make as strong a claim to being \u201cmoney\u201d as bitcoin. The difference between Ethereum and bitcoin is this \u201cbias\u201d towards good money, and this bias is a *cultural* (rather than *consensus*) phenomenon because *it has to be*, for the reasons outlined above.\n\nIf we break with 16 years of precedent and remove this bias, there is *nothing* stopping bitcoin from becoming \\[something very much like\\] Ethereum, full stop. (You can easily see this effect on chains like BSV and BCH, which have devolved into shitcoin casinos, having given up on being permissionless money long ago.)\n\n\\>The thing is, I do (I think) understand your basically opposite position: that on the contrary, Bitcoin is threatened with not existing by the ability to fill it with non-monetary data. I disagree. Perhaps I\u2019ll expand elsewhere, this will get too long otherwise.\n\nI would love to hear your full rationale, and I can\u2019t really think of a better venue for such discussion than here on Delving.\n\n\\>Totally agree with the first half, for the second half it\u2019s nuanced to me: I certainly don\u2019t want to be able to *force* people not to run filters, but that\u2019s not quite the same as not *wanting* people to not run filters - there is a reason to want it not to happen, namely the centralization pressure on miners that Pieter and others have gone into. But hey, obviously it\u2019s nuanced.\n\nYes, it\u2019s definitely nuanced. I think this conflict is likely never to resolve to anyone\u2019s satisfaction, because the flipside of attempting to prevent users from submitting certain transactions is attempting to prevent users from deciding which transactions they are able to refuse to announce to their peers, which is arguably a matter of free speech and the right to remain silent. I\u2019m sure you would agree that forcing someone to say something against their will is bad; it could be considered compelled speech. Forcing nodes to relay transactions they don\u2019t want to relay is the same thing.\n\n\\[1\\] To nerd out for a moment, signing on pubkeys in utxos is the only idea I know to stop utxo spam, and it\u2019s clearly a scalability nightmare. It\u2019s also extremely unpleasant security wise having a signature onchain immediately with every new coin, although I\u2019m speaking theoretically there; I know of no practical security impact (and I\u2019m not considering the quantum threat practical!). An interesting technical question is whether there might still be a way to embed data if scriptpubkeys are (P, (R, s)). I remember looking into it but not finding one, at least not if we speak specifically of Schnorr pubkey-prefixed signatures, and specifically that the (implicit) message signed includes the pubkey P. Of course you can always grind some bytes into a validly generated pubkey, but that\u2019s not really worth considering (vanity etc.).\n\nCompletely agreed, which is why, again, consensus is not the proper place to fight spam. Mempool policy is much better suited to this purpose.\n\nIt\u2019s likely that key grinding (or hiding data in privkeys as the BitMex article shows) would defeat pretty much any consensus-level filter. It is much more cost-effective to filter specific spam tx formats at the mempool level than to try to predict all possible future spam formats and enshrine those in consensus (which would obviously stifle innovation).",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 140,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "&gt;so you have I guess 4 rules here, size of data, high fees caused, utxo bloat, bitcoin vs non-bitcoin \nYes. Each of these things is a somewhat blurry line, but I think a use case that objectively violates all four (eg brc-20) can be said to be objectively harmful, whereas things that violate none ca&hellip;",
  "truncated": true,
  "post_url": "/t/response-to-pieter-wuilles-stackexchange-answer-re-nuking-the-opreturn-filter/1991/7",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}