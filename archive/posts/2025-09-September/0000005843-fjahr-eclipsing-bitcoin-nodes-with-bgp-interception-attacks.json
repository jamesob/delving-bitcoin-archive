{
  "id": 5843,
  "name": "Fabian",
  "username": "fjahr",
  "avatar_template": "/letter_avatar_proxy/v4/letter/f/ea5d25/{size}.png",
  "created_at": "2025-09-07T00:54:02.063Z",
  "cooked": "<p>Thank you for this great work! It is great to see more research going into the impact of network level attacks on Bitcoin.</p>\n<p>I am dropping a few unordered thoughts here, feel free to ignore any of them if they are not useful:</p>\n<blockquote>\n<p>Eclipse attacks: The goal of the attacker is to control all incoming and outgoing connections to a node. This allows the attacker to waste mining power, do selfish mining, double spend, attack Lightning, etc [<a href=\"https://ihchoi12.github.io/assets/tran2020stealthier.pdf\">1</a>]. This was previously done by polluting AddrMan\u2019s tables with IPs that the attacker controlled [<a href=\"https://www.usenix.org/system/files/conference/usenixsecurity15/sec15-paper-heilman.pdf\">2</a>], or was on the path to [<a href=\"https://ihchoi12.github.io/assets/tran2020stealthier.pdf\">1</a>]. Core has mitigated these eclipsing methods by making changes to AddrMan.</p>\n</blockquote>\n<p>IMO it should be noted for completeness that usage of BIP324 and StratumV2 is limiting the damage that an attacker can do if these attacks are explicitly named. Also I think the impact of alternative connection types like Tor or I2P would be interesting to evaluate. Having multiple tor peers may actually make the attack easier if the entry guard is being used consistently through out the attack. On the other hand, if there is one tor connection and multiple entry guards are used or rotated frequently then it makes it harder again.</p>\n<blockquote>\n<p>Compromise or set up a new AS as close (in number of AS hops) to the victim node AS as possible.</p>\n</blockquote>\n<p>It\u2019s not clear to me from the write-up if this is the same AS that is mentioned in the requirements or if this is a second one. I guess 1. is just the classic way of trying to evict and starting from 2. this is what you suggest as a new style of attack. I think the description could be a bit clearer to make clear if both of these styles need to be used or if that is not the case maybe mention the classic style rather as a footnote.</p>\n<blockquote>\n<p>Sort IP prefixes by number of nodes and hijack them in succession at a rate that will not raise alarms.</p>\n<p>Hijack rate</p>\n</blockquote>\n<p>I am not a network engineer and I don\u2019t know what detection mechanisms there might be triggered but I would expect that being much more aggressive should yield higher success probability. Doing the attack as fast as possible should raise the success probability significantly since there is less other interference happening (node changing connections, new routes being made available etc.). In your numbers you assume the absolute worst case scenario (hijacking all prefixes), I think that can be more optimistic. A well organized attacker might do some probing without hijacking first, just using the bitcoin network, to make more informed choices about which prefixes to attack.</p>\n<blockquote>\n<p>We find that the attacker can always successfully hijack 41.13% of node prefixes</p>\n</blockquote>\n<p>I find that a bit too strongly worded given that there are often additional filters in place that could prevent the shorter prefix from being successful. At least when there is a customer relationship this can be assumed to be the case. I would say that number is the worst case or make trying this type of hijack feasible.</p>\n<p>Side-note: I would be interested in that AS relationship dataset from CAIDA if you were able to get it <img src=\"https://delvingbitcoin.org/images/emoji/twitter/wink.png?v=14\" title=\":wink:\" class=\"emoji\" alt=\":wink:\" loading=\"lazy\" width=\"20\" height=\"20\"> I wasn\u2019t successful but I only tried that form once a long time ago, seeing the link here reminded me of that.</p>\n<blockquote>\n<p>[1-NT] Peer rotation</p>\n</blockquote>\n<p>I think Cons should mention that this also makes the classic eclipse attack easier in some ways because the attacker has more chances to become get into connection slots, right?</p>\n<blockquote>\n<p>[4-T] Select at least one peer with the shortest path possible</p>\n</blockquote>\n<p>It might be interesting to check if quickest ping response correlates well enough with shortest path so that this could replace needing to do traceroutes.</p>\n<blockquote>\n<p>[5-T] Route-aware peer selection</p>\n</blockquote>\n<p>Hm, but this would require periodic traceroutes on the peers that we are connected to as well not just candidates, right? A non-intercepted peer that we connect today could be intercepted tomorrow, right? So we might want to monitor if the routes change as well and then maybe prefer these for rotating them out in peer rotation? Not sure, I have to think about this some more.</p>\n<blockquote>\n<p>exponentially favoring peers whose paths introduce new ASes earlier on.</p>\n</blockquote>\n<p>This also could make the classic eclipse attack easier if the attacker can create some nodes in \u201cexotic\u201d locations (of the internet).</p>\n<blockquote>\n<p>I would also like to hear people\u2019s thoughts on integrating traceroute functionality into core to enable the aforementioned mitigations.</p>\n</blockquote>\n<p>I think a lot a questions would need to be answered for this, for example: Can detection be  avoided with tunneling and if so what else do we have to do to detect that? And assuming traceroute itself works reasonably well, what would we do with connections if an anomaly is detected? I think you could propose some basic decision tree for this so this feature can be reasoned about on a conceptual level aside from collecting the data to evaluate if traceroute is technically reliable enough Also, afaict you are only proposing to use traceroute to detect outbound connection hijacks. If inbound is targeted instead we would need to use some other vantage point or so?</p>\n<blockquote>\n<p>Mitigations</p>\n</blockquote>\n<p>I think the first thing that could be done would be to raise further awareness among node runners and bitcoin infrastructure providers. Educate them on this in a more accessible way and let them choose their hosters/ISPs accordingly (tight ROAs, ASPA) or let them contact their provider and request adoption of these features asap. This might be something interesting to collaborate bitcoin optech on.</p>\n<p>Overall, I am a bit surprised <a href=\"https://datatracker.ietf.org/doc/html/draft-ietf-sidrops-aspa-verification\">ASPA</a> isn\u2019t mentioned. It should make parts of these attacks much harder and while it\u2019s pretty new and not widely rolled out yet rpki-client and routinator support it already and some AS have implemented it as well. I think even a minor rollout of ASPA could help a lot because the attacker needs to eclipse all our connections, if just a few connections are hosted in an ASPA-enabled AS, then the attack becomes much harder. Quantifying that for the current adoption of ASPA and maybe a projected adoption a year from now would be very interesting. So this would also fit in with your prevention \u201cFavor peers in protected prefixes\u201d.</p>",
  "post_number": 6,
  "post_type": 1,
  "posts_count": 6,
  "updated_at": "2025-09-07T00:56:20.186Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 3,
  "readers_count": 2,
  "score": 0.6,
  "yours": false,
  "topic_id": 1965,
  "topic_slug": "eclipsing-bitcoin-nodes-with-bgp-interception-attacks",
  "topic_title": "Eclipsing Bitcoin Nodes with BGP Interception Attacks",
  "topic_html_title": "Eclipsing Bitcoin Nodes with BGP Interception Attacks",
  "category_id": 7,
  "display_username": "Fabian",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Thank you for this great work! It is great to see more research going into the impact of network level attacks on Bitcoin.\n\nI am dropping a few unordered thoughts here, feel free to ignore any of them if they are not useful:\n\n> Eclipse attacks: The goal of the attacker is to control all incoming and outgoing connections to a node. This allows the attacker to waste mining power, do selfish mining, double spend, attack Lightning, etc \\[[1](https://ihchoi12.github.io/assets/tran2020stealthier.pdf)\\]. This was previously done by polluting AddrMan\u2019s tables with IPs that the attacker controlled \\[[2](https://www.usenix.org/system/files/conference/usenixsecurity15/sec15-paper-heilman.pdf)\\], or was on the path to \\[[1](https://ihchoi12.github.io/assets/tran2020stealthier.pdf)\\]. Core has mitigated these eclipsing methods by making changes to AddrMan.\n\nIMO it should be noted for completeness that usage of BIP324 and StratumV2 is limiting the damage that an attacker can do if these attacks are explicitly named. Also I think the impact of alternative connection types like Tor or I2P would be interesting to evaluate. Having multiple tor peers may actually make the attack easier if the entry guard is being used consistently through out the attack. On the other hand, if there is one tor connection and multiple entry guards are used or rotated frequently then it makes it harder again.\n\n> Compromise or set up a new AS as close (in number of AS hops) to the victim node AS as possible.\n\nIt\u2019s not clear to me from the write-up if this is the same AS that is mentioned in the requirements or if this is a second one. I guess 1. is just the classic way of trying to evict and starting from 2. this is what you suggest as a new style of attack. I think the description could be a bit clearer to make clear if both of these styles need to be used or if that is not the case maybe mention the classic style rather as a footnote.\n\n> Sort IP prefixes by number of nodes and hijack them in succession at a rate that will not raise alarms.\n>\n> Hijack rate\n\nI am not a network engineer and I don\u2019t know what detection mechanisms there might be triggered but I would expect that being much more aggressive should yield higher success probability. Doing the attack as fast as possible should raise the success probability significantly since there is less other interference happening (node changing connections, new routes being made available etc.). In your numbers you assume the absolute worst case scenario (hijacking all prefixes), I think that can be more optimistic. A well organized attacker might do some probing without hijacking first, just using the bitcoin network, to make more informed choices about which prefixes to attack.\n\n> We find that the attacker can always successfully hijack 41.13% of node prefixes\n\nI find that a bit too strongly worded given that there are often additional filters in place that could prevent the shorter prefix from being successful. At least when there is a customer relationship this can be assumed to be the case. I would say that number is the worst case or make trying this type of hijack feasible.\n\nSide-note: I would be interested in that AS relationship dataset from CAIDA if you were able to get it ;) I wasn\u2019t successful but I only tried that form once a long time ago, seeing the link here reminded me of that.\n\n> \\[1-NT\\] Peer rotation\n\nI think Cons should mention that this also makes the classic eclipse attack easier in some ways because the attacker has more chances to become get into connection slots, right?\n\n> \\[4-T\\] Select at least one peer with the shortest path possible\n\nIt might be interesting to check if quickest ping response correlates well enough with shortest path so that this could replace needing to do traceroutes.\n\n> \\[5-T\\] Route-aware peer selection\n\nHm, but this would require periodic traceroutes on the peers that we are connected to as well not just candidates, right? A non-intercepted peer that we connect today could be intercepted tomorrow, right? So we might want to monitor if the routes change as well and then maybe prefer these for rotating them out in peer rotation? Not sure, I have to think about this some more.\n\n> exponentially favoring peers whose paths introduce new ASes earlier on.\n\nThis also could make the classic eclipse attack easier if the attacker can create some nodes in \u201cexotic\u201d locations (of the internet).\n\n> I would also like to hear people\u2019s thoughts on integrating traceroute functionality into core to enable the aforementioned mitigations.\n\nI think a lot a questions would need to be answered for this, for example: Can detection be  avoided with tunneling and if so what else do we have to do to detect that? And assuming traceroute itself works reasonably well, what would we do with connections if an anomaly is detected? I think you could propose some basic decision tree for this so this feature can be reasoned about on a conceptual level aside from collecting the data to evaluate if traceroute is technically reliable enough Also, afaict you are only proposing to use traceroute to detect outbound connection hijacks. If inbound is targeted instead we would need to use some other vantage point or so?\n\n> Mitigations\n\nI think the first thing that could be done would be to raise further awareness among node runners and bitcoin infrastructure providers. Educate them on this in a more accessible way and let them choose their hosters/ISPs accordingly (tight ROAs, ASPA) or let them contact their provider and request adoption of these features asap. This might be something interesting to collaborate bitcoin optech on.\n\nOverall, I am a bit surprised [ASPA](https://datatracker.ietf.org/doc/html/draft-ietf-sidrops-aspa-verification) isn\u2019t mentioned. It should make parts of these attacks much harder and while it\u2019s pretty new and not widely rolled out yet rpki-client and routinator support it already and some AS have implemented it as well. I think even a minor rollout of ASPA could help a lot because the attacker needs to eclipse all our connections, if just a few connections are hosted in an ASPA-enabled AS, then the attack becomes much harder. Quantifying that for the current adoption of ASPA and maybe a projected adoption a year from now would be very interesting. So this would also fit in with your prevention \u201cFavor peers in protected prefixes\u201d.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 205,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Thank you for this great work! It is great to see more research going into the impact of network level attacks on Bitcoin. \nI am dropping a few unordered thoughts here, feel free to ignore any of them if they are not useful: \n\nEclipse attacks: The goal of the attacker is to control all incoming and &hellip;",
  "truncated": true,
  "post_url": "/t/eclipsing-bitcoin-nodes-with-bgp-interception-attacks/1965/6",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}