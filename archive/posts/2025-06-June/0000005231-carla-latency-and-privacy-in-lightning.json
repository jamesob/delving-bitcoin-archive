{
  "id": 5231,
  "name": "Carla Kirk-Cohen",
  "username": "carla",
  "avatar_template": "/user_avatar/delvingbitcoin.org/carla/{size}/119_2.png",
  "created_at": "2025-06-05T18:59:02.249Z",
  "cooked": "<p>It seemed to be broadly agreed on in the spec meeting that in a world with receiver-side delays, we no longer need to rely forwarding delays for privacy against an on-path attacker, yay.\nWe should implement and deploy <a href=\"https://github.com/lightning/bolts/pull/1263\" rel=\"noopener nofollow ugc\">#1263</a>, and we\u2019ll get a nice improvement against a known attack.</p>\n<p>Once we\u2019re in a receiver-delay world, the main privacy purpose for forwarding delays is to make it more difficult for an off-path adversary to trace payments through the network. While [6] outlines a case that relies on running repeated pathfinding attempts to reduce the anonymity set and identify the sender/receiver, there could be other possible ways to try deanonymize senders/receivers in these traced paths. IMO we don\u2019t really have a good understanding of what these are; seems like a good direction for future research (and not something that we\u2019re going to know in the near term). I agree with the intuition that an adversary that\u2019s able to make these partial paths can start to mess with privacy is correct.</p>\n<p>An <em>actually effective</em> forwarding delay that aims to have more than one HTLC per batch seems like a very difficult number to pick. It\u2019s highly dependent on a node\u2019s traffic, which is likely quite variable during the day, and will change as channels open and close. Interested to hear whether anyone\u2019s aware of research that we could look at to inform picking such a value?</p>\n<p>It seems to me that message padding and some degree of cover traffic (dandelion for LN?) offer better privacy protections than forwarding delays because:</p>\n<ol>\n<li>They\u2019d offer protection to nodes on the edges of the graph that have less traffic (unlikely to be able to batch otherwise).</li>\n<li>A bandwidth/privacy tradeoff is probably more palatable to forwarding nodes than a latency/privacy one (adding 30 GB egress to AWS is like $3), so they\u2019re more likely to adhere to this measure.</li>\n<li>An attacker can probe latency without attributable failures (albeit at a cost, in an unconditional fee world)</li>\n</ol>\n<p>All that to say, it\u2019s not obvious to me that we\u2019re closing ourselves off to future privacy improvements because (IMO) forwarding delays seem to be the least promising of the mitigations available to us.</p>\n<p>Would folks consider leaving ms encoding and adding a sender-side advisory in the specification not to penalize hops under some threshold (300ms)? That provides a default that doesn\u2019t put downward pressure on forwarding delays that\u2019s more flexible in the future - if we find out that there\u2019s no privacy problem, we can remove the sender instruction, and if we find out there is one we can ship a new default pretty easily.</p>\n<p>I think it\u2019s reasonable to believe that the majority of the network will run with this default (likely, without even knowing it\u2019s there).</p>",
  "post_number": 32,
  "post_type": 1,
  "posts_count": 39,
  "updated_at": "2025-06-05T19:01:49.972Z",
  "reply_count": 2,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 12,
  "readers_count": 11,
  "score": 12.2,
  "yours": false,
  "topic_id": 1723,
  "topic_slug": "latency-and-privacy-in-lightning",
  "topic_title": "Latency and Privacy in Lightning",
  "topic_html_title": "Latency and Privacy in Lightning",
  "category_id": 7,
  "display_username": "Carla Kirk-Cohen",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": "",
  "bookmarked": false,
  "raw": "\nIt seemed to be broadly agreed on in the spec meeting that in a world with receiver-side delays, we no longer need to rely forwarding delays for privacy against an on-path attacker, yay.\nWe should implement and deploy [#1263](https://github.com/lightning/bolts/pull/1263), and we'll get a nice improvement against a known attack.\n\nOnce we're in a receiver-delay world, the main privacy purpose for forwarding delays is to make it more difficult for an off-path adversary to trace payments through the network. While [6] outlines a case that relies on running repeated pathfinding attempts to reduce the anonymity set and identify the sender/receiver, there could be other possible ways to try deanonymize senders/receivers in these traced paths. IMO we don't really have a good understanding of what these are; seems like a good direction for future research (and not something that we're going to know in the near term). I agree with the intuition that an adversary that's able to make these partial paths can start to mess with privacy is correct.\n\nAn _actually effective_ forwarding delay that aims to have more than one HTLC per batch seems like a very difficult number to pick. It's highly dependent on a node's traffic, which is likely quite variable during the day, and will change as channels open and close. Interested to hear whether anyone's aware of research that we could look at to inform picking such a value?\n\nIt seems to me that message padding and some degree of cover traffic (dandelion for LN?) offer better privacy protections than forwarding delays because:\n1. They'd offer protection to nodes on the edges of the graph that have less traffic (unlikely to be able to batch otherwise).\n2. A bandwidth/privacy tradeoff is probably more palatable to forwarding nodes than a latency/privacy one (adding 30 GB egress to AWS is like $3), so they're more likely to adhere to this measure.\n3. An attacker can probe latency without attributable failures (albeit at a cost, in an unconditional fee world)\n\nAll that to say, it's not obvious to me that we're closing ourselves off to future privacy improvements because (IMO) forwarding delays seem to be the least promising of the mitigations available to us.\n\nWould folks consider leaving ms encoding and adding a sender-side advisory in the specification not to penalize hops under some threshold (300ms)? That provides a default that doesn't put downward pressure on forwarding delays that's more flexible in the future - if we find out that there's no privacy problem, we can remove the sender instruction, and if we find out there is one we can ship a new default pretty easily.\n\nI think it's reasonable to believe that the majority of the network will run with this default (likely, without even knowing it's there).",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 124,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "It seemed to be broadly agreed on in the spec meeting that in a world with receiver-side delays, we no longer need to rely forwarding delays for privacy against an on-path attacker, yay.\nWe should implement and deploy <a href=\"https://github.com/lightning/bolts/pull/1263\" rel=\"noopener nofollow ugc\">#1263</a>, and we\u2019ll get a nice improvement against a known attack. \nOnce we\u2019re in a r&hellip;",
  "truncated": true,
  "post_url": "/t/latency-and-privacy-in-lightning/1723/32",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}