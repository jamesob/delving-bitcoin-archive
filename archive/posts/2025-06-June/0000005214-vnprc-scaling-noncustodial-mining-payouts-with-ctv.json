{
  "id": 5214,
  "name": "Evan",
  "username": "vnprc",
  "avatar_template": "/user_avatar/delvingbitcoin.org/vnprc/{size}/983_2.png",
  "created_at": "2025-06-04T20:10:13.925Z",
  "cooked": "<p>GM</p>\n<p>I have been thinking a lot about mining pools lately. It\u2019s fun because the design space of architectures, protocols, and payout mechanisms is wide open. One useful mental framework I have found is to categorize mining pools into two groups:</p>\n<ul>\n<li>pools that custody mining rewards</li>\n<li>pools that do not</li>\n</ul>\n<p>A quick perusal of mempool.space makes it abundantly clear that every pool except Ocean is a custodial pool.</p>\n<p>Here is a typical <a href=\"https://mempool.space/tx/46f4013cefeab285fbd6bff2443070c1dfd2384284bfaa4edf531c30470be535\" rel=\"noopener nofollow ugc\">custodial coinbase</a> weighing in at 471 bytes. Notice they peel off the rare sat at the start of the block and the rest of the newly mined bitcoin flows into a single wallet address. If you click through to that address you can see it contained a whole bunch of coinbase outputs that were eventually consolidated.</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://delvingbitcoin.org/uploads/default/original/2X/4/4b6abe96985bde7db6cd17477da94b4969268871.png\" data-download-href=\"https://delvingbitcoin.org/uploads/default/4b6abe96985bde7db6cd17477da94b4969268871\" title=\"image\"><img src=\"https://delvingbitcoin.org/uploads/default/optimized/2X/4/4b6abe96985bde7db6cd17477da94b4969268871_2_690x300.png\" alt=\"image\" data-base62-sha1=\"aLavzHNTyLwIRYADOsZvewjBzZn\" width=\"690\" height=\"300\" srcset=\"https://delvingbitcoin.org/uploads/default/optimized/2X/4/4b6abe96985bde7db6cd17477da94b4969268871_2_690x300.png, https://delvingbitcoin.org/uploads/default/optimized/2X/4/4b6abe96985bde7db6cd17477da94b4969268871_2_1035x450.png 1.5x, https://delvingbitcoin.org/uploads/default/original/2X/4/4b6abe96985bde7db6cd17477da94b4969268871.png 2x\" data-dominant-color=\"26254F\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">1140\u00d7497 24.5 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>Here is a 2.28 kilobyte <a href=\"https://mempool.space/tx/6935c08c2ba63affab916b5d255471d30733278c5709ed3042b086339a9dcd59\" rel=\"noopener nofollow ugc\">noncustodial coinbase</a> containing 62 outputs.</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://delvingbitcoin.org/uploads/default/original/2X/5/56e77cb8a1937bb800fc2895f603df11dc279921.jpeg\" data-download-href=\"https://delvingbitcoin.org/uploads/default/56e77cb8a1937bb800fc2895f603df11dc279921\" title=\"Screenshot from 2025-06-04 11-27-33\"><img src=\"https://delvingbitcoin.org/uploads/default/optimized/2X/5/56e77cb8a1937bb800fc2895f603df11dc279921_2_530x500.jpeg\" alt=\"Screenshot from 2025-06-04 11-27-33\" data-base62-sha1=\"coN1kzrC60QtBMD8pxWEx21cY25\" width=\"530\" height=\"500\" srcset=\"https://delvingbitcoin.org/uploads/default/optimized/2X/5/56e77cb8a1937bb800fc2895f603df11dc279921_2_530x500.jpeg, https://delvingbitcoin.org/uploads/default/optimized/2X/5/56e77cb8a1937bb800fc2895f603df11dc279921_2_795x750.jpeg 1.5x, https://delvingbitcoin.org/uploads/default/optimized/2X/5/56e77cb8a1937bb800fc2895f603df11dc279921_2_1060x1000.jpeg 2x\" data-dominant-color=\"212243\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Screenshot from 2025-06-04 11-27-33</span><span class=\"informations\">1140\u00d71075 166 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>At btc++ last month I attended this <a href=\"https://www.youtube.com/watch?v=EKQvDfmQkt8&amp;t=8910s\" rel=\"noopener nofollow ugc\">excellent talk</a> on the design of the DATUM protocol and I was very surprised to learn how difficult it is for Ocean to provide these noncustodial fanout transactions. The vast majority of the problem is Antminer firmware restrictions on the size of the coinbase.</p>\n<p>In order to work around this limitation Ocean not only has to fingerprint miner hardware and keep track of multiple work templates per account but they are also unable to tightly control the coinbase of the blocks their miners produce. Open source ASIC firmware like Bitaxe\u2019s <a href=\"https://github.com/bitaxeorg/ESP-Miner\" rel=\"noopener nofollow ugc\">ESP-miner</a> allows a very large coinbase transaction, limited only by the available memory on the ESP. But Antminer firmware is the most restrictive, allowing just over a dozen outputs in the coinbase.</p>\n<p>Here is an example of a 784 byte Ocean <a href=\"https://mempool.space/tx/990c417e5bc97412a2e1f3197cde239e72f96e1c1a3f1fe81f48d3ba2571f4fb\" rel=\"noopener nofollow ugc\">coinbase tx</a> containing 16 payouts. No doubt this block was produced by an ASIC appliance running handicapped firmware.</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://delvingbitcoin.org/uploads/default/original/2X/8/8c6b1b607a1ee07f8f9551846b2fe5df6d09e6b7.png\" data-download-href=\"https://delvingbitcoin.org/uploads/default/8c6b1b607a1ee07f8f9551846b2fe5df6d09e6b7\" title=\"image\"><img src=\"https://delvingbitcoin.org/uploads/default/optimized/2X/8/8c6b1b607a1ee07f8f9551846b2fe5df6d09e6b7_2_690x300.png\" alt=\"image\" data-base62-sha1=\"k2cjVyF4NG8jpu5K1hYZCeuKcAv\" width=\"690\" height=\"300\" srcset=\"https://delvingbitcoin.org/uploads/default/optimized/2X/8/8c6b1b607a1ee07f8f9551846b2fe5df6d09e6b7_2_690x300.png, https://delvingbitcoin.org/uploads/default/optimized/2X/8/8c6b1b607a1ee07f8f9551846b2fe5df6d09e6b7_2_1035x450.png 1.5x, https://delvingbitcoin.org/uploads/default/original/2X/8/8c6b1b607a1ee07f8f9551846b2fe5df6d09e6b7.png 2x\" data-dominant-color=\"25254E\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">1140\u00d7497 46.8 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>It occurs to me that CTV nukes this problem from orbit. If CTV were active on mainnet the coinbase could include a single tiny consensus-enforced commitment to a fanout transaction of arbitrary size.</p>\n<p>After the conference I took the time to hack together this <a href=\"https://github.com/vnprc/coinbase-playground\" rel=\"noopener nofollow ugc\">Coinbase Playground</a> environment to explore the possibilities. It\u2019s rough around the edges because it was a hackathon project but I believe the concept is extremely sound.</p>\n<p>Benefits:</p>\n<ol>\n<li>Eliminate the ability of hostile ASIC firmware vendors to handicap non-custodial mining pools.</li>\n<li>Enable non-custodial mining payouts of any size, down to the dust limit.</li>\n<li>Maximize fee revenue in each block the pool mines. (The level of elegance of this incentive alignment pleases me greatly.)</li>\n</ol>\n<p>Drawbacks:</p>\n<ol>\n<li>Users must get additional transactions mined to claim their rewards</li>\n<li>Someone must make the unroll transaction data available</li>\n</ol>\n<p>The first transaction I scripted was designed to be a straightforward upgrade to Ocean\u2019s coinbase fanouts that prioritizes ergonomics and usability. It is a 179 byte coinbase transaction that spends to a CTV unroll transaction with up to 319 payment outputs and one anchor output. This was the maximum size fanout I could produce (10 kilobytes) before running into mempool policy limits. I set the fee rate to 1 sat/vb so the pool can immediately broadcast it to the mempool where it will sit for 100 blocks until it becomes valid to mine.</p>\n<p>This design leverages the mempool to solve for data availability. Users can either wait for the mempool to empty out or use the anchor output to CPFP fee bump it. They could potentially use <code>SIGHASH_ANYONECANPAY</code> to crowdsource the fees. You can tweak this design in various ways, for example by dropping the anchor output or violating policy rules to add more outputs or remove the fee (although this reintroduces the data availability problem). Bike shedding aside, I think it lays a pretty solid foundation to build upon.</p>\n<p>Next I began experimenting with nested CTV transactions. I built a very basic 4 leaf tree before I ran out of time. I think there is a very interesting design space here if we use n-of-n musig keys in the keypath. This would enable owners of the outputs to swap off-chain bitcoin for the signatures of their leaf siblings and collapse the subtrees into larger outputs with lower on-chain fees. This design, however, introduces a difficult coordination problem because you can only negotiate with the siblings of your leaf outputs.</p>\n<p>Perhaps an even more promising avenue of research is to use CTV+CSFS to create rebindable commitments to the tree structure. In this way the output owners can spend the 100 blocks after confirmation auctioning their noncustodial coinbase outputs in exchange for off-chain payments. This would be a categorical improvement over traditional coin mixers because coinbase outputs, unlike coinjoin outputs, have no transaction history.</p>\n<p>This design also brings significant coordination challenges because all signers must agree to state updates. Perhaps there is a middle ground using nested CTV commitments to limit the set of signers. I intend to continue exploring the possible designs in this space.</p>\n<p>One criticism I received was that we should change the firmware rather than change bitcoin. I disagree with this argument because history has shown that it is, in fact, easier to change bitcoin than to change Bitmain hardware or firmware. (Shoutout gmax! <img src=\"https://delvingbitcoin.org/images/emoji/twitter/goat.png?v=14\" title=\":goat:\" class=\"emoji\" alt=\":goat:\" loading=\"lazy\" width=\"20\" height=\"20\">ed.)</p>\n<p>What do y\u2019all think? I am very interested to receive constructive criticism or tips on designing transactions or bitcoin scripts since this is a new endeavor for me.</p>",
  "post_number": 1,
  "post_type": 1,
  "posts_count": 17,
  "updated_at": "2025-06-04T20:12:32.219Z",
  "reply_count": 2,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 364,
  "reads": 55,
  "readers_count": 54,
  "score": 1936.0,
  "yours": false,
  "topic_id": 1753,
  "topic_slug": "scaling-noncustodial-mining-payouts-with-ctv",
  "topic_title": "Scaling Noncustodial Mining Payouts with CTV",
  "topic_html_title": "Scaling Noncustodial Mining Payouts with CTV",
  "category_id": 7,
  "display_username": "Evan",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": "",
  "bookmarked": false,
  "raw": "GM\n\nI have been thinking a lot about mining pools lately. It's fun because the design space of architectures, protocols, and payout mechanisms is wide open. One useful mental framework I have found is to categorize mining pools into two groups:\n- pools that custody mining rewards\n- pools that do not\n\nA quick perusal of mempool.space makes it abundantly clear that every pool except Ocean is a custodial pool.\n\nHere is a typical [custodial coinbase](https://mempool.space/tx/46f4013cefeab285fbd6bff2443070c1dfd2384284bfaa4edf531c30470be535) weighing in at 471 bytes. Notice they peel off the rare sat at the start of the block and the rest of the newly mined bitcoin flows into a single wallet address. If you click through to that address you can see it contained a whole bunch of coinbase outputs that were eventually consolidated.\n\n![image|690x300](upload://aLavzHNTyLwIRYADOsZvewjBzZn.png)\n\nHere is a 2.28 kilobyte [noncustodial coinbase](https://mempool.space/tx/6935c08c2ba63affab916b5d255471d30733278c5709ed3042b086339a9dcd59) containing 62 outputs.\n\n![Screenshot from 2025-06-04 11-27-33|530x500](upload://coN1kzrC60QtBMD8pxWEx21cY25.jpeg)\n\nAt btc++ last month I attended this [excellent talk](https://www.youtube.com/watch?v=EKQvDfmQkt8&t=8910s) on the design of the DATUM protocol and I was very surprised to learn how difficult it is for Ocean to provide these noncustodial fanout transactions. The vast majority of the problem is Antminer firmware restrictions on the size of the coinbase.\n\nIn order to work around this limitation Ocean not only has to fingerprint miner hardware and keep track of multiple work templates per account but they are also unable to tightly control the coinbase of the blocks their miners produce. Open source ASIC firmware like Bitaxe's [ESP-miner](https://github.com/bitaxeorg/ESP-Miner) allows a very large coinbase transaction, limited only by the available memory on the ESP. But Antminer firmware is the most restrictive, allowing just over a dozen outputs in the coinbase.\n\nHere is an example of a 784 byte Ocean [coinbase tx](https://mempool.space/tx/990c417e5bc97412a2e1f3197cde239e72f96e1c1a3f1fe81f48d3ba2571f4fb) containing 16 payouts. No doubt this block was produced by an ASIC appliance running handicapped firmware.\n\n![image|690x300](upload://k2cjVyF4NG8jpu5K1hYZCeuKcAv.png)\n\nIt occurs to me that CTV nukes this problem from orbit. If CTV were active on mainnet the coinbase could include a single tiny consensus-enforced commitment to a fanout transaction of arbitrary size.\n\nAfter the conference I took the time to hack together this [Coinbase Playground](https://github.com/vnprc/coinbase-playground) environment to explore the possibilities. It's rough around the edges because it was a hackathon project but I believe the concept is extremely sound.\n\nBenefits:\n1. Eliminate the ability of hostile ASIC firmware vendors to handicap non-custodial mining pools.\n1. Enable non-custodial mining payouts of any size, down to the dust limit.\n1. Maximize fee revenue in each block the pool mines. (The level of elegance of this incentive alignment pleases me greatly.)\n\nDrawbacks:\n1. Users must get additional transactions mined to claim their rewards\n1. Someone must make the unroll transaction data available\n\nThe first transaction I scripted was designed to be a straightforward upgrade to Ocean's coinbase fanouts that prioritizes ergonomics and usability. It is a 179 byte coinbase transaction that spends to a CTV unroll transaction with up to 319 payment outputs and one anchor output. This was the maximum size fanout I could produce (10 kilobytes) before running into mempool policy limits. I set the fee rate to 1 sat/vb so the pool can immediately broadcast it to the mempool where it will sit for 100 blocks until it becomes valid to mine.\n\nThis design leverages the mempool to solve for data availability. Users can either wait for the mempool to empty out or use the anchor output to CPFP fee bump it. They could potentially use `SIGHASH_ANYONECANPAY` to crowdsource the fees. You can tweak this design in various ways, for example by dropping the anchor output or violating policy rules to add more outputs or remove the fee (although this reintroduces the data availability problem). Bike shedding aside, I think it lays a pretty solid foundation to build upon.\n\nNext I began experimenting with nested CTV transactions. I built a very basic 4 leaf tree before I ran out of time. I think there is a very interesting design space here if we use n-of-n musig keys in the keypath. This would enable owners of the outputs to swap off-chain bitcoin for the signatures of their leaf siblings and collapse the subtrees into larger outputs with lower on-chain fees. This design, however, introduces a difficult coordination problem because you can only negotiate with the siblings of your leaf outputs.\n\nPerhaps an even more promising avenue of research is to use CTV+CSFS to create rebindable commitments to the tree structure. In this way the output owners can spend the 100 blocks after confirmation auctioning their noncustodial coinbase outputs in exchange for off-chain payments. This would be a categorical improvement over traditional coin mixers because coinbase outputs, unlike coinjoin outputs, have no transaction history.\n\nThis design also brings significant coordination challenges because all signers must agree to state updates. Perhaps there is a middle ground using nested CTV commitments to limit the set of signers. I intend to continue exploring the possible designs in this space.\n\nOne criticism I received was that we should change the firmware rather than change bitcoin. I disagree with this argument because history has shown that it is, in fact, easier to change bitcoin than to change Bitmain hardware or firmware. (Shoutout gmax! \ud83d\udc10ed.)\n\nWhat do y'all think? I am very interested to receive constructive criticism or tips on designing transactions or bitcoin scripts since this is a new endeavor for me.",
  "actions_summary": [
    {
      "id": 2,
      "count": 7
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 503,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "GM \nI have been thinking a lot about mining pools lately. It\u2019s fun because the design space of architectures, protocols, and payout mechanisms is wide open. One useful mental framework I have found is to categorize mining pools into two groups: \n\npools that custody mining rewards\npools that do not\n\nA&hellip;",
  "truncated": true,
  "post_url": "/t/scaling-noncustodial-mining-payouts-with-ctv/1753/1",
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 4
    },
    {
      "id": "heart",
      "type": "emoji",
      "count": 2
    },
    {
      "id": "rocket",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 7,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null,
  "can_vote": false
}