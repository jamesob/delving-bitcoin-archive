{
  "id": 5285,
  "name": "Sjors Provoost",
  "username": "sjors",
  "avatar_template": "/user_avatar/delvingbitcoin.org/sjors/{size}/59_2.png",
  "created_at": "2025-06-12T07:04:15.620Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"sanket1729\" data-post=\"3\" data-topic=\"1766\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/sanket1729/48/13_2.png\" class=\"avatar\"> sanket1729:</div>\n<blockquote>\n<p>FTR, I am slowly warming to <a class=\"mention\" href=\"/u/salvatoshi\">@salvatoshi</a>\u2019s view that descriptors might be the wrong language to play with this.</p>\n</blockquote>\n</aside>\n<p>I agree for the general case. However it\u2019s been about 6 years since outputs descriptors were proposed for Bitcoin Core and we\u2019re just barely getting around to proper MuSig2 support. Inventing a whole new paradigm probably means we won\u2019t have working vaults (in Bitcoin Core) for a decade. (to be fair, there were other factors contributing to the long timeline, and with more developers involved it might go faster next time)</p>\n<aside class=\"quote no-group\" data-username=\"sanket1729\" data-post=\"3\" data-topic=\"1766\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/sanket1729/48/13_2.png\" class=\"avatar\"> sanket1729:</div>\n<blockquote>\n<p>Descriptors <strong>must</strong> convey <strong>all</strong> the information necessary to spend the output.</p>\n</blockquote>\n</aside>\n<p>Perhaps this requirement can be relaxed to allow looking up information in the blockchain. In Bitcoin Core at least the implementation of descriptors comes with a cache. Right now that\u2019s a simple cache of just the derived keys at each index, as well as the most recently used height.</p>\n<p>So the wallet could look for coins that match the top level descriptor, then detect spends that use the <code>ctv()</code> branch and reconstruct everything needed for the CTV hash. For that reconstruction to work we\u2019d need some opinionated defaults, e.g. the <code>nlocktime</code> needs to match the <code>nlocktime </code> of the original transaction, or the <code>ctv()</code> fragment has an optional locktime offset argument.</p>\n<p>I think the most important requirement from a usability perspective is that you only to have to backup your descriptors once in the lifetime of a wallet. It\u2019s fine if the wallet generates additional descriptors such as the <code>ctv_tx()</code> when it needs to, as long as those can be regenerated from a backup (and anything in the blockchain).</p>",
  "post_number": 5,
  "post_type": 1,
  "posts_count": 6,
  "updated_at": "2025-06-12T07:07:37.257Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 10,
  "readers_count": 9,
  "score": 2.0,
  "yours": false,
  "topic_id": 1766,
  "topic_slug": "ctv-vault-output-descriptor",
  "topic_title": "CTV vault output descriptor",
  "topic_html_title": "CTV vault output descriptor",
  "category_id": 8,
  "display_username": "Sjors Provoost",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"sanket1729, post:3, topic:1766\"]\nFTR, I am slowly warming to @salvatoshi\u2019s view that descriptors might be the wrong language to play with this.\n[/quote]\n\nI agree for the general case. However it's been about 6 years since outputs descriptors were proposed for Bitcoin Core and we're just barely getting around to proper MuSig2 support. Inventing a whole new paradigm probably means we won't have working vaults (in Bitcoin Core) for a decade. (to be fair, there were other factors contributing to the long timeline, and with more developers involved it might go faster next time)\n\n[quote=\"sanket1729, post:3, topic:1766\"]\nDescriptors **must** convey **all** the information necessary to spend the output.\n[/quote]\n\nPerhaps this requirement can be relaxed to allow looking up information in the blockchain. In Bitcoin Core at least the implementation of descriptors comes with a cache. Right now that's a simple cache of just the derived keys at each index, as well as the most recently used height.\n\nSo the wallet could look for coins that match the top level descriptor, then detect spends that use the `ctv()` branch and reconstruct everything needed for the CTV hash. For that reconstruction to work we'd need some opinionated defaults, e.g. the `nlocktime` needs to match the `nlocktime ` of the original transaction, or the `ctv()` fragment has an optional locktime offset argument.\n\nI think the most important requirement from a usability perspective is that you only to have to backup your descriptors once in the lifetime of a wallet. It's fine if the wallet generates additional descriptors such as the `ctv_tx()` when it needs to, as long as those can be regenerated from a backup (and anything in the blockchain).",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 71,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "I agree for the general case. However it\u2019s been about 6 years since outputs descriptors were proposed for Bitcoin Core and we\u2019re just barely getting around to proper MuSig2 support. Inventing a whole new paradigm probably means we won\u2019t have working vaults (in Bitcoin Core) for a decade. (to be fai&hellip;",
  "truncated": true,
  "post_url": "/t/ctv-vault-output-descriptor/1766/5",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}