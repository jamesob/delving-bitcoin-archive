{
  "id": 5238,
  "name": "Bastien Teinturier",
  "username": "t-bast",
  "avatar_template": "/user_avatar/delvingbitcoin.org/t-bast/{size}/98_2.png",
  "created_at": "2025-06-06T09:03:28.630Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"joostjager\" data-post=\"36\" data-topic=\"1723\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/j/779978/48.png\" class=\"avatar\"> joostjager:</div>\n<blockquote>\n<p>Routing nodes are naturally incentivized to minimize latency.</p>\n</blockquote>\n</aside>\n<p>I don\u2019t think that this is correct, or as clear-cut as you think: can you detail what makes you think that? The main performance bottleneck for routing nodes is by far disk IO (database operations) that happens when <code>commitment_signed</code> is sent. Nodes are thus incentivized to batch HTLCs to minimize this disk IO, especially when they route a lot of payments. Even if they don\u2019t route a lot of payments, they cannot know when the next HTLC will come: so it is a sound strategy to wait for a small random duration before signing, in case another HTLC comes in.</p>\n<p>Interestingly, since such batching reduces the frequency of disk IO, it provides more stable latency. The end result is a higher median latency (ie not chasing every millisecond) but a smaller standard deviation.</p>\n<p>The batching interval really depends on the expected frequency of payments relative to the performance of the DB. But I believe that if lightning is successful at being a payment network, it doesn\u2019t have to be a huge value? I think that we can use a value that provides a good enough payment UX while providing good node performance.</p>\n<aside class=\"quote no-group\" data-username=\"carla\" data-post=\"32\" data-topic=\"1723\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/carla/48/119_2.png\" class=\"avatar\"> carla:</div>\n<blockquote>\n<p>It seems to me that message padding and some degree of cover traffic (dandelion for LN?) offer better privacy protections than forwarding delays because:</p>\n</blockquote>\n</aside>\n<p>I agree with you. Based on my current understanding, my preferred choice would be:</p>\n<ul>\n<li>receiver-side random delays</li>\n<li>sender-side random delay on retries</li>\n<li>small randomized batching interval at intermediate nodes (mostly for performance, but also to add a small amount of noise of relay latency)</li>\n<li>random message padding / cover traffic (which I think doesn\u2019t have to be CBR to be effective)</li>\n</ul>\n<p>As you say, this doesn\u2019t rule out the current 1ms encoding for attributable failures. But I\u2019d be curious to have <a class=\"mention\" href=\"/u/mattcorallo\">@MattCorallo</a> and <a class=\"mention\" href=\"/u/tnull\">@tnull</a>\u2019s thoughts here: they mentioned during the spec meeting that intermediate forwarding delays are important for privacy even when we have random message padding and cover traffic, and I don\u2019t understand why. So I may be missing something important.</p>",
  "post_number": 37,
  "post_type": 1,
  "posts_count": 39,
  "updated_at": "2025-06-06T09:03:28.630Z",
  "reply_count": 3,
  "reply_to_post_number": 36,
  "quote_count": 2,
  "incoming_link_count": 0,
  "reads": 9,
  "readers_count": 8,
  "score": 61.8,
  "yours": false,
  "topic_id": 1723,
  "topic_slug": "latency-and-privacy-in-lightning",
  "topic_title": "Latency and Privacy in Lightning",
  "topic_html_title": "Latency and Privacy in Lightning",
  "category_id": 7,
  "display_username": "Bastien Teinturier",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"joostjager, post:36, topic:1723\"]\nRouting nodes are naturally incentivized to minimize latency.\n[/quote]\n\nI don't think that this is correct, or as clear-cut as you think: can you detail what makes you think that? The main performance bottleneck for routing nodes is by far disk IO (database operations) that happens when `commitment_signed` is sent. Nodes are thus incentivized to batch HTLCs to minimize this disk IO, especially when they route a lot of payments. Even if they don't route a lot of payments, they cannot know when the next HTLC will come: so it is a sound strategy to wait for a small random duration before signing, in case another HTLC comes in.\n\nInterestingly, since such batching reduces the frequency of disk IO, it provides more stable latency. The end result is a higher median latency (ie not chasing every millisecond) but a smaller standard deviation.\n\nThe batching interval really depends on the expected frequency of payments relative to the performance of the DB. But I believe that if lightning is successful at being a payment network, it doesn't have to be a huge value? I think that we can use a value that provides a good enough payment UX while providing good node performance.\n\n[quote=\"carla, post:32, topic:1723\"]\nIt seems to me that message padding and some degree of cover traffic (dandelion for LN?) offer better privacy protections than forwarding delays because:\n[/quote]\n\nI agree with you. Based on my current understanding, my preferred choice would be:\n\n- receiver-side random delays\n- sender-side random delay on retries\n- small randomized batching interval at intermediate nodes (mostly for performance, but also to add a small amount of noise of relay latency)\n- random message padding / cover traffic (which I think doesn't have to be CBR to be effective)\n\nAs you say, this doesn't rule out the current 1ms encoding for attributable failures. But I'd be curious to have @MattCorallo and @tnull's thoughts here: they mentioned during the spec meeting that intermediate forwarding delays are important for privacy even when we have random message padding and cover traffic, and I don't understand why. So I may be missing something important.",
  "actions_summary": [
    {
      "id": 2,
      "count": 3
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 101,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "I don\u2019t think that this is correct, or as clear-cut as you think: can you detail what makes you think that? The main performance bottleneck for routing nodes is by far disk IO (database operations) that happens when commitment_signed is sent. Nodes are thus incentivized to batch HTLCs to minimize t&hellip;",
  "truncated": true,
  "post_url": "/t/latency-and-privacy-in-lightning/1723/37",
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 3
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 3,
  "current_user_used_main_reaction": false
}