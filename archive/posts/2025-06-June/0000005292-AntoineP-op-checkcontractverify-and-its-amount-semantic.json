{
  "id": 5292,
  "name": "Antoine Poinsot",
  "username": "AntoineP",
  "avatar_template": "/user_avatar/delvingbitcoin.org/antoinep/{size}/483_2.png",
  "created_at": "2025-06-13T13:12:08.835Z",
  "cooked": "<p>Nice, good to see more practical exploration on this.</p>\n<aside class=\"quote no-group\" data-username=\"halseth\" data-post=\"12\" data-topic=\"1527\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/halseth/48/198_2.png\" class=\"avatar\"> halseth:</div>\n<blockquote>\n<p>With this approach you would reduce the CCV opcode to just do \u201cannex assertion\u201d not really caring what the annex means. I believe that would make it easier to add more meaning to the annex at a later point (via a soft fork) and immediately have it available for assertion by CCV without touching the script engine.</p>\n</blockquote>\n</aside>\n<p>I think my preference would be to separate concerns entirely and have an opcode that does the assertion. <code>OP_CHECKAMOUNT</code>? Then CCV can take care of the scripts.</p>",
  "post_number": 13,
  "post_type": 1,
  "posts_count": 13,
  "updated_at": "2025-06-13T13:12:08.835Z",
  "reply_count": 0,
  "reply_to_post_number": 12,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 5,
  "readers_count": 4,
  "score": 1.0,
  "yours": false,
  "topic_id": 1527,
  "topic_slug": "op-checkcontractverify-and-its-amount-semantic",
  "topic_title": "OP_CHECKCONTRACTVERIFY and its amount semantic",
  "topic_html_title": "OP_CHECKCONTRACTVERIFY and its amount semantic",
  "category_id": 7,
  "display_username": "Antoine Poinsot",
  "primary_group_name": null,
  "flair_name": "wg-consensus-cleanup",
  "flair_url": "/uploads/default/original/1X/856d779f9ec58484f3a96285a21a813538b689f6.png",
  "flair_bg_color": "",
  "flair_color": "",
  "flair_group_id": 43,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": "Regular",
  "title_is_group": false,
  "bookmarked": false,
  "raw": "Nice, good to see more practical exploration on this.\n\n[quote=\"halseth, post:12, topic:1527\"]\nWith this approach you would reduce the CCV opcode to just do \u201cannex assertion\u201d not really caring what the annex means. I believe that would make it easier to add more meaning to the annex at a later point (via a soft fork) and immediately have it available for assertion by CCV without touching the script engine.\n[/quote]\n\nI think my preference would be to separate concerns entirely and have an opcode that does the assertion. `OP_CHECKAMOUNT`? Then CCV can take care of the scripts.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 12,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Nice, good to see more practical exploration on this. \n\nI think my preference would be to separate concerns entirely and have an opcode that does the assertion. OP_CHECKAMOUNT? Then CCV can take care of the scripts.",
  "truncated": true,
  "post_url": "/t/op-checkcontractverify-and-its-amount-semantic/1527/13",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}