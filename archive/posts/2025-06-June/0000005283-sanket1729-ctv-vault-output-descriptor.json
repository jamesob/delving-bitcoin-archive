{
  "id": 5283,
  "name": "Sanket Kanjalkar",
  "username": "sanket1729",
  "avatar_template": "/user_avatar/delvingbitcoin.org/sanket1729/{size}/13_2.png",
  "created_at": "2025-06-12T01:11:15.704Z",
  "cooked": "<p>FTR, I am slowly warming to <a class=\"mention\" href=\"/u/salvatoshi\">@salvatoshi</a>\u2019s view that descriptors might be the wrong language to play with this. But I\u2019m still exploring the idea as mentioned in the post. Descriptors <strong>must</strong> convey <strong>all</strong> the information necessary to spend the output.</p>\n<blockquote>\n<aside class=\"quote no-group quote-modified\" data-username=\"sjors\" data-post=\"1\" data-topic=\"1766\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/sjors/48/59_2.png\" class=\"avatar\"> sjors:</div>\n<blockquote>\n<p><code>tr(musig(A, B), {and_v(pk(A), ctv(musig(A, B), {unvault_cold, unvault_hot}), ...)})</code></p>\n</blockquote>\n</aside>\n</blockquote>\n<p>CTV spec specifies a bunch of other fields that are going to be hashed. For example, we need to decide what sequence value to set for the transaction, as well as the complete serialization of all inputs and outputs. If we don\u2019t store all of this information, then we don\u2019t satisfy the property that descriptors must contain all the information required to spend from it.</p>\n<p>One naive attempt could be to encode the entire transaction as hex in the descriptor. But we still want the flexibility to express BIP32 keys in there. Maybe if we had a new <code>ctv_tx</code> fragment in the descriptor language that looks like:</p>\n<pre><code class=\"lang-auto\">ctv_tx(version, nlocktime, inputs_hash, [out_desc1, out_desc2, ...])\n</code></pre>\n<p>where each <code>out_desc_i</code> is a BIP380 descriptor in itself, that would be a complete specification. This is clearly clunky, and maybe with some work we can simplify the fragment for common use cases. But in any such simplification, we must preserve the property that the descriptor contains all information required to spend the output. (minus the private key of course).</p>\n<aside class=\"quote no-group\" data-username=\"sjors\" data-post=\"1\" data-topic=\"1766\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/sjors/48/59_2.png\" class=\"avatar\"> sjors:</div>\n<blockquote>\n<p>Assuming the above makes any sense, it\u2019d love to see someone implement it\u2026</p>\n</blockquote>\n</aside>\n<p>Happy to try to do this once I get some spare time</p>",
  "post_number": 3,
  "post_type": 1,
  "posts_count": 4,
  "updated_at": "2025-06-12T01:11:15.704Z",
  "reply_count": 1,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 8,
  "readers_count": 7,
  "score": 6.6,
  "yours": false,
  "topic_id": 1766,
  "topic_slug": "ctv-vault-output-descriptor",
  "topic_title": "CTV vault output descriptor",
  "topic_html_title": "CTV vault output descriptor",
  "category_id": 8,
  "display_username": "Sanket Kanjalkar",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "FTR, I am slowly warming to @salvatoshi's view that descriptors might be the wrong language to play with this. But I'm still exploring the idea as mentioned in the post. Descriptors **must** convey **all** the information necessary to spend the output.\n\n> [quote=\"sjors, post:1, topic:1766\"]\n> `tr(musig(A, B), {and_v(pk(A), ctv(musig(A, B), {unvault_cold, unvault_hot}), ...)})`\n> [/quote]\n\nCTV spec specifies a bunch of other fields that are going to be hashed. For example, we need to decide what sequence value to set for the transaction, as well as the complete serialization of all inputs and outputs. If we don't store all of this information, then we don't satisfy the property that descriptors must contain all the information required to spend from it.\n\nOne naive attempt could be to encode the entire transaction as hex in the descriptor. But we still want the flexibility to express BIP32 keys in there. Maybe if we had a new `ctv_tx` fragment in the descriptor language that looks like:\n\n```\nctv_tx(version, nlocktime, inputs_hash, [out_desc1, out_desc2, ...])\n```\n\nwhere each `out_desc_i` is a BIP380 descriptor in itself, that would be a complete specification. This is clearly clunky, and maybe with some work we can simplify the fragment for common use cases. But in any such simplification, we must preserve the property that the descriptor contains all information required to spend the output. (minus the private key of course). \n\n[quote=\"sjors, post:1, topic:1766\"]\nAssuming the above makes any sense, it\u2019d love to see someone implement it\u2026\n[/quote]\n\nHappy to try to do this once I get some spare time",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 14,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "FTR, I am slowly warming to <a class=\"mention\" href=\"/u/salvatoshi\">@salvatoshi</a>\u2019s view that descriptors might be the wrong language to play with this. But I\u2019m still exploring the idea as mentioned in the post. Descriptors must convey all the information necessary to spend the output. \n\n\n\nCTV spec specifies a bunch of other fields that are&hellip;",
  "truncated": true,
  "post_url": "/t/ctv-vault-output-descriptor/1766/3",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}