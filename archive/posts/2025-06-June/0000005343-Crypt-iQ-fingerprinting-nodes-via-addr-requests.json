{
  "id": 5343,
  "name": "Eugene",
  "username": "Crypt-iQ",
  "avatar_template": "/user_avatar/delvingbitcoin.org/crypt-iq/{size}/306_2.png",
  "created_at": "2025-06-24T21:34:41.348Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"danielabrozzoni\" data-post=\"1\" data-topic=\"1786\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/danielabrozzoni/48/1300_2.png\" class=\"avatar\"> danielabrozzoni:</div>\n<blockquote>\n<p>One possible explanation for this behavior is that <code>GETADDR</code> caches for different interfaces are refreshed at different times. The refresh timing is <a href=\"https://github.com/bitcoin/bitcoin/blob/af65fd1a333011137dafd3df9a51704fd319feb4/src/net.cpp#L3550\" rel=\"noopener nofollow ugc\">randomized</a>, and a cache is only updated when a <code>GETADDR</code> request is received. Since each cache acts as a \u201csnapshot\u201d of the node\u2019s addrman at the moment it\u2019s refreshed, differences in refresh time can lead to discrepancies between caches for different interfaces.</p>\n</blockquote>\n</aside>\n<p>I think this may instead be due to the ability of nTime to be <a href=\"https://github.com/mzumsande/bitcoin/blob/458720e5e98c6e9103aea1fdfcd39bafc26c27bb/src/addrman.cpp#L566\" rel=\"noopener nofollow ugc\">refreshed</a>?</p>\n<blockquote>\n<p>Timestamps are also used in gossip relay (a separate mechanism from GETADDR) of node announcements.</p>\n</blockquote>\n<p>Oh, right.</p>\n<blockquote>\n<p>I wonder if there would be major downsides if we\u2019d just indiscriminately set the timestamp of each address from a GETADDR answer to a randomised but fixed value in the past (e.g. 10 +/- 2 days ago) when creating the cached response, not using our nTime information at all (with a different random value for each cache of course).</p>\n</blockquote>\n<p>Is it possible that this would cause the address to become \u201cterrible\u201d quicker if it\u2019s successively requested by GETADDRs across a path (i.e. B requests from C, A requests from B)?</p>",
  "post_number": 6,
  "post_type": 1,
  "posts_count": 7,
  "updated_at": "2025-06-24T21:34:41.348Z",
  "reply_count": 1,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 22,
  "readers_count": 21,
  "score": 9.2,
  "yours": false,
  "topic_id": 1786,
  "topic_slug": "fingerprinting-nodes-via-addr-requests",
  "topic_title": "Fingerprinting nodes via addr requests",
  "topic_html_title": "Fingerprinting nodes via addr requests",
  "category_id": 7,
  "display_username": "Eugene",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"danielabrozzoni, post:1, topic:1786\"]\nOne possible explanation for this behavior is that `GETADDR` caches for different interfaces are refreshed at different times. The refresh timing is [randomized](https://github.com/bitcoin/bitcoin/blob/af65fd1a333011137dafd3df9a51704fd319feb4/src/net.cpp#L3550), and a cache is only updated when a `GETADDR` request is received. Since each cache acts as a \u201csnapshot\u201d of the node\u2019s addrman at the moment it\u2019s refreshed, differences in refresh time can lead to discrepancies between caches for different interfaces.\n[/quote]\n\nI think this may instead be due to the ability of nTime to be [refreshed](https://github.com/mzumsande/bitcoin/blob/458720e5e98c6e9103aea1fdfcd39bafc26c27bb/src/addrman.cpp#L566)?\n\n> Timestamps are also used in gossip relay (a separate mechanism from GETADDR) of node announcements.\n\nOh, right.\n\n> I wonder if there would be major downsides if we\u2019d just indiscriminately set the timestamp of each address from a GETADDR answer to a randomised but fixed value in the past (e.g. 10 +/- 2 days ago) when creating the cached response, not using our nTime information at all (with a different random value for each cache of course).\n\nIs it possible that this would cause the address to become \"terrible\" quicker if it's successively requested by GETADDRs across a path (i.e. B requests from C, A requests from B)?",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 253,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "I think this may instead be due to the ability of nTime to be <a href=\"https://github.com/mzumsande/bitcoin/blob/458720e5e98c6e9103aea1fdfcd39bafc26c27bb/src/addrman.cpp#L566\" rel=\"noopener nofollow ugc\">refreshed</a>? \n\nTimestamps are also used in gossip relay (a separate mechanism from GETADDR) of node announcements. \n\nOh, right. \n\nI wonder if there would be major downsides if we\u2019d just indiscriminately set the timestamp of each address fr&hellip;",
  "truncated": true,
  "post_url": "/t/fingerprinting-nodes-via-addr-requests/1786/6",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}