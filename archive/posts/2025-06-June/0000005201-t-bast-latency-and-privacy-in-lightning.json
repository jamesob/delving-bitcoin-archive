{
  "id": 5201,
  "name": "Bastien Teinturier",
  "username": "t-bast",
  "avatar_template": "/user_avatar/delvingbitcoin.org/t-bast/{size}/98_2.png",
  "created_at": "2025-06-03T10:05:02.063Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"joostjager\" data-post=\"21\" data-topic=\"1723\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/j/779978/48.png\" class=\"avatar\"> joostjager:</div>\n<blockquote>\n<p>Following up from yesterday\u2019s spec meet.</p>\n</blockquote>\n</aside>\n<p>Can you please summarize the options proposed? I don\u2019t think there\u2019s any written form of it anywhere, which makes it hard to form a good opinion for readers. If I understood correctly, the options were:</p>\n<ul>\n<li>Do nothing and keep a millisecond granularity on hold times reported in attributable failures</li>\n<li>Change the encoding of the hold time in attributable failures to have a granularity of Xms (with X to be defined): advantages/drawbacks of this option?</li>\n<li>Keep the millisecond granularity but ask nodes to subtract a hard-coded threshold value: we\u2019ve discussed several variations of it, and to be honest I\u2019m not sure exactly how that would work and would like to see it written down for analysis</li>\n</ul>",
  "post_number": 22,
  "post_type": 1,
  "posts_count": 39,
  "updated_at": "2025-06-03T10:05:02.063Z",
  "reply_count": 2,
  "reply_to_post_number": 21,
  "quote_count": 1,
  "incoming_link_count": 1,
  "reads": 24,
  "readers_count": 23,
  "score": 19.8,
  "yours": false,
  "topic_id": 1723,
  "topic_slug": "latency-and-privacy-in-lightning",
  "topic_title": "Latency and Privacy in Lightning",
  "topic_html_title": "Latency and Privacy in Lightning",
  "category_id": 7,
  "display_username": "Bastien Teinturier",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"joostjager, post:21, topic:1723\"]\nFollowing up from yesterday\u2019s spec meet.\n[/quote]\n\nCan you please summarize the options proposed? I don't think there's any written form of it anywhere, which makes it hard to form a good opinion for readers. If I understood correctly, the options were:\n\n* Do nothing and keep a millisecond granularity on hold times reported in attributable failures\n* Change the encoding of the hold time in attributable failures to have a granularity of Xms (with X to be defined): advantages/drawbacks of this option?\n* Keep the millisecond granularity but ask nodes to subtract a hard-coded threshold value: we've discussed several variations of it, and to be honest I'm not sure exactly how that would work and would like to see it written down for analysis",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 101,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Can you please summarize the options proposed? I don\u2019t think there\u2019s any written form of it anywhere, which makes it hard to form a good opinion for readers. If I understood correctly, the options were: \n\nDo nothing and keep a millisecond granularity on hold times reported in attributable failures\nC&hellip;",
  "truncated": true,
  "post_url": "/t/latency-and-privacy-in-lightning/1723/22",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}