{
  "id": 5354,
  "name": "Pieter Wuille",
  "username": "sipa",
  "avatar_template": "/user_avatar/delvingbitcoin.org/sipa/{size}/1100_2.png",
  "created_at": "2025-06-27T13:46:57.342Z",
  "cooked": "<p>EDIT: all of my conjecture below is wrong, see the further <a href=\"https://delvingbitcoin.org/t/correcting-the-error-in-getnetworkhashrateps/1745/4\">post</a>.</p>\n<hr>\n<p>Is this about the difference between the expected value of an Erlang distribution, and the inverse of the expected value of an inverse Erlang distribution not being the same? That applies to the difficulty adjustment because it involves <em>dividing</em> by the hashrate, but would not apply to <code>getnetworkhashrateps</code> as it\u2019s not inverting (note that it doesn\u2019t matter that the actual difficulty logic is implemented using a <code>target</code> value which is inversely proportional to difficulty; that is just an implementation detail - difficulty is what matters as it\u2019s what scales with block duration).</p>\n<p>If the actual hashrate is constant but unknown, then I would think that</p>\n<div class=\"math\">\n\\dfrac{\\sum_{b \\in \\mathrm{blocks}} E(\\mathrm{hashes}(b))}{\\sum_{b \\in \\mathrm{blocks}} \\mathrm{time}(b)}\n</div>\n<p>gives an unbiased estimate for the amount of hashes per time. That is because the denominator here uses an <em>observed</em> quantity (time), rather than an <em>expected</em> quantity (hashes) - unlike in difficulty adjustment where one divides by the expected value, and thus wants the expectation of the inverse to be unbiased.</p>\n<p>I still want to simulate this, though.</p>",
  "post_number": 2,
  "post_type": 1,
  "posts_count": 7,
  "updated_at": "2025-06-27T18:57:42.941Z",
  "reply_count": 1,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 19,
  "readers_count": 18,
  "score": 8.8,
  "yours": false,
  "topic_id": 1745,
  "topic_slug": "correcting-the-error-in-getnetworkhashrateps",
  "topic_title": "Correcting the error in getnetworkhashrateps",
  "topic_html_title": "Correcting the error in getnetworkhashrateps",
  "category_id": 7,
  "display_username": "Pieter Wuille",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 3,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "EDIT: all of my conjecture below is wrong, see the further [post](https://delvingbitcoin.org/t/correcting-the-error-in-getnetworkhashrateps/1745/4).\n\n---\n\nIs this about the difference between the expected value of an Erlang distribution, and the inverse of the expected value of an inverse Erlang distribution not being the same? That applies to the difficulty adjustment because it involves *dividing* by the hashrate, but would not apply to `getnetworkhashrateps` as it's not inverting (note that it doesn't matter that the actual difficulty logic is implemented using a `target` value which is inversely proportional to difficulty; that is just an implementation detail - difficulty is what matters as it's what scales with block duration).\n\nIf the actual hashrate is constant but unknown, then I would think that\n\n$$\n\\dfrac{\\sum_{b \\in \\mathrm{blocks}} E(\\mathrm{hashes}(b))}{\\sum_{b \\in \\mathrm{blocks}} \\mathrm{time}(b)}\n$$\n\ngives an unbiased estimate for the amount of hashes per time. That is because the denominator here uses an *observed* quantity (time), rather than an *expected* quantity (hashes) - unlike in difficulty adjustment where one divides by the expected value, and thus wants the expectation of the inverse to be unbiased.\n\nI still want to simulate this, though.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 96,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "EDIT: all of my conjecture below is wrong, see the further <a href=\"https://delvingbitcoin.org/t/correcting-the-error-in-getnetworkhashrateps/1745/4\">post</a>. \n\nIs this about the difference between the expected value of an Erlang distribution, and the inverse of the expected value of an inverse Erlang distribution not being the same? That applies to the difficulty adjustment because it invol&hellip;",
  "truncated": true,
  "post_url": "/t/correcting-the-error-in-getnetworkhashrateps/1745/2",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}