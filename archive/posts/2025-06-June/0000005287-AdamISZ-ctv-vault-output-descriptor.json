{
  "id": 5287,
  "name": "Adam Gibson",
  "username": "AdamISZ",
  "avatar_template": "/user_avatar/delvingbitcoin.org/adamisz/{size}/418_2.png",
  "created_at": "2025-06-12T17:53:21.477Z",
  "cooked": "<blockquote>\n<p>In particular a descriptor can\u2019t and shouldn\u2019t commit to the <em>amount</em> that is sent to it, because the receiver doesn\u2019t have control over that.</p>\n</blockquote>\n<p>(sorry on reflection this 1st paragraph is me mostly repeating your point \u2026)</p>\n<p>That\u2019s true but are you not here just pointing to a limitation of using CTV in any case? If your spending of a utxo is constrained in this way, you have to provide an amount which also has a constraint (obviously usually it\u2019s the other way round - you first decide an amount, and then construct a ctv hash). It\u2019s true that CTV supports multi-input so it\u2019s certainly not as simple as \u201cyour utxo must have exactly x satoshis + fees for an output of value x\u201d, but it\u2019s also true that the BIP somewhat strongly discourages more than one input, anyway.</p>\n<p>I guess it\u2019s like, if we tend to think of descriptors as \u201ca thing that describes an unboundedly large pot you can put stuff into\u201d, then that doesn\u2019t work here, these are not that. They are customized pots of fixed size created dynamically when you\u2019ve already decided what you want to put in them.</p>\n<p>(I guess technically these limitations are not only on size, but e.g. timelocking, since you have to commit to nLockTime in advance, also).</p>\n<p>If I were trying to be constructive (but in a state of relative ignorance about descriptors), I\u2019d say, the descriptor could have the preimage of the CTV hash all serialized. I\u2019m not sure why that wouldn\u2019t be the correct thing to do, albeit it might not be a \u201cnormal\u201d descriptor.</p>",
  "post_number": 7,
  "post_type": 1,
  "posts_count": 8,
  "updated_at": "2025-06-12T17:54:29.996Z",
  "reply_count": 1,
  "reply_to_post_number": 6,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 19,
  "readers_count": 18,
  "score": 8.8,
  "yours": false,
  "topic_id": 1766,
  "topic_slug": "ctv-vault-output-descriptor",
  "topic_title": "CTV vault output descriptor",
  "topic_html_title": "CTV vault output descriptor",
  "category_id": 8,
  "display_username": "Adam Gibson",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "id": 71,
    "username": "sjors",
    "name": "Sjors Provoost",
    "avatar_template": "/user_avatar/delvingbitcoin.org/sjors/{size}/59_2.png"
  },
  "bookmarked": false,
  "raw": "> In particular a descriptor can\u2019t and shouldn\u2019t commit to the *amount* that is sent to it, because the receiver doesn\u2019t have control over that.\n\n(sorry on reflection this 1st paragraph is me mostly repeating your point ...)\n\nThat's true but are you not here just pointing to a limitation of using CTV in any case? If your spending of a utxo is constrained in this way, you have to provide an amount which also has a constraint (obviously usually it's the other way round - you first decide an amount, and then construct a ctv hash). It's true that CTV supports multi-input so it's certainly not as simple as \"your utxo must have exactly x satoshis + fees for an output of value x\", but it's also true that the BIP somewhat strongly discourages more than one input, anyway.\n\nI guess it's like, if we tend to think of descriptors as \"a thing that describes an unboundedly large pot you can put stuff into\", then that doesn't work here, these are not that. They are customized pots of fixed size created dynamically when you've already decided what you want to put in them.\n\n(I guess technically these limitations are not only on size, but e.g. timelocking, since you have to commit to nLockTime in advance, also).\n\nIf I were trying to be constructive (but in a state of relative ignorance about descriptors), I'd say, the descriptor could have the preimage of the CTV hash all serialized. I'm not sure why that wouldn't be the correct thing to do, albeit it might not be a \"normal\" descriptor.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 343,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "In particular a descriptor can\u2019t and shouldn\u2019t commit to the amount that is sent to it, because the receiver doesn\u2019t have control over that. \n\n(sorry on reflection this 1st paragraph is me mostly repeating your point \u2026) \nThat\u2019s true but are you not here just pointing to a limitation of using CTV in&hellip;",
  "truncated": true,
  "post_url": "/t/ctv-vault-output-descriptor/1766/7",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}