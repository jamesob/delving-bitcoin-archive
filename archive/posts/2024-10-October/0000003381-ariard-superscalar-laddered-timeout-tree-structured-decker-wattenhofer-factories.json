{
  "id": 3381,
  "name": "Antoine Riard",
  "username": "ariard",
  "avatar_template": "/letter_avatar_proxy/v4/letter/a/c67d28/{size}.png",
  "created_at": "2024-10-17T22:42:34.577Z",
  "cooked": "<blockquote>\n<p>I can state that Block has no intention of patenting SuperScalar or otherwise limiting the use of &gt; SuperScalar. The entire point of publishing the damn thing on delving and in presenting it to &gt; the summit was to bring it out to the public, WTF.</p>\n</blockquote>\n<p>If all what Block Inc did in the organization of this summit where SuperScalar was presented in \u201cexclusivity\u201d to selected devs, and respectuous of how Lightning development has been done in the open-source fashion, since 2016 and after since then There is still no answer from one of the Block Inc employe on how it was really organized.</p>\n<p>This is not like I\u2019ve myself organized open-source protocol dev meetings in the past, making abstraction of people backgrounds or the organizations (be it for-profit, non-profit or whatever) there were representing to concentrate the discussion on purely technical matters.</p>\n<p>This silence from Block Inc is very speaking in itself\u2026</p>\n<p>Going back to SuperScalar, and the chain economics and deep technicals here.</p>\n<p>Let\u2019s say you have the initial transaction with the LSP and all the users, i.e the root transaction.</p>\n<p>Under, Decker-Wattenhofer update mechanism, channel factories have two stages: kick-off and state transaction, spending the root transaction. Each state transaction has a decrementing timelock and attached to this state transaction, there is a timeout tree, where after a timelock X, either the use should have come back online to interact with the LSP to update the tree, or the LSP (+ some users to sign the multisig of rhe state transaction) can evict out of the tree the user.</p>\n<p>There is a k-factor at each output of the state channel factory transaction, to branch off and fan-out the users in the subtrees.</p>\n<p>So if you assume a k-factor of 2 (at each branching of the timeout tree) and 8 users, that\u2019s 12 transactions that have to confirm in the worst-case. That means in the worst-case, either the user (if they wish to make a fully non assisted exit) or the LSP must have on-chain amounts available to confirm the 4 transactions constituting the path before the safety timelock expiration. For the LSP, it\u2019s even worst as they must have liquidity for all the combination of the timeout tree, and this when mempool networks might be full.</p>\n<p>So, I\u2019ll re-say what I said above in one of my previous post, under current block size (4 MB) and\nthe maximum number of bitcoins, that can be used to pay the fees, I don\u2019t see how SuperScalar works at all under \u201cForced Expiration Spam\u201d as described in the section 9.2 lightning whitepaper. As a reminder, that problem was well-described by protocol experts before I was involved in bitcoin dev, so don\u2019t take the shortcoming I\u2019m pointing too about SuperScalar as ad hominem here.</p>",
  "post_number": 32,
  "post_type": 1,
  "updated_at": "2024-10-17T22:42:34.577Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 12,
  "readers_count": 11,
  "score": 2.2,
  "yours": false,
  "topic_id": 1143,
  "topic_slug": "superscalar-laddered-timeout-tree-structured-decker-wattenhofer-factories",
  "topic_title": "SuperScalar: Laddered Timeout-Tree-Structured Decker-Wattenhofer Factories",
  "topic_html_title": "SuperScalar: Laddered Timeout-Tree-Structured Decker-Wattenhofer Factories",
  "category_id": 7,
  "display_username": "Antoine Riard",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "> I can state that Block has no intention of patenting SuperScalar or otherwise limiting the use of > SuperScalar. The entire point of publishing the damn thing on delving and in presenting it to > the summit was to bring it out to the public, WTF.\n\nIf all what Block Inc did in the organization of this summit where SuperScalar was presented in \u201cexclusivity\u201d to selected devs, and respectuous of how Lightning development has been done in the open-source fashion, since 2016 and after since then There is still no answer from one of the Block Inc employe on how it was really organized.\n\nThis is not like I've myself organized open-source protocol dev meetings in the past, making abstraction of people backgrounds or the organizations (be it for-profit, non-profit or whatever) there were representing to concentrate the discussion on purely technical matters.\n\nThis silence from Block Inc is very speaking in itself\u2026\n\nGoing back to SuperScalar, and the chain economics and deep technicals here.\n\nLet's say you have the initial transaction with the LSP and all the users, i.e the root transaction.\n\nUnder, Decker-Wattenhofer update mechanism, channel factories have two stages: kick-off and state transaction, spending the root transaction. Each state transaction has a decrementing timelock and attached to this state transaction, there is a timeout tree, where after a timelock X, either the use should have come back online to interact with the LSP to update the tree, or the LSP (+ some users to sign the multisig of rhe state transaction) can evict out of the tree the user.\n\nThere is a k-factor at each output of the state channel factory transaction, to branch off and fan-out the users in the subtrees.\n\nSo if you assume a k-factor of 2 (at each branching of the timeout tree) and 8 users, that's 12 transactions that have to confirm in the worst-case. That means in the worst-case, either the user (if they wish to make a fully non assisted exit) or the LSP must have on-chain amounts available to confirm the 4 transactions constituting the path before the safety timelock expiration. For the LSP, it's even worst as they must have liquidity for all the combination of the timeout tree, and this when mempool networks might be full.\n\nSo, I'll re-say what I said above in one of my previous post, under current block size (4 MB) and\nthe maximum number of bitcoins, that can be used to pay the fees, I don't see how SuperScalar works at all under \"Forced Expiration Spam\" as described in the section 9.2 lightning whitepaper. As a reminder, that problem was well-described by protocol experts before I was involved in bitcoin dev, so don't take the shortcoming I'm pointing too about SuperScalar as ad hominem here.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 5,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "user_suspended": true,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}