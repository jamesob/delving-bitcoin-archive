{
  "id": 3323,
  "name": "Anthony Towns",
  "username": "ajtowns",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/417_2.png",
  "created_at": "2024-10-04T06:45:12.260Z",
  "cooked": "<p>One thing I\u2019ve been wishing for is support for graphing data in a traditional x-y plot with just text markup and not having to generate a png externally or similar. Eventually I gave up and wrote my own <a href=\"https://github.com/ajtowns/discourse-plotly-theme-component\">discourse component</a> based on <a href=\"https://github.com/plotly/plotly.js/\">plotly.js</a>, which I\u2019ve now enabled here.</p>\n<p>Here\u2019s an example graph based on a graph from <a href=\"https://delvingbitcoin.org/t/an-overview-of-the-cluster-mempool-proposal/393\">the cluster mempool proposal overview</a>:</p>\n<pre data-code-wrap=\"plotly\"><code class=\"lang-plotly\">data:\n  - x: [0,300,400]\n    y: [0,950,1050]\n    mode: lines+markers\n    name: Old mempool\n  - x: [0,200,400]\n    y: [0,700, 1150]\n    name: New mempool\nlayout:\n  title: Feerate Diagram\n</code></pre>\n<p>You can have a look at the source used to generate that graph via the \u201cRaw Post\u201d link at the bottom of this post, hidden behind the \u201c\u2026\u201d. One thing I like about it is that you can hover over the points on the graph to see their actual values; but you can also zoom in and pan around which might also be useful.</p>\n<p>You can also do log graphs easily, just by adding <code>yaxis: {type: log, autorange: true}</code> to the <code>layout</code> section:</p>\n<pre data-code-wrap=\"plotly\"><code class=\"lang-plotly\">data:\n  - x: [0,300,400]\n    y: [1,950,1050]\n    mode: lines+markers\n    name: Old mempool\n  - x: [0,200,400]\n    y: [1,700, 1150]\n    name: New mempool\nlayout:\n  title: Feerate Diagram\n  yaxis: { type: log, autorange: true }\n</code></pre>\n<p>(Log axes work remarkably poorly if you have datapoints with a value of zero or less, of course\u2026)</p>\n<p>Plotly supports a lot of different graph types, eg drawing great circles on a world map:</p>\n<pre data-code-wrap=\"plotly\"><code class=\"lang-plotly\">data:\n  - type: scattergeo    \n    lat: [ 40.7127, 51.5072 ]\n    lon: [ -74.0059, 0.1275 ]\n    mode: lines\n    line:\n      width: 4\n      color: black\nlayout:\n  title: London to NYC Great Circle\n  showlegend: false\n  geo:\n      resolution: 50\n      showland: true\n      showlakes: true\n      showocean: true\n      landcolor: tan\n      lakecolor: lightblue\n      oceancolor: lightblue\n      projection:\n        type: equirectangular\n      coastlinewidth: 2\n      lataxis:\n        range: [ 20, 60 ]\n        showgrid: true\n        tickmode: linear\n        dtick: 10\n      lonaxis:\n        range: [-100, 20]\n        showgrid: true\n        tickmode: linear\n        dtick: 20\n</code></pre>\n<p>Not sure how useful any of that is likely to be, but it\u2019s more effort to disable it than to leave it in.</p>\n<p>You can get a general idea of what\u2019s available from <a href=\"https://plotly.com/javascript/\" class=\"inline-onebox\">Plotly javascript graphing library in JavaScript</a> and in particular, the code in a <code>plotly</code> code block is just treated as a yaml with the <code>data</code> and <code>layout</code> sections passed into plotly as the <code>data</code> and <code>layout</code> arguments of plotly\u2019s <code>newPlot()</code>.</p>",
  "post_number": 1,
  "post_type": 1,
  "updated_at": "2024-10-04T06:45:12.260Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 9,
  "readers_count": 8,
  "score": 16.8,
  "yours": false,
  "topic_id": 1180,
  "topic_slug": "support-for-graphing-data",
  "topic_title": "Support for graphing data",
  "topic_html_title": "Support for graphing data",
  "category_id": 2,
  "display_username": "Anthony Towns",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "One thing I've been wishing for is support for graphing data in a traditional x-y plot with just text markup and not having to generate a png externally or similar. Eventually I gave up and wrote my own [discourse component](https://github.com/ajtowns/discourse-plotly-theme-component) based on [plotly.js](https://github.com/plotly/plotly.js/), which I've now enabled here.\n\nHere's an example graph based on a graph from [the cluster mempool proposal overview](https://delvingbitcoin.org/t/an-overview-of-the-cluster-mempool-proposal/393):\n\n```plotly\ndata:\n  - x: [0,300,400]\n    y: [0,950,1050]\n    mode: lines+markers\n    name: Old mempool\n  - x: [0,200,400]\n    y: [0,700, 1150]\n    name: New mempool\nlayout:\n  title: Feerate Diagram\n```\n\nYou can have a look at the source used to generate that graph via the \"Raw Post\" link at the bottom of this post, hidden behind the \"...\". One thing I like about it is that you can hover over the points on the graph to see their actual values; but you can also zoom in and pan around which might also be useful.\n\nYou can also do log graphs easily, just by adding `yaxis: {type: log, autorange: true}` to the `layout` section:\n\n```plotly\ndata:\n  - x: [0,300,400]\n    y: [1,950,1050]\n    mode: lines+markers\n    name: Old mempool\n  - x: [0,200,400]\n    y: [1,700, 1150]\n    name: New mempool\nlayout:\n  title: Feerate Diagram\n  yaxis: { type: log, autorange: true }\n```\n\n(Log axes work remarkably poorly if you have datapoints with a value of zero or less, of course...)\n\nPlotly supports a lot of different graph types, eg drawing great circles on a world map:\n\n```plotly\ndata:\n  - type: scattergeo    \n    lat: [ 40.7127, 51.5072 ]\n    lon: [ -74.0059, 0.1275 ]\n    mode: lines\n    line:\n      width: 4\n      color: black\nlayout:\n  title: London to NYC Great Circle\n  showlegend: false\n  geo:\n      resolution: 50\n      showland: true\n      showlakes: true\n      showocean: true\n      landcolor: tan\n      lakecolor: lightblue\n      oceancolor: lightblue\n      projection:\n        type: equirectangular\n      coastlinewidth: 2\n      lataxis:\n        range: [ 20, 60 ]\n        showgrid: true\n        tickmode: linear\n        dtick: 10\n      lonaxis:\n        range: [-100, 20]\n        showgrid: true\n        tickmode: linear\n        dtick: 20\n```\n\nNot sure how useful any of that is likely to be, but it's more effort to disable it than to leave it in.\n\nYou can get a general idea of what's available from https://plotly.com/javascript/ and in particular, the code in a `plotly` code block is just treated as a yaml with the `data` and `layout` sections passed into plotly as the `data` and `layout` arguments of plotly's `newPlot()`.",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": true,
  "admin": true,
  "staff": true,
  "user_id": 3,
  "hidden": false,
  "trust_level": 4,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false
}