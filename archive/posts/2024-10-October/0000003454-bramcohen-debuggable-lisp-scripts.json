{
  "id": 3454,
  "name": "Bram Cohen",
  "username": "bramcohen",
  "avatar_template": "/user_avatar/delvingbitcoin.org/bramcohen/{size}/400_2.png",
  "created_at": "2024-10-30T19:39:10.135Z",
  "cooked": "<p>On the general topic of being able to have an \u2018apply\u2019 in the higher level language. A few things have to be a little bit special but it doesn\u2019t require that you completely sacrifice the compiled language to just be a fancies version of the lower level one. The \u2018apply\u2019 function does have to be special, in that it\u2019s the same thing to both the high and low level language, and it needs to have the property that the things passed into it have byte level specifications. But those byte level specifications can be fixed by doing a compilation run instead of having exact requirements of what sorts of optimizations the compiler does at the language level. Being able to tear off functions in the name space and use them as data structures is important for this, as is having a lambda which is special like apply and does what you think. The other subtle point is that compilation needs to be able to have multiple output targets, because in many cases there are multiple things which need to be internally consistent but can be optimized as a group.</p>",
  "post_number": 2,
  "post_type": 1,
  "posts_count": 2,
  "updated_at": "2024-10-30T19:39:10.135Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 23,
  "readers_count": 22,
  "score": 4.6,
  "yours": false,
  "topic_id": 1224,
  "topic_slug": "debuggable-lisp-scripts",
  "topic_title": "Debuggable Lisp Scripts",
  "topic_html_title": "Debuggable Lisp Scripts",
  "category_id": 7,
  "display_username": "Bram Cohen",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "On the general topic of being able to have an 'apply' in the higher level language. A few things have to be a little bit special but it doesn't require that you completely sacrifice the compiled language to just be a fancies version of the lower level one. The 'apply' function does have to be special, in that it's the same thing to both the high and low level language, and it needs to have the property that the things passed into it have byte level specifications. But those byte level specifications can be fixed by doing a compilation run instead of having exact requirements of what sorts of optimizations the compiler does at the language level. Being able to tear off functions in the name space and use them as data structures is important for this, as is having a lambda which is special like apply and does what you think. The other subtle point is that compilation needs to be able to have multiple output targets, because in many cases there are multiple things which need to be internally consistent but can be optimized as a group.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 331,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "On the general topic of being able to have an \u2018apply\u2019 in the higher level language. A few things have to be a little bit special but it doesn\u2019t require that you completely sacrifice the compiled language to just be a fancies version of the lower level one. The \u2018apply\u2019 function does have to be specia&hellip;",
  "truncated": true,
  "post_url": "/t/debuggable-lisp-scripts/1224/2",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}