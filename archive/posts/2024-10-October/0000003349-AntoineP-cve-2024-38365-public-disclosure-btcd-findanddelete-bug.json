{
  "id": 3349,
  "name": "Antoine Poinsot",
  "username": "AntoineP",
  "avatar_template": "/user_avatar/delvingbitcoin.org/antoinep/{size}/483_2.png",
  "created_at": "2024-10-11T06:47:49.557Z",
  "cooked": "<p>To have a valid signature in the scriptpubkey.</p>\n<p>To exploit this you want to have a data push in the scriptpubkey which contains the signature among other dummy data and then execute the signature check. When checking the signature Bitcoin Core\u2019s <code>FindAndDelete</code> won\u2019t drop the data push from the signature hash, but btcd will before version 0.24.2.</p>\n<p>To cause a chain split you not only want the sighash calculation to differ, you want it to lead to a different signature check result. The only way to have a valid signature in the scriptpubkey is to generate the signature first and then to recover a public key from it plus the sighash. By performing a public key recovery using Bitcoin Core\u2019s sighash you\u2019ll get a public key such as the signature check passes on Bitcoin Core but fails on btcd. And vice-versa.</p>\n<p>I have a documented Bitcoin Core unit test as a patch which generates such a transaction, that we sent to Laolu as part of the original report. I\u2019m hesitant to share it publicly though since it would simplify the job of a script kiddy who wants to be annoying. I\u2019ll share the patch with you privately and share it on this thread later.</p>",
  "post_number": 3,
  "post_type": 1,
  "posts_count": 12,
  "updated_at": "2024-10-11T06:47:49.557Z",
  "reply_count": 1,
  "reply_to_post_number": 2,
  "quote_count": 0,
  "incoming_link_count": 1,
  "reads": 60,
  "readers_count": 59,
  "score": 81.8,
  "yours": false,
  "topic_id": 1184,
  "topic_slug": "cve-2024-38365-public-disclosure-btcd-findanddelete-bug",
  "topic_title": "CVE-2024-38365 public disclosure (btcd `FindAndDelete` bug)",
  "topic_html_title": "CVE-2024-38365 public disclosure (btcd `FindAndDelete` bug)",
  "category_id": 8,
  "display_username": "Antoine Poinsot",
  "primary_group_name": null,
  "flair_name": "wg-consensus-cleanup",
  "flair_url": "/uploads/default/original/1X/856d779f9ec58484f3a96285a21a813538b689f6.png",
  "flair_bg_color": "",
  "flair_color": "",
  "flair_group_id": 43,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": "Regular",
  "title_is_group": false,
  "reply_to_user": {
    "id": 6,
    "username": "harding",
    "name": "David A. Harding",
    "avatar_template": "/user_avatar/delvingbitcoin.org/harding/{size}/925_2.png"
  },
  "bookmarked": false,
  "raw": "To have a valid signature in the scriptpubkey.\n\nTo exploit this you want to have a data push in the scriptpubkey which contains the signature among other dummy data and then execute the signature check. When checking the signature Bitcoin Core's `FindAndDelete` won't drop the data push from the signature hash, but btcd will before version 0.24.2.\n\nTo cause a chain split you not only want the sighash calculation to differ, you want it to lead to a different signature check result. The only way to have a valid signature in the scriptpubkey is to generate the signature first and then to recover a public key from it plus the sighash. By performing a public key recovery using Bitcoin Core's sighash you'll get a public key such as the signature check passes on Bitcoin Core but fails on btcd. And vice-versa.\n\nI have a documented Bitcoin Core unit test as a patch which generates such a transaction, that we sent to Laolu as part of the original report. I'm hesitant to share it publicly though since it would simplify the job of a script kiddy who wants to be annoying. I'll share the patch with you privately and share it on this thread later.",
  "actions_summary": [
    {
      "id": 2,
      "count": 2
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 12,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "To have a valid signature in the scriptpubkey. \nTo exploit this you want to have a data push in the scriptpubkey which contains the signature among other dummy data and then execute the signature check. When checking the signature Bitcoin Core\u2019s FindAndDelete won\u2019t drop the data push from the signat&hellip;",
  "truncated": true,
  "post_url": "/t/cve-2024-38365-public-disclosure-btcd-findanddelete-bug/1184/3",
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    },
    {
      "id": "heart",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 2,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}