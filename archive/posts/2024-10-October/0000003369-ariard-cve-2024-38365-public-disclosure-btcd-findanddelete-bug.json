{
  "id": 3369,
  "name": "Antoine Riard",
  "username": "ariard",
  "avatar_template": "/letter_avatar_proxy/v4/letter/a/c67d28/{size}.png",
  "created_at": "2024-10-15T22:32:01.648Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"AntoineP\" data-post=\"9\" data-topic=\"1184\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/antoinep/48/483_2.png\" class=\"avatar\"> AntoineP:</div>\n<blockquote>\n<p>Then you are misunderstanding what <code>FindAndDelete</code> does. It does not tamper with the Script being executed at all, it only modifies a copy of it for the purpose of committing to it in the sighash.</p>\n</blockquote>\n</aside>\n<p>The <code>OP_CHECKSIG</code> (or <code>OP_CHECKMULTISIG</code>) consume stack element so &lt;invalid_sig&gt; and pubkey are dropped from the remainder of the Script, as it is executed. Though yes, there might have been a misunderstanding, on how much btcd\u2019s equivalent of <code>FindAndDelete</code> i.e <code>removeOpcodeByData</code> is really broken. Your initial description wasn\u2019t that clear on that i.e \u201c<em>would remove any data push from the executed Script</em>\u201d which doesn\u2019t say that data push removal was only stopping on currently executed <code>OP_CHECKSIG</code>, and not affecting further data push in the Script. Yes I can understand for the script kiddies.</p>\n<p>More seriously than rambling on btcd brokeness, which is a wide subject, after re-checking and re-testing a lot of <code>OP_CODESEPARATOR</code> behaviors when used to spend <code>SigVersion::Base</code> in 27.x peers. Some behaviors are interesting, I\u2019ll share it with you privately.</p>",
  "post_number": 10,
  "post_type": 1,
  "posts_count": 12,
  "updated_at": "2024-10-15T22:32:01.648Z",
  "reply_count": 0,
  "reply_to_post_number": 9,
  "quote_count": 1,
  "incoming_link_count": 11,
  "reads": 55,
  "readers_count": 54,
  "score": 66.0,
  "yours": false,
  "topic_id": 1184,
  "topic_slug": "cve-2024-38365-public-disclosure-btcd-findanddelete-bug",
  "topic_title": "CVE-2024-38365 public disclosure (btcd `FindAndDelete` bug)",
  "topic_html_title": "CVE-2024-38365 public disclosure (btcd `FindAndDelete` bug)",
  "category_id": 8,
  "display_username": "Antoine Riard",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"AntoineP, post:9, topic:1184\"]\nThen you are misunderstanding what `FindAndDelete` does. It does not tamper with the Script being executed at all, it only modifies a copy of it for the purpose of committing to it in the sighash.\n[/quote]\n\nThe `OP_CHECKSIG` (or `OP_CHECKMULTISIG`) consume stack element so <invalid_sig> and pubkey are dropped from the remainder of the Script, as it is executed. Though yes, there might have been a misunderstanding, on how much btcd\u2019s equivalent of `FindAndDelete` i.e `removeOpcodeByData` is really broken. Your initial description wasn\u2019t that clear on that i.e \u201c*would remove any data push from the executed Script*\u201d which doesn\u2019t say that data push removal was only stopping on currently executed `OP_CHECKSIG`, and not affecting further data push in the Script. Yes I can understand for the script kiddies.\n\nMore seriously than rambling on btcd brokeness, which is a wide subject, after re-checking and re-testing a lot of `OP_CODESEPARATOR` behaviors when used to spend `SigVersion::Base` in 27.x peers. Some behaviors are interesting, I\u2019ll share it with you privately.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 5,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "The OP_CHECKSIG (or OP_CHECKMULTISIG) consume stack element so &lt;invalid_sig&gt; and pubkey are dropped from the remainder of the Script, as it is executed. Though yes, there might have been a misunderstanding, on how much btcd\u2019s equivalent of FindAndDelete i.e removeOpcodeByData is really broken. Your&hellip;",
  "truncated": true,
  "post_url": "/t/cve-2024-38365-public-disclosure-btcd-findanddelete-bug/1184/10",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}