{
  "id": 3333,
  "name": "Antoine Riard",
  "username": "ariard",
  "avatar_template": "/letter_avatar_proxy/v4/letter/a/c67d28/{size}.png",
  "created_at": "2024-10-08T21:40:46.271Z",
  "cooked": "<blockquote>\n<p>This is standard tree transaction structures, but timeout trees also add an alternative spending condition: the LSP can spend by itself after a particular timeout.</p>\n</blockquote>\n<blockquote>\n<p>Private key handover is AWESOME.</p>\n</blockquote>\n<p>The security model of time-sensitive contracting protocol is to be able for any counterparty to broadcast and unilaterally fee-bump its off-chain states, before expiration of the safety timelocks.</p>\n<p>This construction is so broken\u2026The arity of the tree inflates the branch of transactions in weight units that a counterparty can have to fee-bump in the worst-case scenario.</p>\n<p>\u201cFair secret exchange\u201d i.e the private key out-of-band swap to make an assisted exit cannot work, as there is no guarantee that the LSP <em>complete</em> the key exchange on time (under classic physics), before the safety timelocks of the tree expire. That way letting the LSP to rug pull the end users.</p>\n<blockquote>\n<p>An alternative idea given to a few people at the summit, was to have multiple commitment transactions</p>\n</blockquote>\n<blockquote>\n<p>per commitment state with different feerates (dependent transactions such as HTLC-success and HTLC-failure</p>\n</blockquote>\n<blockquote>\n<p>would have the same feerate as the commitment transactions).</p>\n</blockquote>\n<blockquote>\n<p>This is in effect Peter Todd\u2019s suggestion to make fees endogenous(and moreover, a single transaction).</p>\n</blockquote>\n<p>Sure making the fees endogenous is an idea known for years, with rainbow ranges of pre-signed replacement lightning states. But I think I should still go to explain to Peter Todd, why it doesn\u2019t work as soon as you have one or two bitcoin stacked in your lightning channels.</p>\n<blockquote>\n<p>I object to \u201ccompletely\u201d. Consider that custodial Bitcoin wallets are even worse, in that the offchain state</p>\n</blockquote>\n<blockquote>\n<p>is merely the trustmebro of the custodian; with Lightning and SuperScalar, the offchain state at least has the</p>\n</blockquote>\n<blockquote>\n<p>(unguaranteed) possibility of resolving with the onchain state if the LSP becomes uncooperative (unlike the case</p>\n</blockquote>\n<blockquote>\n<p>of custodial Bitcoin, where if the custodian refuses to cooperate, it can simply 0 out your account under you).</p>\n</blockquote>\n<blockquote>\n<p>Custodial Bitcoin is significantly more broken than Lightning or similar schemes. Until you can present a perfect</p>\n</blockquote>\n<blockquote>\n<p>scheme that allows Bitcoin to have offchain state perfectly resolved 100% of the time, I would respectfully ask</p>\n</blockquote>\n<blockquote>\n<p>you to point your attention at custodial schemes instead. Improving something is still better than waiting for the</p>\n</blockquote>\n<blockquote>\n<p>perfect thing. Sometimes you have to accept gray in a gray vs black fight.</p>\n</blockquote>\n<p>Can I ask you a simple question ? Are you the ZmnSCPxj which whom I\u2019ve already been on the same panel at some bitcoin conference to talk about the subject of off-chain scaling eyes in the eyes ? And if yes are you realizing this work about SuperScalar as part of your paid time as an <a href=\"https://github.com/ZmnSCPxj-jr\">employee</a> at TBD\u2019s the Jack Dorsey\u2019s Block Inc\u2019s subsidiary ? I respect your privacy, just not using a pseudonym as an excuse for shameless corporate lobbying about open-source.</p>\n<p>Apart of that, what you\u2019re saying about custodial wallet vs non custodial wallet is gibberish, and one is better to put its money at Silicon Valley Bank, than within a SuperScalar off-chain construction.</p>\n<p>Back to the more technical conservation about scaling and off-chain constructions, if one goes the way of using short-paced timelocks and Decker-Wattenhofer Factories are just that, one as to find a solution at the consensus-level for the \u201c<em>Forced Expiration Spam</em>\" problem as described in the lightning whitepaper (section 9.2).</p>\n<p>I\u2019m not the one who came to describe this problem in the bitcoin community. Tadge Dryja and Joseph Poon did it back in 2015. And as far as I know, since then there has been no research emanating from the academic or industry pointing out that this problem is not a real issue for this approach of bitcoin scalability, of which factories and payment channels clearly belong.</p>",
  "post_number": 24,
  "post_type": 1,
  "posts_count": 31,
  "updated_at": "2024-10-08T21:40:46.271Z",
  "reply_count": 1,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 1,
  "reads": 33,
  "readers_count": 32,
  "score": 16.6,
  "yours": false,
  "topic_id": 1143,
  "topic_slug": "superscalar-laddered-timeout-tree-structured-decker-wattenhofer-factories",
  "topic_title": "SuperScalar: Laddered Timeout-Tree-Structured Decker-Wattenhofer Factories",
  "topic_html_title": "SuperScalar: Laddered Timeout-Tree-Structured Decker-Wattenhofer Factories",
  "category_id": 7,
  "display_username": "Antoine Riard",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "> This is standard tree transaction structures, but timeout trees also add an alternative spending condition: the LSP can spend by itself after a particular timeout.\n\n> Private key handover is AWESOME.\n\nThe security model of time-sensitive contracting protocol is to be able for any counterparty to broadcast and unilaterally fee-bump its off-chain states, before expiration of the safety timelocks.\n\nThis construction is so broken...The arity of the tree inflates the branch of transactions in weight units that a counterparty can have to fee-bump in the worst-case scenario.\n\n\"Fair secret exchange\" i.e the private key out-of-band swap to make an assisted exit cannot work, as there is no guarantee that the LSP _complete_ the key exchange on time (under classic physics), before the safety timelocks of the tree expire. That way letting the LSP to rug pull the end users.\n\n> An alternative idea given to a few people at the summit, was to have multiple commitment transactions\n\n> per commitment state with different feerates (dependent transactions such as HTLC-success and HTLC-failure\n\n> would have the same feerate as the commitment transactions).\n\n> This is in effect Peter Todd\u2019s suggestion to make fees endogenous(and moreover, a single transaction).\n\nSure making the fees endogenous is an idea known for years, with rainbow ranges of pre-signed replacement lightning states. But I think I should still go to explain to Peter Todd, why it doesn't work as soon as you have one or two bitcoin stacked in your lightning channels.\n\n> I object to \u201ccompletely\u201d. Consider that custodial Bitcoin wallets are even worse, in that the offchain state\n\n> is merely the trustmebro of the custodian; with Lightning and SuperScalar, the offchain state at least has the\n\n> (unguaranteed) possibility of resolving with the onchain state if the LSP becomes uncooperative (unlike the case\n\n> of custodial Bitcoin, where if the custodian refuses to cooperate, it can simply 0 out your account under you).\n\n> Custodial Bitcoin is significantly more broken than Lightning or similar schemes. Until you can present a perfect\n\n> scheme that allows Bitcoin to have offchain state perfectly resolved 100% of the time, I would respectfully ask\n\n> you to point your attention at custodial schemes instead. Improving something is still better than waiting for the\n\n> perfect thing. Sometimes you have to accept gray in a gray vs black fight.\n\nCan I ask you a simple question ? Are you the ZmnSCPxj which whom I've already been on the same panel at some bitcoin conference to talk about the subject of off-chain scaling eyes in the eyes ? And if yes are you realizing this work about SuperScalar as part of your paid time as an [employee](https://github.com/ZmnSCPxj-jr) at TBD's the Jack Dorsey\u2019s Block Inc's subsidiary ? I respect your privacy, just not using a pseudonym as an excuse for shameless corporate lobbying about open-source.\n\nApart of that, what you're saying about custodial wallet vs non custodial wallet is gibberish, and one is better to put its money at Silicon Valley Bank, than within a SuperScalar off-chain construction.\n\nBack to the more technical conservation about scaling and off-chain constructions, if one goes the way of using short-paced timelocks and Decker-Wattenhofer Factories are just that, one as to find a solution at the consensus-level for the \u201c*Forced Expiration Spam*\" problem as described in the lightning whitepaper (section 9.2).\n\nI'm not the one who came to describe this problem in the bitcoin community. Tadge Dryja and Joseph Poon did it back in 2015. And as far as I know, since then there has been no research emanating from the academic or industry pointing out that this problem is not a real issue for this approach of bitcoin scalability, of which factories and payment channels clearly belong.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 5,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "This is standard tree transaction structures, but timeout trees also add an alternative spending condition: the LSP can spend by itself after a particular timeout. \n\n\nPrivate key handover is AWESOME. \n\nThe security model of time-sensitive contracting protocol is to be able for any counterparty to b&hellip;",
  "truncated": true,
  "post_url": "/t/superscalar-laddered-timeout-tree-structured-decker-wattenhofer-factories/1143/24",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}