{
  "id": 3340,
  "name": "Antoine Poinsot",
  "username": "AntoineP",
  "avatar_template": "/user_avatar/delvingbitcoin.org/antoinep/{size}/483_2.png",
  "created_at": "2024-10-10T09:02:17.756Z",
  "cooked": "<p>This work is a collaboration between Niklas G\u00f6gge (<a href=\"https://brink.dev/\">Brink</a>) and Antoine Poinsot (<a href=\"https://wizardsardine.com/\">Wizardsardine</a>).</p>\n<p>Btcd prior to version <a href=\"https://github.com/btcsuite/btcd/releases/tag/v0.24.2\">0.24.2</a> does not correctly implement the consensus rules for legacy signature verification. The incompatible behavior can be triggered by a standard transaction, making it possible for anyone to fork off vulnerable btcd nodes at virtually no cost.</p>\n<h1><a name=\"p-3340-details-1\" class=\"anchor\" href=\"#p-3340-details-1\"></a>Details</h1>\n<p>When verifying a signature for a transaction input, the script interpreter of a Bitcoin node re-constructs the signed message and checks the signature against it. The original algorithm for re-constructing the message is detailed in <a href=\"https://en.bitcoin.it/wiki/OP_CHECKSIG#How_it_works\">this wiki page</a>. Notably, the signed message contains a commitment to the Script being executed. For legacy transaction inputs any occurrence of the signature being verified is first removed from the executed Script committed in the message. This is often referred to as the <code>FindAndDelete</code> behavior, named after the function implementing this in Satoshi Nakamoto\u2019s original Bitcoin codebase.</p>\n<p><code>removeOpcodeByData</code> is Btcd\u2019s equivalent of Bitcoin Core\u2019s <code>FindAndDelete</code>. Prior to version 0.24.2, <code>removeOpcodeByData</code> would remove any data push from the executed Script that <em>contains</em> the signature. Whereas Bitcoin Core\u2019s (and Satoshi\u2019s) <code>FindAndDelete</code> only removes exact matches. Using public key recovery it is possible to create a Script which contains a signature check and an extraneous data push which contains the signature itself and additional padding data. This Script can be committed to in a P2SH output which can be spent by a standard transaction which would be considered valid by Bitcoin Core and invalid by vulnerable Btcd nodes.</p>\n<p>This bug was introduced in commit <a href=\"https://github.com/btcsuite/btcd/commit/76339baf6c9407b073828245e3458f4df35190ae\"><code>76339baf6c9407b073828245e3458f4df35190ae</code></a> in 2014, in reaction to a new Bitcoin Core unit test demonstrating the original implementation was consensus-incompatible.</p>\n<h1><a name=\"p-3340-credits-2\" class=\"anchor\" href=\"#p-3340-credits-2\"></a>Credits</h1>\n<p>Thanks to the Btcd maintainers for awarding us a bug bounty.</p>\n<h1><a name=\"p-3340-timeline-3\" class=\"anchor\" href=\"#p-3340-timeline-3\"></a>Timeline</h1>\n<ul>\n<li>2024-03-20 Niklas and Antoine discuss the quirks of Bitcoin Core\u2019s <code>FindAndDelete</code> (in relation to Antoine\u2019s research into the <a href=\"https://delvingbitcoin.org/t/great-consensus-cleanup-revival/710\">worst case block validation time</a>) and decide to take a look at if Btcd got all the quirks right in their reimplementation</li>\n<li>2024-03-22 Niklas and Antoine email a detailed report of the issue to Olaoluwa Osuntokun</li>\n<li>2024-03-26 Olaoluwa acknowledges the issue and creates a discussion group with another Btcd maintainer</li>\n<li>2024-05-07 Antoine reserves <a href=\"https://www.cve.org/CVERecord?id=CVE-2024-36051\">CVE-2024-36051</a> through Mitre</li>\n<li>2024-06-21 Laolu reserves <a href=\"https://github.com/btcsuite/btcd/security/advisories/GHSA-27vh-h6mc-q6g8\">CVE-2024-38365</a> through Github</li>\n<li>2024-04-26 A covert fix is included in PR <a href=\"https://github.com/btcsuite/btcd/pull/2178\">#2178</a></li>\n<li>2024-05-22 PR <a href=\"https://github.com/btcsuite/btcd/pull/2178\">#2178</a> is merged</li>\n<li>2024-06-25 Version 0.24.2 is released with the fix</li>\n<li>2024-09-20 Public disclosure</li>\n</ul>",
  "post_number": 1,
  "post_type": 1,
  "updated_at": "2024-10-10T09:02:17.756Z",
  "reply_count": 1,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 219,
  "reads": 25,
  "readers_count": 24,
  "score": 1105.0,
  "yours": false,
  "topic_id": 1184,
  "topic_slug": "cve-2024-38365-public-disclosure-btcd-findanddelete-bug",
  "topic_title": "CVE-2024-38365 public disclosure (btcd `FindAndDelete` bug)",
  "topic_html_title": "CVE-2024-38365 public disclosure (btcd `FindAndDelete` bug)",
  "category_id": 8,
  "display_username": "Antoine Poinsot",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "This work is a collaboration between Niklas G\u00f6gge ([Brink](https://brink.dev/)) and Antoine Poinsot ([Wizardsardine](https://wizardsardine.com/)). \n\nBtcd prior to version [0.24.2](https://github.com/btcsuite/btcd/releases/tag/v0.24.2) does not correctly implement the consensus rules for legacy signature verification. The incompatible behavior can be triggered by a standard transaction, making it possible for anyone to fork off vulnerable btcd nodes at virtually no cost.\n\n# Details\n\nWhen verifying a signature for a transaction input, the script interpreter of a Bitcoin node re-constructs the signed message and checks the signature against it. The original algorithm for re-constructing the message is detailed in [this wiki page](https://en.bitcoin.it/wiki/OP_CHECKSIG#How_it_works). Notably, the signed message contains a commitment to the Script being executed. For legacy transaction inputs any occurrence of the signature being verified is first removed from the executed Script committed in the message. This is often referred to as the `FindAndDelete` behavior, named after the function implementing this in Satoshi Nakamoto's original Bitcoin codebase.\n\n`removeOpcodeByData` is Btcd's equivalent of Bitcoin Core's `FindAndDelete`. Prior to version 0.24.2, `removeOpcodeByData` would remove any data push from the executed Script that *contains* the signature. Whereas Bitcoin Core's (and Satoshi's) `FindAndDelete` only removes exact matches. Using public key recovery it is possible to create a Script which contains a signature check and an extraneous data push which contains the signature itself and additional padding data. This Script can be committed to in a P2SH output which can be spent by a standard transaction which would be considered valid by Bitcoin Core and invalid by vulnerable Btcd nodes.\n\nThis bug was introduced in commit [`76339baf6c9407b073828245e3458f4df35190ae`](https://github.com/btcsuite/btcd/commit/76339baf6c9407b073828245e3458f4df35190ae) in 2014, in reaction to a new Bitcoin Core unit test demonstrating the original implementation was consensus-incompatible.\n\n# Credits\n\nThanks to the Btcd maintainers for awarding us a bug bounty.\n\n# Timeline\n\n- 2024-03-20 Niklas and Antoine discuss the quirks of Bitcoin Core's `FindAndDelete` (in relation to Antoine's research into the [worst case block validation time](https://delvingbitcoin.org/t/great-consensus-cleanup-revival/710?u=antoinep)) and decide to take a look at if Btcd got all the quirks right in their reimplementation\n- 2024-03-22 Niklas and Antoine email a detailed report of the issue to Olaoluwa Osuntokun\n- 2024-03-26 Olaoluwa acknowledges the issue and creates a discussion group with another Btcd maintainer\n- 2024-05-07 Antoine reserves [CVE-2024-36051](https://www.cve.org/CVERecord?id=CVE-2024-36051) through Mitre\n- 2024-06-21 Laolu reserves [CVE-2024-38365](https://github.com/btcsuite/btcd/security/advisories/GHSA-27vh-h6mc-q6g8) through Github\n- 2024-04-26 A covert fix is included in PR [#2178](https://github.com/btcsuite/btcd/pull/2178)\n- 2024-05-22 PR [#2178](https://github.com/btcsuite/btcd/pull/2178) is merged\n- 2024-06-25 Version 0.24.2 is released with the fix\n- 2024-09-20 Public disclosure",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 12,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}