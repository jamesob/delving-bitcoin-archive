{
  "id": 3064,
  "name": "Eric Voskuil",
  "username": "evoskuil",
  "avatar_template": "/user_avatar/delvingbitcoin.org/evoskuil/{size}/391_2.png",
  "created_at": "2024-08-27T16:05:12.460Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"evoskuil\" data-post=\"32\" data-topic=\"710\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/evoskuil/48/391_2.png\" class=\"avatar\"> evoskuil:</div>\n<blockquote>\n<p>It will require validation checks that are not necessary. If you want to argue it as an SPV bandwidth optimization, have at it.</p>\n</blockquote>\n</aside>\n<p>The previously-cited discussion on bitcoin-dev centered on the detection of a malleated block message, for the purpose of caching block invalidity. As justification for the proposal it was argued that the fork allows for (1) earlier and therefore more efficient detection/prevention of block hash malleation, (2) that this is important because of the supposed DoS benefit of caching invalid block hashes, (3) that this would allow a block hash to uniquely identify a block (presumably the block message payload), valid or otherwise.</p>\n<p>It was shown in the discussion, and I believe agreed, that these arguments aren\u2019t valid. (1) Detection is presently possible without even parsing beyond the input point of the coinbase tx, whereas prevention via size constraint requires parsing every transaction in the block to determine sizes, (2) caching the hashes of block headers that are determined to represent invalid blocks serves no effective DoS protection purpose, instead opening the node to a disk fill attack (similar to the recent banning vulnerability) that must be mitigated, and (3) this objective is not achieved as duplicated tx hash malleation remains.</p>\n<p>These are the aspects that pertain to a node/consensus. As I stated above, one can certainly argue that this fork can simplify/optimize SPV implementation. My point is to exclude the invalid arguments from consideration.</p>\n<aside class=\"quote no-group\" data-username=\"evoskuil\" data-post=\"30\" data-topic=\"710\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/evoskuil/48/391_2.png\" class=\"avatar\"> evoskuil:</div>\n<blockquote>\n<p>This should not even be under consideration at this point.</p>\n</blockquote>\n</aside>\n<p>I\u2019ll withdraw this statement, I got a little carried away. It\u2019s worthy of consideration as long as we are clear about the meaningful objectives. Once invalid objectives are discarded it may (or may not) be that other SPV optimizations become more attractive.</p>",
  "post_number": 36,
  "post_type": 1,
  "updated_at": "2024-08-27T16:05:12.460Z",
  "reply_count": 0,
  "reply_to_post_number": 32,
  "quote_count": 2,
  "incoming_link_count": 0,
  "reads": 7,
  "readers_count": 6,
  "score": 16.4,
  "yours": false,
  "topic_id": 710,
  "topic_slug": "great-consensus-cleanup-revival",
  "topic_title": "Great Consensus Cleanup Revival",
  "topic_html_title": "Great Consensus Cleanup Revival",
  "category_id": 7,
  "display_username": "Eric Voskuil",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"evoskuil, post:32, topic:710\"]\nIt will require validation checks that are not necessary. If you want to argue it as an SPV bandwidth optimization, have at it.\n[/quote]\n\nThe previously-cited discussion on bitcoin-dev centered on the detection of a malleated block message, for the purpose of caching block invalidity. As justification for the proposal it was argued that the fork allows for (1) earlier and therefore more efficient detection/prevention of block hash malleation, (2) that this is important because of the supposed DoS benefit of caching invalid block hashes, (3) that this would allow a block hash to uniquely identify a block (presumably the block message payload), valid or otherwise.\n\nIt was shown in the discussion, and I believe agreed, that these arguments aren't valid. (1) Detection is presently possible without even parsing beyond the input point of the coinbase tx, whereas prevention via size constraint requires parsing every transaction in the block to determine sizes, (2) caching the hashes of block headers that are determined to represent invalid blocks serves no effective DoS protection purpose, instead opening the node to a disk fill attack (similar to the recent banning vulnerability) that must be mitigated, and (3) this objective is not achieved as duplicated tx hash malleation remains.\n\nThese are the aspects that pertain to a node/consensus. As I stated above, one can certainly argue that this fork can simplify/optimize SPV implementation. My point is to exclude the invalid arguments from consideration.\n\n[quote=\"evoskuil, post:30, topic:710\"]\nThis should not even be under consideration at this point.\n[/quote]\n\nI'll withdraw this statement, I got a little carried away. It's worthy of consideration as long as we are clear about the meaningful objectives. Once invalid objectives are discarded it may (or may not) be that other SPV optimizations become more attractive.",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 324,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false
}