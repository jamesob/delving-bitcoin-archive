{
  "id": 3026,
  "name": "Pieter Wuille",
  "username": "sipa",
  "avatar_template": "/user_avatar/delvingbitcoin.org/sipa/{size}/102_2.png",
  "created_at": "2024-08-21T14:31:47.567Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"moonsettler\" data-post=\"6\" data-topic=\"1081\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/moonsettler/48/38_2.png\" class=\"avatar\"> moonsettler:</div>\n<blockquote>\n<p>It\u2019s pretty expensive for a low power device to keep churning double point multiplications along with hashes</p>\n</blockquote>\n</aside>\n<p>It\u2019s certainly expensive, and the cost grows exponentially with the number of bits, but I don\u2019t think say a 4-bit grind is beyond the power of small devices, which would suffice to leak a secret with 64 signatures.</p>\n<aside class=\"quote no-group\" data-username=\"moonsettler\" data-post=\"6\" data-topic=\"1081\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/moonsettler/48/38_2.png\" class=\"avatar\"> moonsettler:</div>\n<blockquote>\n<p>which might not even be possible with only a firmware modification</p>\n</blockquote>\n</aside>\n<p>Well the device could have been constructed maliciously in the first place?</p>\n<aside class=\"quote no-group\" data-username=\"moonsettler\" data-post=\"6\" data-topic=\"1081\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/moonsettler/48/38_2.png\" class=\"avatar\"> moonsettler:</div>\n<blockquote>\n<p>the device also needs to remember which parts of the seed it had leaked</p>\n</blockquote>\n</aside>\n<p>Using FEC codes that\u2019s not necessary. Using that, one can take the secret-to-be-leaked, expand with a several GiB \u201cchecksum\u201d, and then in every signature leak a few deterministically-selected (e.g. based on the message and device key that\u2019s only known to the hacker and/or malicious manufacturer) bits of that checksum. Given the size of the checksum, it\u2019s unlikely that any two signatures collide in the position, and as soon as enough bits of the checksum are leaked (regardless of where they are), the attacker can reconstruct the original secret.</p>\n<p>(Note that this several GiB checksum isn\u2019t actually ever materialized; arbitrary bits of it can be computed on-the-fly).</p>\n<aside class=\"quote no-group\" data-username=\"moonsettler\" data-post=\"6\" data-topic=\"1081\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/moonsettler/48/38_2.png\" class=\"avatar\"> moonsettler:</div>\n<blockquote>\n<p>And a single factory or user validation test that checks the generation of Q is up to spec would catch it immediately (similar to RFC6979). With low bandwith leaks the low probability random attack is not likely to be viable, and the risk of getting caught on a routine test is very high if the attack is \u201calways on\u201d.</p>\n</blockquote>\n</aside>\n<p>The device could choose to only behave maliciously in certain situations, such as when interacting with large amounts.</p>\n<p>If there are scenarios where interactive anti-exfil is just not possible, then none of the above are reasons not to proceed with a scheme like this, as it\u2019s probably the best possible. But if people are seriously trying to address the exfiltration scenario, then I wouldn\u2019t just dismiss the possibility that exfiltration is still possible through grinding.</p>",
  "post_number": 7,
  "post_type": 1,
  "updated_at": "2024-08-21T14:32:38.344Z",
  "reply_count": 3,
  "reply_to_post_number": 6,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 7,
  "readers_count": 6,
  "score": 86.2,
  "yours": false,
  "topic_id": 1081,
  "topic_slug": "non-interactive-anti-exfil-airgap-compatible",
  "topic_title": "Non interactive anti-exfil (airgap compatible)",
  "topic_html_title": "Non interactive anti-exfil (airgap compatible)",
  "category_id": 7,
  "display_username": "Pieter Wuille",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"moonsettler, post:6, topic:1081\"]\nIt\u2019s pretty expensive for a low power device to keep churning double point multiplications along with hashes\n[/quote]\n\nIt's certainly expensive, and the cost grows exponentially with the number of bits, but I don't think say a 4-bit grind is beyond the power of small devices, which would suffice to leak a secret with 64 signatures.\n\n[quote=\"moonsettler, post:6, topic:1081\"]\nwhich might not even be possible with only a firmware modification\n[/quote]\n\nWell the device could have been constructed maliciously in the first place?\n\n[quote=\"moonsettler, post:6, topic:1081\"]\nthe device also needs to remember which parts of the seed it had leaked\n[/quote]\n\nUsing FEC codes that's not necessary. Using that, one can take the secret-to-be-leaked, expand with a several GiB \"checksum\", and then in every signature leak a few deterministically-selected (e.g. based on the message and device key that's only known to the hacker and/or malicious manufacturer) bits of that checksum. Given the size of the checksum, it's unlikely that any two signatures collide in the position, and as soon as enough bits of the checksum are leaked (regardless of where they are), the attacker can reconstruct the original secret.\n\n(Note that this several GiB checksum isn't actually ever materialized; arbitrary bits of it can be computed on-the-fly).\n\n[quote=\"moonsettler, post:6, topic:1081\"]\nAnd a single factory or user validation test that checks the generation of Q is up to spec would catch it immediately (similar to RFC6979). With low bandwith leaks the low probability random attack is not likely to be viable, and the risk of getting caught on a routine test is very high if the attack is \u201calways on\u201d.\n[/quote]\n\nThe device could choose to only behave maliciously in certain situations, such as when interacting with large amounts.\n\nIf there are scenarios where interactive anti-exfil is just not possible, then none of the above are reasons not to proceed with a scheme like this, as it's probably the best possible. But if people are seriously trying to address the exfiltration scenario, then I wouldn't just dismiss the possibility that exfiltration is still possible through grinding.",
  "actions_summary": [
    {
      "id": 2,
      "count": 3
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 96,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 3
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 3,
  "current_user_used_main_reaction": false
}