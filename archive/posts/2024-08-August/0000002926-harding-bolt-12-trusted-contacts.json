{
  "id": 2926,
  "name": "David A. Harding",
  "username": "harding",
  "avatar_template": "/user_avatar/delvingbitcoin.org/harding/{size}/6_2.png",
  "created_at": "2024-08-07T14:12:45.195Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"t-bast\" data-post=\"3\" data-topic=\"1046\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/t-bast/48/98_2.png\" class=\"avatar\"> t-bast:</div>\n<blockquote>\n<p>Attackers can be very creative with phishing, so I\u2019d like an easy way for users to know whether they can trust payment notes or not. If the payment really comes from one of your trusted contacts, you know you can trust it.</p>\n</blockquote>\n</aside>\n<p>The creativity of attackers is part of my concern. I assume the expected UI works like this:</p>\n<ol>\n<li>Alice clicks/scans an offer created by Bob that contains his contact key.</li>\n<li>Alice\u2019s wallet says \u201cDo you want to add the recipient to your contacts list?\u201d  Alice clicks Yes and the wallet prompts her to enter Bob\u2019s name.</li>\n<li>The wallet completes the payment flow.</li>\n<li>At some later point when Bob sends a payment to Alice, it shows up as <em>From Bob</em>.</li>\n</ol>\n<p>Can Mallory abuse that flow to get her key associated with Bob\u2019s name?  Maybe she offers a giveway using the merchant-pays-user flow:</p>\n<ol>\n<li>Mallory creates a page promising that the first 100 responders will receive 100,000 sats for them plus 100,000 sats for their best friend.</li>\n<li>The instructions on the page say: \u201cclick this link and then, in your wallet, enter the name of your best friend who you also want to receive 100,000 sats.  Hurry up, only the first 100 responders will receive 100,000 sats\u201d</li>\n<li>Alice quickly follows the instructions, associating Mallory\u2019s key with Bob\u2019s name.</li>\n<li>Mallory performs whatever evil it\u2019s possible to perform with access to forge payments from Bob.</li>\n</ol>\n<p>Admittedly, that\u2019s a lot more work for Mallory than just lying in the <code>payer_note</code> field.  But I think it\u2019s a lot easier to accustom users to the expectation that the <code>payer_note</code> is arbitrary text that can contain lies than it is to prevent creative phishers from being able to associate their keys with the names of other people and organizations.  If phishers are able to obtain access to a trusted field, that may magnify the damage they can do over only having access to fields that are known to be untrustworthy.</p>\n<p>Some additional problems:</p>\n<ul>\n<li>What happens when a contact key gets compromised?  For example, an organization contact key used with thousands or millions of customers.</li>\n<li>What happens when Bob uses multiple wallets?  For example, he sometimes sends payments to Alice from his mobile wallet; other times, he pays from his desktop wallet with a different seed.  Will Alice\u2019s wallet allow associating the same name with multiple contact keys?  Will there be significant user consternation and support issues if some of Bob\u2019s payments show up as untrusted?</li>\n</ul>\n<p>I\u2019m sorry to be producing <a href=\"http://radio-weblogs.com/0107584/stories/2002/05/05/stopEnergyByDaveWiner.html\">stop energy</a>.  My thinking is that it might be both easier and safer to simply train users that nothing about a payment should be trusted except the amount.</p>",
  "post_number": 4,
  "post_type": 1,
  "updated_at": "2024-08-07T14:12:45.195Z",
  "reply_count": 0,
  "reply_to_post_number": 3,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 11,
  "readers_count": 10,
  "score": 46.6,
  "yours": false,
  "topic_id": 1046,
  "topic_slug": "bolt-12-trusted-contacts",
  "topic_title": "Bolt 12 Trusted Contacts",
  "topic_html_title": "Bolt 12 Trusted Contacts",
  "category_id": 7,
  "display_username": "David A. Harding",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"t-bast, post:3, topic:1046\"]\nAttackers can be very creative with phishing, so I\u2019d like an easy way for users to know whether they can trust payment notes or not. If the payment really comes from one of your trusted contacts, you know you can trust it.\n[/quote]\n\nThe creativity of attackers is part of my concern. I assume the expected UI works like this:\n\n1. Alice clicks/scans an offer created by Bob that contains his contact key.\n2. Alice's wallet says \"Do you want to add the recipient to your contacts list?\"  Alice clicks Yes and the wallet prompts her to enter Bob's name.\n3. The wallet completes the payment flow.\n4. At some later point when Bob sends a payment to Alice, it shows up as _From Bob_.\n\nCan Mallory abuse that flow to get her key associated with Bob's name?  Maybe she offers a giveway using the merchant-pays-user flow:\n\n1. Mallory creates a page promising that the first 100 responders will receive 100,000 sats for them plus 100,000 sats for their best friend.\n2. The instructions on the page say: \"click this link and then, in your wallet, enter the name of your best friend who you also want to receive 100,000 sats.  Hurry up, only the first 100 responders will receive 100,000 sats\"\n3. Alice quickly follows the instructions, associating Mallory's key with Bob's name.\n4. Mallory performs whatever evil it's possible to perform with access to forge payments from Bob.\n\nAdmittedly, that's a lot more work for Mallory than just lying in the `payer_note` field.  But I think it's a lot easier to accustom users to the expectation that the `payer_note` is arbitrary text that can contain lies than it is to prevent creative phishers from being able to associate their keys with the names of other people and organizations.  If phishers are able to obtain access to a trusted field, that may magnify the damage they can do over only having access to fields that are known to be untrustworthy.\n\nSome additional problems:\n\n- What happens when a contact key gets compromised?  For example, an organization contact key used with thousands or millions of customers.\n- What happens when Bob uses multiple wallets?  For example, he sometimes sends payments to Alice from his mobile wallet; other times, he pays from his desktop wallet with a different seed.  Will Alice's wallet allow associating the same name with multiple contact keys?  Will there be significant user consternation and support issues if some of Bob's payments show up as untrusted?\n\nI'm sorry to be producing [stop energy](http://radio-weblogs.com/0107584/stories/2002/05/05/stopEnergyByDaveWiner.html).  My thinking is that it might be both easier and safer to simply train users that nothing about a payment should be trusted except the amount.",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 6,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [
    {
      "id": "thinking",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false
}