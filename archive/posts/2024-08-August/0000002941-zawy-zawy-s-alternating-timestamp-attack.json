{
  "id": 2941,
  "name": "Zawy",
  "username": "zawy",
  "avatar_template": "/user_avatar/delvingbitcoin.org/zawy/{size}/750_2.png",
  "created_at": "2024-08-11T16:41:32.193Z",
  "cooked": "<p>For a &gt;50% public mine to work, they only need to ignore blocks by miners with honest timestamps when it threatens their control of the control of the MTP.  If miner\u2019s don\u2019t believe the cheating chain will be reverted, they could end up joining it instead of losing all their blocks. They don\u2019t do it because it devalues the net present value of their equipment by devaluing the public\u2019s valuation of the coin. Testnet is different because of the absence of the profit motive. Someone might do it for fun. Or there might be a reason to get a lot of blocks. It needs it more than mainnet.</p>\n<p>I threw out a lot of scenarios, so let me summarize how I <em>wish</em> things could be done from a theoretical perfection point of view as opposed to actually implementing something without causing a disaster in the ecosystem by trying to be perfect.  This is from the most perfect (and most dangerous) to the least perfect, safe, easily acceptable.</p>\n<ol>\n<li>monotonic, +/- 10 sec \u201carrival\u201d rule, remove MTP, FTL, &amp; 4x &amp; 1/4 limits</li>\n<li>monotonic (&amp; ideally reduce FTL &amp; remove MTP &amp; 4x &amp; 1/4)</li>\n<li>2 hr past time every block (easiest &amp; safest option)</li>\n<li>2 hr past time every 2016 block &amp; force nActualtime &gt; 0</li>\n</ol>\n<p>If a past time limit is meant only to protect testnet (like the difficulty reduction rule), then the last option is best because it keeps testnet more like mainnet.</p>\n<p>FWIW <a href=\"https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-August/016320.html\" rel=\"noopener nofollow ugc\">Johnson Lau argued for</a> a 1-day past time limit as a soft fork instead of 2 hours which require a hard forks. In a soft fork, a smallish miner could cause a chain split due to miners who didn\u2019t upgrade. He would just need to get the 2 blocks at the transition, setting the first timestamp (2016n -1) to the FTL, then the 2nd timestamp (2016n) back to the MTP.  If I\u2019m doing the Poisson calculation correctly, 2% of the transitions will see only 5 blocks in the past 2 hours which means on those instances anyone getting the 2016n block can set its timestamp in the past &gt;2 hr to permanently split off those node that didn\u2019t upgrade.</p>\n<p>So if the goal is to prevent a &gt;50% attack for many many excess blocks on mainnet with a <strong>soft fork</strong> (which is more likely to occur sooner) then a 1 day past time limit on every block or on the 2016 transition block with Murch\u2019s additional requirement timestamp_{2016\u00d7n} &lt; timestamp_{2016\u00d7n+2015}.</p>",
  "post_number": 5,
  "post_type": 1,
  "updated_at": "2024-08-12T12:46:20.522Z",
  "reply_count": 0,
  "reply_to_post_number": 4,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 10,
  "readers_count": 9,
  "score": 1.8,
  "yours": false,
  "topic_id": 1062,
  "topic_slug": "zawy-s-alternating-timestamp-attack",
  "topic_title": "Zawy\u2019s Alternating Timestamp Attack",
  "topic_html_title": "Zawy\u2019s Alternating Timestamp Attack",
  "category_id": 7,
  "display_username": "Zawy",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 6,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "username": "MentalNomad",
    "name": "Edward  Iskra",
    "avatar_template": "/letter_avatar_proxy/v4/letter/m/76d3ee/{size}.png"
  },
  "bookmarked": false,
  "raw": "For a >50% public mine to work, they only need to ignore blocks by miners with honest timestamps when it threatens their control of the control of the MTP.  If miner's don't believe the cheating chain will be reverted, they could end up joining it instead of losing all their blocks. They don't do it because it devalues the net present value of their equipment by devaluing the public's valuation of the coin. Testnet is different because of the absence of the profit motive. Someone might do it for fun. Or there might be a reason to get a lot of blocks. It needs it more than mainnet. \n\nI threw out a lot of scenarios, so let me summarize how I *wish* things could be done from a theoretical perfection point of view as opposed to actually implementing something without causing a disaster in the ecosystem by trying to be perfect.  This is from the most perfect (and most dangerous) to the least perfect, safe, easily acceptable. \n\n1. monotonic, +/- 10 sec \"arrival\" rule, remove MTP, FTL, & 4x & 1/4 limits\n2. monotonic (& ideally reduce FTL & remove MTP & 4x & 1/4)\n3. 2 hr past time every block (easiest & safest option)\n4. 2 hr past time every 2016 block & force nActualtime > 0\n\nIf a past time limit is meant only to protect testnet (like the difficulty reduction rule), then the last option is best because it keeps testnet more like mainnet.\n\nFWIW [Johnson Lau argued for](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-August/016320.html) a 1-day past time limit as a soft fork instead of 2 hours which require a hard forks. In a soft fork, a smallish miner could cause a chain split due to miners who didn't upgrade. He would just need to get the 2 blocks at the transition, setting the first timestamp (2016n -1) to the FTL, then the 2nd timestamp (2016n) back to the MTP.  If I'm doing the Poisson calculation correctly, 2% of the transitions will see only 5 blocks in the past 2 hours which means on those instances anyone getting the 2016n block can set its timestamp in the past >2 hr to permanently split off those node that didn't upgrade.\n\nSo if the goal is to prevent a >50% attack for many many excess blocks on mainnet with a **soft fork** (which is more likely to occur sooner) then a 1 day past time limit on every block or on the 2016 transition block with Murch's additional requirement timestamp_{2016\u00d7n} < timestamp_{2016\u00d7n+2015}.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 502,
  "hidden": false,
  "trust_level": 0,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}