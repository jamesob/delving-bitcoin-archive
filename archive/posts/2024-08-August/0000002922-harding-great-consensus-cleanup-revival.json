{
  "id": 2922,
  "name": "David A. Harding",
  "username": "harding",
  "avatar_template": "/user_avatar/delvingbitcoin.org/harding/{size}/6_2.png",
  "created_at": "2024-08-07T02:51:55.624Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"MattCorallo\" data-post=\"25\" data-topic=\"710\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/m/e47c2d/48.png\" class=\"avatar\"> MattCorallo:</div>\n<blockquote>\n<p>I\u2019d still very much love to see the nLockTime set to the block height, it makes pulling the block height out of the coinbase transaction simpler, though its not a super critical difference.</p>\n</blockquote>\n</aside>\n<p>I\u2019m not sure if Matt is talking about deserialization being simpler or that compact extraction using a SHA256 midstate would be simpler.  The former is pretty obvious\u2014there\u2019s no need to deal with CScript (yay!)\u2014but the later might not be clear, so I\u2019ll briefly describe it: with a consensus-enforced commitment to height in the locktime field, which is the last field in a serialized transaction, I can prove to you that a particular 80-byte header is for block 999999 by giving you the 32-byte sha256 midstate of the coinbase transaction up to the final 1 or 2 chunks, the missing chunks (64 bytes each), and a partial merkle tree for the coinbase transaction (448 bytes or less).  You take the midstate and SHA256 iterate over the remaining chunks that commit to the locktime to get the coinbase transaction\u2019s txid.  You insert that in the partial merkle tree and verify the tree connects to the merkle root in the block header.</p>\n<p>By comparison, to prove that now with the BIP30 height commitment, I need to give you the entire coinbase transaction plus the partial merkle tree (or I need to use a fancier proof system).  A coinbase transaction can be up to almost 1 MB, so the worst case proof of header height now is ~1 MB compared to ~700 bytes with a consensus-enforced commitment in locktime.</p>\n<p>I can\u2019t think of how that would be useful offhand, but it seems like a nice advantage of the locktime approach.</p>\n<p>(Edited: <a class=\"mention\" href=\"/u/ajtowns\">@ajtowns</a> reminded me that SHA256 chunks are 64 bytes, not 32 bytes.)</p>",
  "post_number": 26,
  "post_type": 1,
  "updated_at": "2024-08-07T05:49:06.895Z",
  "reply_count": 0,
  "reply_to_post_number": 25,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 6,
  "readers_count": 5,
  "score": 0.8,
  "yours": false,
  "topic_id": 710,
  "topic_slug": "great-consensus-cleanup-revival",
  "topic_title": "Great Consensus Cleanup Revival",
  "topic_html_title": "Great Consensus Cleanup Revival",
  "category_id": 7,
  "display_username": "David A. Harding",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 3,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"MattCorallo, post:25, topic:710\"]\nI\u2019d still very much love to see the nLockTime set to the block height, it makes pulling the block height out of the coinbase transaction simpler, though its not a super critical difference.\n[/quote]\n\nI'm not sure if Matt is talking about deserialization being simpler or that compact extraction using a SHA256 midstate would be simpler.  The former is pretty obvious---there's no need to deal with CScript (yay!)---but the later might not be clear, so I'll briefly describe it: with a consensus-enforced commitment to height in the locktime field, which is the last field in a serialized transaction, I can prove to you that a particular 80-byte header is for block 999999 by giving you the 32-byte sha256 midstate of the coinbase transaction up to the final 1 or 2 chunks, the missing chunks (64 bytes each), and a partial merkle tree for the coinbase transaction (448 bytes or less).  You take the midstate and SHA256 iterate over the remaining chunks that commit to the locktime to get the coinbase transaction's txid.  You insert that in the partial merkle tree and verify the tree connects to the merkle root in the block header.\n\nBy comparison, to prove that now with the BIP30 height commitment, I need to give you the entire coinbase transaction plus the partial merkle tree (or I need to use a fancier proof system).  A coinbase transaction can be up to almost 1 MB, so the worst case proof of header height now is ~1 MB compared to ~700 bytes with a consensus-enforced commitment in locktime.\n\nI can't think of how that would be useful offhand, but it seems like a nice advantage of the locktime approach.\n\n(Edited: @ajtowns reminded me that SHA256 chunks are 64 bytes, not 32 bytes.)",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 6,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}