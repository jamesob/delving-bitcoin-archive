{
  "id": 3054,
  "name": "David A. Harding",
  "username": "harding",
  "avatar_template": "/user_avatar/delvingbitcoin.org/harding/{size}/6_2.png",
  "created_at": "2024-08-26T14:06:49.055Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"evoskuil\" data-post=\"28\" data-topic=\"710\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/evoskuil/48/391_2.png\" class=\"avatar\"> evoskuil:</div>\n<blockquote>\n<p>I see no justification for the proposed invalidation of 64 byte transactions. As discussed, there is a much simpler, more efficient, and equally effective resolution that requires no new consensus rule.</p>\n</blockquote>\n</aside>\n<p>In the referenced thread, you <a href=\"https://mailing-list.bitcoindevs.xyz/bitcoindev/be78e733-6e9f-4f4e-8dc2-67b79ddbf677n@googlegroups.com/\">wrote</a>:</p>\n<blockquote>\n<p>The only possible benefit that I can see here is the possible very small bandwidth savings pertaining to SPV proofs. I would have a very hard time justifying adding any consensus rule to achieve only that result.</p>\n</blockquote>\n<p>It\u2019s true that the attack against simplified verification can be prevented through proofs that are a maximum of about 400 bytes larger per block in the worse case, which is about a 70% increase in proof size[1].  That doesn\u2019t seem significant in network traffic when many lightweight clients might be using something like BIP157/158 compact block filters that send extra <em>megabytes</em> of data even in the best case.  However, that extra 400 bytes per proof could be significant if merkle proofs are being validated in consensus protocols (e.g. after a script upgrade to Bitcoin).</p>\n<p>[1] Base proof: 80 byte header + 448 byte partial merkle tree = 528 bytes.  Proof with coinbase tx, assuming the coinbase tx is in the left half of the tree and the tx to prove is in the right half of the tree: 80 byte header + 416 bytes partial merkle tree for coinbase tx + 416 bytes partial merkle tree for tx = 912 bytes.</p>",
  "post_number": 29,
  "post_type": 1,
  "updated_at": "2024-08-26T14:06:49.055Z",
  "reply_count": 1,
  "reply_to_post_number": 28,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 2,
  "readers_count": 1,
  "score": 5.4,
  "yours": false,
  "topic_id": 710,
  "topic_slug": "great-consensus-cleanup-revival",
  "topic_title": "Great Consensus Cleanup Revival",
  "topic_html_title": "Great Consensus Cleanup Revival",
  "category_id": 7,
  "display_username": "David A. Harding",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"evoskuil, post:28, topic:710\"]\nI see no justification for the proposed invalidation of 64 byte transactions. As discussed, there is a much simpler, more efficient, and equally effective resolution that requires no new consensus rule.\n[/quote]\n\nIn the referenced thread, you [wrote](https://mailing-list.bitcoindevs.xyz/bitcoindev/be78e733-6e9f-4f4e-8dc2-67b79ddbf677n@googlegroups.com/):\n\n> The only possible benefit that I can see here is the possible very small bandwidth savings pertaining to SPV proofs. I would have a very hard time justifying adding any consensus rule to achieve only that result.\n\nIt's true that the attack against simplified verification can be prevented through proofs that are a maximum of about 400 bytes larger per block in the worse case, which is about a 70% increase in proof size[1].  That doesn't seem significant in network traffic when many lightweight clients might be using something like BIP157/158 compact block filters that send extra _megabytes_ of data even in the best case.  However, that extra 400 bytes per proof could be significant if merkle proofs are being validated in consensus protocols (e.g. after a script upgrade to Bitcoin).\n\n[1] Base proof: 80 byte header + 448 byte partial merkle tree = 528 bytes.  Proof with coinbase tx, assuming the coinbase tx is in the left half of the tree and the tx to prove is in the right half of the tree: 80 byte header + 416 bytes partial merkle tree for coinbase tx + 416 bytes partial merkle tree for tx = 912 bytes.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 6,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}