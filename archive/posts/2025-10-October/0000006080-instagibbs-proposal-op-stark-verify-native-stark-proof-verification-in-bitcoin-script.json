{
  "id": 6080,
  "name": "Gregory Sanders",
  "username": "instagibbs",
  "avatar_template": "/user_avatar/delvingbitcoin.org/instagibbs/{size}/28_2.png",
  "created_at": "2025-10-14T16:09:26.470Z",
  "cooked": "<p>Thanks for the writeup! I appreciate the level of detail and caveats that help me understand some of the tradeoffs existing in this space. FWIW my interests currently are very high level, thinking about practical resource usage.</p>\n<aside class=\"quote no-group\" data-username=\"Abdel\" data-post=\"1\" data-topic=\"2056\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/abdel/48/1579_2.png\" class=\"avatar\"> Abdel:</div>\n<blockquote>\n<p>Proof sizes are typically in the range of hundreds of KB to 1 MB uncompressed, but compression (e.g., bzip2) could reduce them below 100 KB in many cases.</p>\n</blockquote>\n</aside>\n<p>These sized may end up being problematic as enshrining a proof system with &gt;400kB proof sizes would make decentralized block building, and make decentralized relay difficult due to inability to predict when things will be mined.</p>\n<aside class=\"quote no-group\" data-username=\"Abdel\" data-post=\"1\" data-topic=\"2056\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/abdel/48/1579_2.png\" class=\"avatar\"> Abdel:</div>\n<blockquote>\n<p>On-chain verification time would be in the order of 10s of milliseconds on standard hardware</p>\n</blockquote>\n</aside>\n<p>A single proof seems to eat up on the order(or two) of the verification \u201cbudget\u201d of an entire block if we\u2019re targeting something like 100ms per block in the average case. Granted, this threshold is \u201cmade up\u201d, but it would be important to talk about what the underlying target would be for an \u201caverage\u201d block using these consistently.</p>\n<p>What would the Circle STARK look like as far as resources both in proof sizes and verification time?</p>\n<aside class=\"quote no-group\" data-username=\"Abdel\" data-post=\"1\" data-topic=\"2056\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/abdel/48/1579_2.png\" class=\"avatar\"> Abdel:</div>\n<blockquote>\n<p>Feasible and demonstrated for Circle STARKs, but extremely inefficient and intricate; pushes complexity into Script.</p>\n</blockquote>\n</aside>\n<p>Same question but Circle STARKs within Bitcoin Script using CAT? What about with Simplicity with currently defined JETs?</p>\n<p>Would be nice to have a high level understanding of how much is bought by making a \u201cJET\u201d of exactly the specific STARK prover beyond \u201clow/medium-high/high\u201d labels in the table.</p>",
  "post_number": 2,
  "post_type": 1,
  "posts_count": 2,
  "updated_at": "2025-10-14T16:09:26.470Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 7,
  "reads": 20,
  "readers_count": 19,
  "score": 54.0,
  "yours": false,
  "topic_id": 2056,
  "topic_slug": "proposal-op-stark-verify-native-stark-proof-verification-in-bitcoin-script",
  "topic_title": "Proposal: OP_STARK_VERIFY - Native STARK Proof Verification in Bitcoin Script",
  "topic_html_title": "Proposal: OP_STARK_VERIFY - Native STARK Proof Verification in Bitcoin Script",
  "category_id": 7,
  "display_username": "Gregory Sanders",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Thanks for the writeup! I appreciate the level of detail and caveats that help me understand some of the tradeoffs existing in this space. FWIW my interests currently are very high level, thinking about practical resource usage.\n\n[quote=\"Abdel, post:1, topic:2056\"]\nProof sizes are typically in the range of hundreds of KB to 1 MB uncompressed, but compression (e.g., bzip2) could reduce them below 100 KB in many cases.\n\n[/quote]\n\nThese sized may end up being problematic as enshrining a proof system with >400kB proof sizes would make decentralized block building, and make decentralized relay difficult due to inability to predict when things will be mined. \n\n[quote=\"Abdel, post:1, topic:2056\"]\nOn-chain verification time would be in the order of 10s of milliseconds on standard hardware\n\n[/quote]\n\nA single proof seems to eat up on the order(or two) of the verification \u201cbudget\u201d of an entire block if we\u2019re targeting something like 100ms per block in the average case. Granted, this threshold is \u201cmade up\u201d, but it would be important to talk about what the underlying target would be for an \u201caverage\u201d block using these consistently.\n\nWhat would the Circle STARK look like as far as resources both in proof sizes and verification time? \n\n[quote=\"Abdel, post:1, topic:2056\"]\nFeasible and demonstrated for Circle STARKs, but extremely inefficient and intricate; pushes complexity into Script.\n\n[/quote]\n\nSame question but Circle STARKs within Bitcoin Script using CAT? What about with Simplicity with currently defined JETs?\n\nWould be nice to have a high level understanding of how much is bought by making a \u201cJET\u201d of exactly the specific STARK prover beyond \u201clow/medium-high/high\u201d labels in the table.",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 31,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Thanks for the writeup! I appreciate the level of detail and caveats that help me understand some of the tradeoffs existing in this space. FWIW my interests currently are very high level, thinking about practical resource usage. \n\nThese sized may end up being problematic as enshrining a proof system&hellip;",
  "truncated": true,
  "post_url": "/t/proposal-op-stark-verify-native-stark-proof-verification-in-bitcoin-script/2056/2",
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}