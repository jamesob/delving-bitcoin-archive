{
  "id": 6053,
  "name": "",
  "username": "fanquake",
  "avatar_template": "/letter_avatar_proxy/v4/letter/f/ad7895/{size}.png",
  "created_at": "2025-10-12T09:14:18.801Z",
  "cooked": "<p>Bitcoin Core version v30.0 is now available from:</p>\n<p><a href=\"https://bitcoincore.org/bin/bitcoin-core-30.0/\">https://bitcoincore.org/bin/bitcoin-core-30.0/</a></p>\n<p>This release includes new features, various bug fixes and performance\nimprovements, as well as updated translations.</p>\n<p>Please report bugs using the issue tracker at GitHub:</p>\n<p><a href=\"https://github.com/bitcoin/bitcoin/issues\">https://github.com/bitcoin/bitcoin/issues</a></p>\n<p>To receive security and update notifications, please subscribe to:</p>\n<p><a href=\"https://bitcoincore.org/en/list/announcements/join/\">https://bitcoincore.org/en/list/announcements/join/</a></p>\n<p>With the release of this new major version, versions <code>27.x</code> and\nolder are at \u201cMaintenance End\u201d and will no longer receive updates.</p>\n<p>In accordance with the security policy, we will in two weeks disclose:</p>\n<ul>\n<li>\n<p>Medium and high severity vulnerabilities fixed in <code>28.0</code>. There are none of these.</p>\n</li>\n<li>\n<p>Low severity vulnerabilities fixed in <code>30.0</code>. There are 5 of these.</p>\n</li>\n</ul>\n<h1><a name=\"p-6053-how-to-upgrade-1\" class=\"anchor\" href=\"#p-6053-how-to-upgrade-1\"></a>How to Upgrade</h1>\n<p>If you are running an older version, shut it down. Wait until it has completely\nshut down (which might take a few minutes in some cases), then run the\ninstaller (on Windows) or just copy over <code>/Applications/Bitcoin-Qt</code> (on macOS)\nor <code>bitcoind</code>/<code>bitcoin-qt</code> (on Linux).</p>\n<p>Upgrading directly from a version of Bitcoin Core that has reached its EOL is\npossible, but it might take some time if the data directory needs to be migrated. Old\nwallet versions of Bitcoin Core are generally supported.</p>\n<h1><a name=\"p-6053-compatibility-2\" class=\"anchor\" href=\"#p-6053-compatibility-2\"></a>Compatibility</h1>\n<p>Bitcoin Core is supported and tested on operating systems using the\nLinux Kernel 3.17+, macOS 13+, and Windows 10+. Bitcoin\nCore should also work on most other Unix-like systems but is not as\nfrequently tested on them. It is not recommended to use Bitcoin Core on\nunsupported systems.</p>\n<h1><a name=\"p-6053-notable-changes-3\" class=\"anchor\" href=\"#p-6053-notable-changes-3\"></a>Notable changes</h1>\n<h2><a name=\"p-6053-policy-4\" class=\"anchor\" href=\"#p-6053-policy-4\"></a>Policy</h2>\n<ul>\n<li>\n<p>The maximum number of potentially executed legacy signature operations in a\nsingle standard transaction is now limited to 2500. Signature operations in all\nprevious output scripts, in all input scripts, as well as all P2SH redeem\nscripts (if there are any) are counted toward the limit. The new limit is\nassumed to not affect any known typically formed standard transactions. The\nchange was done to prepare for a possible BIP54 deployment in the future. (<span class=\"hashtag-raw\">#32521</span>)</p>\n</li>\n<li>\n<p><code>-datacarriersize</code> is increased to 100,000 by default, which effectively uncaps\nthe limit (as the maximum transaction size limit will be hit first). It can be\noverridden with <code>-datacarriersize=83</code> to revert to the limit enforced in previous\nversions. (<span class=\"hashtag-raw\">#32406</span>)</p>\n</li>\n<li>\n<p>Multiple data carrier (OP_RETURN) outputs in a transaction are now permitted for\nrelay and mining. The <code>-datacarriersize</code> limit applies to the aggregate size of\nthe scriptPubKeys across all such outputs in a transaction, not including the\nscriptPubKey size itself. (<span class=\"hashtag-raw\">#32406</span>)</p>\n</li>\n<li>\n<p>The minimum block feerate (<code>-blockmintxfee</code>) has been changed to 0.001 satoshi per\nvB. It can still be changed using the configuration option. This option can be used\nby miners to set a minimum feerate on packages added to block templates. (<span class=\"hashtag-raw\">#33106</span>)</p>\n</li>\n<li>\n<p>The default minimum relay feerate (<code>-minrelaytxfee</code>) and incremental relay feerate\n(<code>-incrementalrelayfee</code>) have been changed to 0.1 satoshis per vB. They can still\nbe changed using their respective configuration options, but it is recommended to\nchange both together if you decide to do so. (<span class=\"hashtag-raw\">#33106</span>)</p>\n<p>Other minimum feerates (e.g. the dust feerate, the minimum returned by the fee\nestimator, and all feerates used by the wallet) remain unchanged. The mempool minimum\nfeerate still changes in response to high volume.</p>\n<p>Note that unless these lower defaults are widely adopted across the network, transactions\ncreated with lower fee rates are not guaranteed to propagate or confirm. The wallet\nfeerates remain unchanged; <code>-mintxfee</code> must be changed before attempting to create\ntransactions with lower feerates using the wallet. (<span class=\"hashtag-raw\">#33106</span>)</p>\n</li>\n</ul>\n<h2><a name=\"p-6053-p2p-and-network-changes-5\" class=\"anchor\" href=\"#p-6053-p2p-and-network-changes-5\"></a>P2P and network changes</h2>\n<ul>\n<li>\n<p>Opportunistic 1-parent-1-child package relay has been improved to handle\nsituations when the child already has unconfirmed parent(s) in the mempool.\nThis means that 1p1c packages can be accepted and propagate, even if they are\nconnected to broader topologies: multi-parent-1-child (where only 1 parent\nrequires fee-bumping), grandparent-parent-child (where only parent requires\nfee-bumping) etc. (<span class=\"hashtag-raw\">#31385</span>)</p>\n</li>\n<li>\n<p>The transaction orphanage, which holds transactions with missing inputs temporarily\nwhile the node attempts to fetch its parents, now has improved Denial of Service protections.\nPreviously, it enforced a maximum number of unique transactions (default 100,\nconfigurable using <code>-maxorphantx</code>). Now, its limits are as follows: the number of\nentries (unique by wtxid and peer), plus each unique transaction\u2019s input count divided\nby 10, must not exceed 3,000. The total weight of unique transactions must not exceed\n<code>404,000</code> Wu multiplied by the number of peers. (<span class=\"hashtag-raw\">#31829</span>)</p>\n</li>\n<li>\n<p>The <code>-maxorphantx</code> option no longer has any effect, since the orphanage no longer\nlimits the number of unique transactions. Users should remove this configuration\noption if they were using it, as the setting will cause an error in future versions\nwhen it is no longer recognized. (<span class=\"hashtag-raw\">#31829</span>)</p>\n</li>\n</ul>\n<h2><a name=\"p-6053-new-bitcoin-command-6\" class=\"anchor\" href=\"#p-6053-new-bitcoin-command-6\"></a>New <code>bitcoin</code> command</h2>\n<ul>\n<li>A new <code>bitcoin</code> command line tool has been added to make features more discoverable\nand convenient to use. The <code>bitcoin</code> tool just calls other executables and does not\nimplement any functionality on its own. Specifically <code>bitcoin node</code> is a synonym for\n<code>bitcoind</code>, <code>bitcoin gui</code> is a synonym for <code>bitcoin-qt</code>, and <code>bitcoin rpc</code> is a synonym\nfor <code>bitcoin-cli -named</code>. Other commands and options can be listed with <code>bitcoin help</code>.\nThe new <code>bitcoin</code> command is an alternative to calling other commands directly, but it\ndoesn\u2019t replace them, and there are no plans to deprecate existing commands. (<span class=\"hashtag-raw\">#31375</span>)</li>\n</ul>\n<h2><a name=\"p-6053-external-signing-7\" class=\"anchor\" href=\"#p-6053-external-signing-7\"></a>External Signing</h2>\n<ul>\n<li>Support for external signing on Windows has been re-enabled. (<span class=\"hashtag-raw\">#29868</span>)</li>\n</ul>\n<h2><a name=\"p-6053-ipc-mining-interface-8\" class=\"anchor\" href=\"#p-6053-ipc-mining-interface-8\"></a>IPC Mining Interface</h2>\n<ul>\n<li>\n<p>The new <code>bitcoin</code> command does support one new feature: an (experimental) IPC Mining\nInterface that allows the node to work with Stratum v2 or other mining client software,\nsee (<span class=\"hashtag-raw\">#31098</span>). When the node is started with <code>bitcoin -m node -ipcbind=unix</code> it will\nlisten on a unix socket for IPC client connections, allowing clients to request block\ntemplates and submit mined blocks. The <code>-m</code> option launches a new internal binary\n(<code>bitcoin-node</code> instead of <code>bitcoind</code>) and is currently required but will become optional\nin the future (with <span class=\"hashtag-raw\">#33229</span>).</p>\n</li>\n<li>\n<p>IPC connectivity introduces new dependencies (see <a href=\"https://github.com/bitcoin/bitcoin/blob/d2987102dd13f965c7a0bf1d5b8ee15bcf025398/doc/multiprocess.md\">multiprocess.md</a>),\nwhich can be turned off with the <code>-DENABLE_IPC=OFF</code> build option if you do not intend\nto use IPC. (<span class=\"hashtag-raw\">#31802</span>)</p>\n</li>\n</ul>\n<h2><a name=\"p-6053-install-changes-9\" class=\"anchor\" href=\"#p-6053-install-changes-9\"></a>Install changes</h2>\n<ul>\n<li>\n<p>The <code>test_bitcoin</code> executable is now installed in <code>libexec/</code> instead of <code>bin/</code>.\nIt can still be executed directly, or accessed through the new <code>bitcoin</code> command\nas <code>bitcoin test</code>. The <code>libexec/</code> directory also contains new <code>bitcoin-node</code> and\n<code>bitcoin-gui</code> binaries which support IPC features and are called through the\n<code>bitcoin</code> tool. In source builds only, <code>test_bitcoin-qt</code>, <code>bench_bitcoin</code>, and\n<code>bitcoin-chainstate</code> are also now installed to <code>libexec/</code> instead of <code>bin/</code> and\ncan be accessed through the new <code>bitcoin</code> command. See <code>bitcoin help</code> output for\ndetails. (<span class=\"hashtag-raw\">#31679</span>)</p>\n</li>\n<li>\n<p>On Windows, the installer no longer adds a \u201c(64-bit)\u201d suffix to entries in the\nStart Menu (<span class=\"hashtag-raw\">#32132</span>), and it now automatically removes obsolete artifacts during\nupgrades (<span class=\"hashtag-raw\">#33422</span>).</p>\n</li>\n</ul>\n<h2><a name=\"p-6053-indexes-10\" class=\"anchor\" href=\"#p-6053-indexes-10\"></a>Indexes</h2>\n<ul>\n<li>\n<p>The implementation of coinstatsindex was changed to prevent an overflow bug that\ncould already be observed on the default Signet. The new version of the index will\nneed to be synced from scratch when starting the upgraded node for the first time.</p>\n<p>The new version is stored in <code>/indexes/coinstatsindex/</code> in contrast to the old version\nwhich was stored at <code>/indexes/coinstats/</code>. The old version of the index is not deleted\nby the upgraded node in case the user chooses to downgrade their node in the future.\nIf the user does not plan to downgrade it is safe for them to remove <code>/indexes/coinstats/</code>\nfrom their datadir. A future release of Bitcoin Core may remove the old version of the\nindex automatically. (<span class=\"hashtag-raw\">#30469</span>)</p>\n</li>\n</ul>\n<h2><a name=\"p-6053-logging-11\" class=\"anchor\" href=\"#p-6053-logging-11\"></a>Logging</h2>\n<ul>\n<li>\n<p>Unconditional logging to disk is now rate limited by giving each source location\na quota of 1MiB per hour. Unconditional logging is any logging with a log level\nhigher than debug, that is <code>info</code>, <code>warning</code>, and <code>error</code>. All logs will be\nprefixed with <code>[*]</code> if there is at least one source location that is currently\nbeing suppressed. (<span class=\"hashtag-raw\">#32604</span>)</p>\n</li>\n<li>\n<p>When <code>-logsourcelocations</code> is enabled, the log output now contains the entire\nfunction signature instead of just the function name. (<span class=\"hashtag-raw\">#32604</span>)</p>\n</li>\n</ul>\n<h2><a name=\"p-6053-updated-rpcs-12\" class=\"anchor\" href=\"#p-6053-updated-rpcs-12\"></a>Updated RPCs</h2>\n<ul>\n<li>\n<p>The <code>-paytxfee</code> startup option and the <code>settxfee</code> RPC are now deprecated and\nwill be removed in Bitcoin Core 31.0. They allowed the user to set a static fee\nrate for wallet transactions, which could potentially lead to overpaying or underpaying.\nUsers should instead rely on fee estimation or specify a fee rate per transaction\nusing the <code>fee_rate</code> argument in RPCs such as <code>fundrawtransaction</code>, <code>sendtoaddress</code>,\n<code>send</code>, <code>sendall</code>, and <code>sendmany</code>. (<span class=\"hashtag-raw\">#31278</span>)</p>\n</li>\n<li>\n<p>Any RPC in which one of the parameters is a descriptor will throw an error\nif the provided descriptor contains a whitespace at the beginning or the end\nof the public key within a fragment - e.g. <code>pk( KEY)</code> or <code>pk(KEY )</code>. (<span class=\"hashtag-raw\">#31603</span>)</p>\n</li>\n<li>\n<p>The <code>submitpackage</code> RPC, which allows submissions of child-with-parents\npackages, no longer requires that all unconfirmed parents be present. The\npackage may contain other in-mempool ancestors as well. (<span class=\"hashtag-raw\">#31385</span>)</p>\n</li>\n<li>\n<p>The <code>waitfornewblock</code> RPC now takes an optional <code>current_tip</code> argument. It\nis also no longer hidden. (<span class=\"hashtag-raw\">#30635</span>)</p>\n</li>\n<li>\n<p>The <code>waitforblock</code> and <code>waitforblockheight</code> RPCs are no longer hidden.  (<span class=\"hashtag-raw\">#30635</span>)</p>\n</li>\n<li>\n<p>The <code>psbtbumpfee</code> and <code>bumpfee</code> RPCs allow a replacement under fullrbf and no\nlonger require BIP-125 signalling. (<span class=\"hashtag-raw\">#31953</span>)</p>\n</li>\n<li>\n<p>Transaction Script validation errors used to return the reason for the error\nprefixed by either <code>mandatory-script-verify-flag-failed</code> if it was a consensus\nerror, or <code>non-mandatory-script-verify-flag</code> (without \u201c-failed\u201d) if it was a\nstandardness error. This has been changed to <code>block-script-verify-flag-failed</code>\nand <code>mempool-script-verify-flag-failed</code> for all block and mempool errors\nrespectively. (<span class=\"hashtag-raw\">#33183</span>)</p>\n</li>\n<li>\n<p>The <code>getmininginfo</code> RPC now returns \u201cblockmintxfee\u201d result specifying the value of\n<code>-blockmintxfee</code> configuration. (<span class=\"hashtag-raw\">#33189</span>)</p>\n</li>\n<li>\n<p>The <code>getmempoolinfo</code> RPC now returns an additional \u201cpermitbaremultisig\u201d and\n\u201cmaxdatacarriersize\u201d field, reflecting the <code>-permitbaremultisig</code> and <code>-datacarriersize</code>\nconfig values. (<span class=\"hashtag-raw\">#29954</span>)</p>\n</li>\n</ul>\n<p>Changes to wallet-related RPCs can be found in the Wallet section below.</p>\n<h2><a name=\"p-6053-new-rpcs-13\" class=\"anchor\" href=\"#p-6053-new-rpcs-13\"></a>New RPCs</h2>\n<ul>\n<li>A new REST API endpoint (<code>/rest/spenttxouts/BLOCKHASH</code>) has been introduced for\nefficiently fetching spent transaction outputs using the block\u2019s undo data (<span class=\"hashtag-raw\">#32540</span>).</li>\n</ul>\n<h2><a name=\"p-6053-build-system-14\" class=\"anchor\" href=\"#p-6053-build-system-14\"></a>Build System</h2>\n<h2><a name=\"p-6053-updated-settings-15\" class=\"anchor\" href=\"#p-6053-updated-settings-15\"></a>Updated settings</h2>\n<ul>\n<li>\n<p>The <code>-maxmempool</code> and <code>-dbcache</code> startup parameters are now capped on 32-bit systems\nto 500MB and 1GiB respectively. (<span class=\"hashtag-raw\">#32530</span>)</p>\n</li>\n<li>\n<p>The <code>-natpmp</code> option is now set to <code>1</code> by default. This means nodes with <code>-listen</code>\nenabled (the default) but running behind a firewall, such as a local network router,\nwill be reachable if the firewall/router supports any of the <code>PCP</code> or <code>NAT-PMP</code>\nprotocols. (<span class=\"hashtag-raw\">#33004</span>)</p>\n</li>\n<li>\n<p>The <code>-upnp</code> setting has now been fully removed. Use <code>-natpmp</code> instead. (<span class=\"hashtag-raw\">#32500</span>)</p>\n</li>\n<li>\n<p>Previously, <code>-proxy</code> specified the proxy for all networks (except I2P which\nuses <code>-i2psam</code>) and only the Tor proxy could have been specified separately\nvia <code>-onion</code>. Now, the syntax of <code>-proxy</code> has been extended and it is possible\nto specify separately the proxy for IPv4, IPv6, Tor and CJDNS by appending <code>=</code>\nfollowed by the network name, for example <code>-proxy=127.0.0.1:5555=ipv6</code>\nconfigures a proxy only for IPv6. The <code>-proxy</code> option can be used multiple\ntimes to define different proxies for different networks, such as\n<code>-proxy=127.0.0.1:4444=ipv4 -proxy=10.0.0.1:6666=ipv6</code>. Later settings\noverride earlier ones for the same network; this can be used to remove an\nearlier all-networks proxy and use direct connections only for a given\nnetwork, for example <code>-proxy=127.0.0.1:5555 -proxy=0=cjdns</code>. (<span class=\"hashtag-raw\">#32425</span>)</p>\n</li>\n<li>\n<p>The <code>-blockmaxweight</code> startup option has been updated to be debug-only.\nIt is still available to users, but now hidden from the default <code>-help</code> text\nand shown only in <code>-help-debug</code> (<span class=\"hashtag-raw\">#32654</span>).</p>\n</li>\n</ul>\n<p>Changes to GUI or wallet related settings can be found in the GUI or Wallet section below.</p>\n<h2><a name=\"p-6053-wallet-16\" class=\"anchor\" href=\"#p-6053-wallet-16\"></a>Wallet</h2>\n<ul>\n<li>\n<p>BDB legacy wallets can no longer be created or loaded. They can be migrated\nto the new descriptor wallet format. Refer to the <code>migratewallet</code> RPC for more\ndetails.</p>\n</li>\n<li>\n<p>The legacy wallet removal drops redundant options in the bitcoin-wallet tool,\nsuch as <code>-withinternalbdb</code>, <code>-legacy</code>, and <code>-descriptors</code>. Moreover, the\nlegacy-only RPCs <code>addmultisigaddress</code>, <code>dumpprivkey</code>, <code>dumpwallet</code>,\n<code>importaddress</code>, <code>importmulti</code>, <code>importprivkey</code>, <code>importpubkey</code>,\n<code>importwallet</code>, <code>newkeypool</code>, <code>sethdseed</code>, and <code>upgradewallet</code>, are removed.\n(<span class=\"hashtag-raw\">#32944</span>, <span class=\"hashtag-raw\">#28710</span>, <span class=\"hashtag-raw\">#32438</span>, <span class=\"hashtag-raw\">#31250</span>)</p>\n</li>\n<li>\n<p>Support has been added for spending TRUC transactions received by the\nwallet, as well as creating TRUC transactions. The wallet ensures that\nTRUC policy rules are being met. The wallet will throw an error if the\nuser is trying to spend TRUC utxos with utxos of other versions.\nAdditionally, the wallet will treat unconfirmed TRUC sibling\ntransactions as mempool conflicts. The wallet will also ensure that\ntransactions spending TRUC utxos meet the required size restrictions. (<span class=\"hashtag-raw\">#32896</span>)</p>\n</li>\n<li>\n<p>Since descriptor wallets do not allow mixing watchonly and non-watchonly descriptors,\nthe <code>include_watchonly</code> option (and its variants in naming) are removed from all RPCs\nthat had it. (<span class=\"hashtag-raw\">#32618</span>)</p>\n</li>\n<li>\n<p>The <code>iswatchonly</code> field is removed from any RPCs that returned it. (<span class=\"hashtag-raw\">#32618</span>)</p>\n</li>\n<li>\n<p><code>unloadwallet</code> - Return RPC_INVALID_PARAMETER when both the RPC wallet endpoint\nand wallet_name parameters are unspecified. Previously the RPC failed with a JSON\nparsing error. (<span class=\"hashtag-raw\">#32845</span>)</p>\n</li>\n<li>\n<p><code>getdescriptoractivity</code> - Mark blockhashes and scanobjects arguments as required,\nso the user receives a clear help message when either is missing. As in <code>unloadwallet</code>,\npreviously the RPC failed with a JSON parsing error. (<span class=\"hashtag-raw\">#32845</span>)</p>\n</li>\n<li>\n<p><code>getwalletinfo</code> - Removes the fields <code>balance</code>, <code>immature_balance</code> and\n<code>unconfirmed_balance</code>. (<span class=\"hashtag-raw\">#32721</span>)</p>\n</li>\n<li>\n<p><code>getunconfirmedbalance</code> - Removes this RPC command. You can query the <code>getbalances</code>\nRPC and inspect the <code>\"mine\"</code> <code>\"untrusted_pending\"</code> entry within the JSON\nresponse. (<span class=\"hashtag-raw\">#32721</span>)</p>\n</li>\n<li>\n<p>The following RPCs now contain a <code>version</code> parameter that allows\nthe user to create transactions of any standard version number (1-3):</p>\n<ul>\n<li><code>createrawtransaction</code></li>\n<li><code>createpsbt</code></li>\n<li><code>send</code></li>\n<li><code>sendall</code></li>\n<li><code>walletcreatefundedpsbt</code>\n(<span class=\"hashtag-raw\">#32896</span>)</li>\n</ul>\n</li>\n</ul>\n<h2><a name=\"p-6053-gui-changes-17\" class=\"anchor\" href=\"#p-6053-gui-changes-17\"></a>GUI changes</h2>\n<ul>\n<li>\n<p>The GUI has been migrated from Qt 5 to Qt 6. On Windows, dark mode is now supported.\nOn macOS, the Metal backend is now used. (<span class=\"hashtag-raw\">#30997</span>)</p>\n</li>\n<li>\n<p>A transaction\u2019s fee bump is allowed under fullrbf and no longer requires\nBIP-125 signalling. (<span class=\"hashtag-raw\">#31953</span>)</p>\n</li>\n<li>\n<p>Custom column widths in the Transactions tab are reset as a side-effect of legacy\nwallet removal. (<span class=\"hashtag-raw\">#32459</span>)</p>\n</li>\n</ul>\n<h1><a name=\"p-6053-low-level-changes-18\" class=\"anchor\" href=\"#p-6053-low-level-changes-18\"></a>Low-level changes</h1>\n<ul>\n<li>Logs now include which peer sent us a header. Additionally there are fewer\nredundant header log messages. A side-effect of this change is that for\nsome untypical cases new headers aren\u2019t logged anymore, e.g. a direct\n<code>BLOCK</code> message with a previously unknown header and <code>submitheader</code> RPC. (<span class=\"hashtag-raw\">#27826</span>)</li>\n</ul>\n<h1><a name=\"p-6053-credits-19\" class=\"anchor\" href=\"#p-6053-credits-19\"></a>Credits</h1>\n<p>Thanks to everyone who directly contributed to this release:</p>\n<ul>\n<li>0xb10c</li>\n<li>amisha</li>\n<li>Andrew Toth</li>\n<li>Anthony Towns</li>\n<li>Antoine Poinsot</li>\n<li>Ava Chow</li>\n<li>benthecarman</li>\n<li>Brandon Odiwuor</li>\n<li>brunoerg</li>\n<li>Bue-von-hon</li>\n<li>Bufo</li>\n<li>Chandra Pratap</li>\n<li>Chris Stewart</li>\n<li>Cory Fields</li>\n<li>Daniel Pfeifer</li>\n<li>Daniela Brozzoni</li>\n<li>David Gumberg</li>\n<li>deadmanoz</li>\n<li>dennsikl</li>\n<li>dergoegge</li>\n<li>enoch</li>\n<li>Ethan Heilman</li>\n<li>Eugene Siegel</li>\n<li>Eunovo</li>\n<li>Eval EXEC</li>\n<li>Fabian Jahr</li>\n<li>fanquake</li>\n<li>Florian Schmaus</li>\n<li>fuder.eth</li>\n<li>furszy</li>\n<li>glozow</li>\n<li>Greg Sanders</li>\n<li>Hao Xu</li>\n<li>Haoran Peng</li>\n<li>Haowen Liu</li>\n<li>Hennadii Stepanov</li>\n<li>Hodlinator</li>\n<li>hoffman</li>\n<li>ishaanam</li>\n<li>ismaelsadeeq</li>\n<li>Jameson Lopp</li>\n<li>janb84</li>\n<li>Jiri Jakes</li>\n<li>John Bampton</li>\n<li>Jon Atack</li>\n<li>josibake</li>\n<li>jurraca</li>\n<li>kevkevin</li>\n<li>kevkevinpal</li>\n<li>kilavvy</li>\n<li>Kristaps Kaupe</li>\n<li>l0rinc</li>\n<li>laanwj</li>\n<li>leopardracer</li>\n<li>L\u0151rinc</li>\n<li>Luis Schwab</li>\n<li>Luke Dashjr</li>\n<li>MarcoFalke</li>\n<li>marcofleon</li>\n<li>Martin Zumsande</li>\n<li>Matt Corallo</li>\n<li>Matthew Zipkin</li>\n<li>Max Edwards</li>\n<li>monlovesmango</li>\n<li>Murch</li>\n<li>naiyoma</li>\n<li>nervana21</li>\n<li>Nicola Leonardo Susca</li>\n<li>Novo</li>\n<li>pablomartin4btc</li>\n<li>Peter Todd</li>\n<li>Pieter Wuille</li>\n<li>Pol Espinasa</li>\n<li>Prabhat Verma</li>\n<li>rkrux</li>\n<li>Roman Zeyde</li>\n<li>Ryan Ofsky</li>\n<li>Saikiran</li>\n<li>Salvatore Ingala</li>\n<li>Sebastian Falbesoner</li>\n<li>Sergi Delgado Segura</li>\n<li>Shunsuke Shimizu</li>\n<li>Sjors Provoost</li>\n<li>stickies-v</li>\n<li>stratospher</li>\n<li>stringintech</li>\n<li>strmfos</li>\n<li>stutxo</li>\n<li>tdb3</li>\n<li>TheCharlatan</li>\n<li>Tom\u00e1s Andr\u00f3il</li>\n<li>UdjinM6</li>\n<li>Vasil Dimov</li>\n<li>VolodymyrBg</li>\n<li>w0xlt</li>\n<li>will</li>\n<li>willcl-ark</li>\n<li>William Casarin</li>\n<li>woltx</li>\n<li>yancy</li>\n<li>zaidmstrr</li>\n</ul>\n<p>As well as to everyone that helped with translations on\n<a href=\"https://explore.transifex.com/bitcoin/bitcoin/\">Transifex</a>.</p>",
  "post_number": 1,
  "post_type": 1,
  "posts_count": 1,
  "updated_at": "2025-10-12T09:19:26.685Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 9,
  "readers_count": 8,
  "score": 16.6,
  "yours": false,
  "topic_id": 2050,
  "topic_slug": "bitcoin-core-v30-0-released",
  "topic_title": "Bitcoin Core v30.0 Released",
  "topic_html_title": "Bitcoin Core v30.0 Released",
  "category_id": 8,
  "display_username": "",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Bitcoin Core version v30.0 is now available from:\n\n  <https://bitcoincore.org/bin/bitcoin-core-30.0/>\n\nThis release includes new features, various bug fixes and performance\nimprovements, as well as updated translations.\n\nPlease report bugs using the issue tracker at GitHub:\n\n  <https://github.com/bitcoin/bitcoin/issues>\n\nTo receive security and update notifications, please subscribe to:\n\n  <https://bitcoincore.org/en/list/announcements/join/>\n\nWith the release of this new major version, versions `27.x` and\nolder are at \"Maintenance End\" and will no longer receive updates.\n\nIn accordance with the security policy, we will in two weeks disclose:\n\n* Medium and high severity vulnerabilities fixed in `28.0`. There are none of these.\n\n* Low severity vulnerabilities fixed in `30.0`. There are 5 of these.\n\nHow to Upgrade\n==============\n\nIf you are running an older version, shut it down. Wait until it has completely\nshut down (which might take a few minutes in some cases), then run the\ninstaller (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on macOS)\nor `bitcoind`/`bitcoin-qt` (on Linux).\n\nUpgrading directly from a version of Bitcoin Core that has reached its EOL is\npossible, but it might take some time if the data directory needs to be migrated. Old\nwallet versions of Bitcoin Core are generally supported.\n\nCompatibility\n==============\n\nBitcoin Core is supported and tested on operating systems using the\nLinux Kernel 3.17+, macOS 13+, and Windows 10+. Bitcoin\nCore should also work on most other Unix-like systems but is not as\nfrequently tested on them. It is not recommended to use Bitcoin Core on\nunsupported systems.\n\nNotable changes\n===============\n\nPolicy\n------\n\n- The maximum number of potentially executed legacy signature operations in a\n  single standard transaction is now limited to 2500. Signature operations in all\n  previous output scripts, in all input scripts, as well as all P2SH redeem\n  scripts (if there are any) are counted toward the limit. The new limit is\n  assumed to not affect any known typically formed standard transactions. The\n  change was done to prepare for a possible BIP54 deployment in the future. (#32521)\n\n- `-datacarriersize` is increased to 100,000 by default, which effectively uncaps\n  the limit (as the maximum transaction size limit will be hit first). It can be\n  overridden with `-datacarriersize=83` to revert to the limit enforced in previous\n  versions. (#32406)\n\n- Multiple data carrier (OP_RETURN) outputs in a transaction are now permitted for\n  relay and mining. The `-datacarriersize` limit applies to the aggregate size of\n  the scriptPubKeys across all such outputs in a transaction, not including the\n  scriptPubKey size itself. (#32406)\n\n- The minimum block feerate (`-blockmintxfee`) has been changed to 0.001 satoshi per\n  vB. It can still be changed using the configuration option. This option can be used\n  by miners to set a minimum feerate on packages added to block templates. (#33106)\n\n- The default minimum relay feerate (`-minrelaytxfee`) and incremental relay feerate\n  (`-incrementalrelayfee`) have been changed to 0.1 satoshis per vB. They can still\n  be changed using their respective configuration options, but it is recommended to\n  change both together if you decide to do so. (#33106)\n\n  Other minimum feerates (e.g. the dust feerate, the minimum returned by the fee\n  estimator, and all feerates used by the wallet) remain unchanged. The mempool minimum\n  feerate still changes in response to high volume.\n\n  Note that unless these lower defaults are widely adopted across the network, transactions\n  created with lower fee rates are not guaranteed to propagate or confirm. The wallet\n  feerates remain unchanged; `-mintxfee` must be changed before attempting to create\n  transactions with lower feerates using the wallet. (#33106)\n\nP2P and network changes\n-----------------------\n\n- Opportunistic 1-parent-1-child package relay has been improved to handle\n  situations when the child already has unconfirmed parent(s) in the mempool.\n  This means that 1p1c packages can be accepted and propagate, even if they are\n  connected to broader topologies: multi-parent-1-child (where only 1 parent\n  requires fee-bumping), grandparent-parent-child (where only parent requires\n  fee-bumping) etc. (#31385)\n\n- The transaction orphanage, which holds transactions with missing inputs temporarily\n  while the node attempts to fetch its parents, now has improved Denial of Service protections.\n  Previously, it enforced a maximum number of unique transactions (default 100,\n  configurable using `-maxorphantx`). Now, its limits are as follows: the number of\n  entries (unique by wtxid and peer), plus each unique transaction's input count divided\n  by 10, must not exceed 3,000. The total weight of unique transactions must not exceed\n  `404,000` Wu multiplied by the number of peers. (#31829)\n\n- The `-maxorphantx` option no longer has any effect, since the orphanage no longer\n  limits the number of unique transactions. Users should remove this configuration\n  option if they were using it, as the setting will cause an error in future versions\n  when it is no longer recognized. (#31829)\n\nNew `bitcoin` command\n---------------------\n\n- A new `bitcoin` command line tool has been added to make features more discoverable\n  and convenient to use. The `bitcoin` tool just calls other executables and does not\n  implement any functionality on its own. Specifically `bitcoin node` is a synonym for\n  `bitcoind`, `bitcoin gui` is a synonym for `bitcoin-qt`, and `bitcoin rpc` is a synonym\n  for `bitcoin-cli -named`. Other commands and options can be listed with `bitcoin help`.\n  The new `bitcoin` command is an alternative to calling other commands directly, but it\n  doesn't replace them, and there are no plans to deprecate existing commands. (#31375)\n\nExternal Signing\n----------------\n\n- Support for external signing on Windows has been re-enabled. (#29868)\n\nIPC Mining Interface\n--------------------\n\n- The new `bitcoin` command does support one new feature: an (experimental) IPC Mining\n  Interface that allows the node to work with Stratum v2 or other mining client software,\n  see (#31098). When the node is started with `bitcoin -m node -ipcbind=unix` it will\n  listen on a unix socket for IPC client connections, allowing clients to request block\n  templates and submit mined blocks. The `-m` option launches a new internal binary\n  (`bitcoin-node` instead of `bitcoind`) and is currently required but will become optional\n  in the future (with #33229).\n\n- IPC connectivity introduces new dependencies (see [multiprocess.md](https://github.com/bitcoin/bitcoin/blob/d2987102dd13f965c7a0bf1d5b8ee15bcf025398/doc/multiprocess.md)),\n  which can be turned off with the `-DENABLE_IPC=OFF` build option if you do not intend\n  to use IPC. (#31802)\n\nInstall changes\n---------------\n\n- The `test_bitcoin` executable is now installed in `libexec/` instead of `bin/`.\n  It can still be executed directly, or accessed through the new `bitcoin` command\n  as `bitcoin test`. The `libexec/` directory also contains new `bitcoin-node` and\n  `bitcoin-gui` binaries which support IPC features and are called through the\n  `bitcoin` tool. In source builds only, `test_bitcoin-qt`, `bench_bitcoin`, and\n  `bitcoin-chainstate` are also now installed to `libexec/` instead of `bin/` and\n  can be accessed through the new `bitcoin` command. See `bitcoin help` output for\n  details. (#31679)\n\n- On Windows, the installer no longer adds a \u201c(64-bit)\u201d suffix to entries in the\n  Start Menu (#32132), and it now automatically removes obsolete artifacts during\n  upgrades (#33422).\n\nIndexes\n-------\n\n- The implementation of coinstatsindex was changed to prevent an overflow bug that\n  could already be observed on the default Signet. The new version of the index will\n  need to be synced from scratch when starting the upgraded node for the first time.\n\n  The new version is stored in `/indexes/coinstatsindex/` in contrast to the old version\n  which was stored at `/indexes/coinstats/`. The old version of the index is not deleted\n  by the upgraded node in case the user chooses to downgrade their node in the future.\n  If the user does not plan to downgrade it is safe for them to remove `/indexes/coinstats/`\n  from their datadir. A future release of Bitcoin Core may remove the old version of the\n  index automatically. (#30469)\n\nLogging\n-------\n- Unconditional logging to disk is now rate limited by giving each source location\n  a quota of 1MiB per hour. Unconditional logging is any logging with a log level\n  higher than debug, that is `info`, `warning`, and `error`. All logs will be\n  prefixed with `[*]` if there is at least one source location that is currently\n  being suppressed. (#32604)\n\n- When `-logsourcelocations` is enabled, the log output now contains the entire\n  function signature instead of just the function name. (#32604)\n\nUpdated RPCs\n------------\n\n- The `-paytxfee` startup option and the `settxfee` RPC are now deprecated and\n  will be removed in Bitcoin Core 31.0. They allowed the user to set a static fee\n  rate for wallet transactions, which could potentially lead to overpaying or underpaying.\n  Users should instead rely on fee estimation or specify a fee rate per transaction\n  using the `fee_rate` argument in RPCs such as `fundrawtransaction`, `sendtoaddress`,\n  `send`, `sendall`, and `sendmany`. (#31278)\n\n- Any RPC in which one of the parameters is a descriptor will throw an error\n  if the provided descriptor contains a whitespace at the beginning or the end\n  of the public key within a fragment - e.g. `pk( KEY)` or `pk(KEY )`. (#31603)\n\n- The `submitpackage` RPC, which allows submissions of child-with-parents\n  packages, no longer requires that all unconfirmed parents be present. The\n  package may contain other in-mempool ancestors as well. (#31385)\n\n- The `waitfornewblock` RPC now takes an optional `current_tip` argument. It\n  is also no longer hidden. (#30635)\n\n- The `waitforblock` and `waitforblockheight` RPCs are no longer hidden.  (#30635)\n\n- The `psbtbumpfee` and `bumpfee` RPCs allow a replacement under fullrbf and no\n  longer require BIP-125 signalling. (#31953)\n\n- Transaction Script validation errors used to return the reason for the error\n  prefixed by either `mandatory-script-verify-flag-failed` if it was a consensus\n  error, or `non-mandatory-script-verify-flag` (without \"-failed\") if it was a\n  standardness error. This has been changed to `block-script-verify-flag-failed`\n  and `mempool-script-verify-flag-failed` for all block and mempool errors\n  respectively. (#33183)\n\n- The `getmininginfo` RPC now returns \"blockmintxfee\" result specifying the value of\n  `-blockmintxfee` configuration. (#33189)\n\n- The `getmempoolinfo` RPC now returns an additional \"permitbaremultisig\" and\n  \"maxdatacarriersize\" field, reflecting the `-permitbaremultisig` and `-datacarriersize`\n  config values. (#29954)\n\nChanges to wallet-related RPCs can be found in the Wallet section below.\n\nNew RPCs\n--------\n\n- A new REST API endpoint (`/rest/spenttxouts/BLOCKHASH`) has been introduced for\n  efficiently fetching spent transaction outputs using the block's undo data (#32540).\n\nBuild System\n------------\n\nUpdated settings\n----------------\n\n- The `-maxmempool` and `-dbcache` startup parameters are now capped on 32-bit systems\n  to 500MB and 1GiB respectively. (#32530)\n\n- The `-natpmp` option is now set to `1` by default. This means nodes with `-listen`\n  enabled (the default) but running behind a firewall, such as a local network router,\n  will be reachable if the firewall/router supports any of the `PCP` or `NAT-PMP`\n  protocols. (#33004)\n\n- The `-upnp` setting has now been fully removed. Use `-natpmp` instead. (#32500)\n\n- Previously, `-proxy` specified the proxy for all networks (except I2P which\n  uses `-i2psam`) and only the Tor proxy could have been specified separately\n  via `-onion`. Now, the syntax of `-proxy` has been extended and it is possible\n  to specify separately the proxy for IPv4, IPv6, Tor and CJDNS by appending `=`\n  followed by the network name, for example `-proxy=127.0.0.1:5555=ipv6`\n  configures a proxy only for IPv6. The `-proxy` option can be used multiple\n  times to define different proxies for different networks, such as\n  `-proxy=127.0.0.1:4444=ipv4 -proxy=10.0.0.1:6666=ipv6`. Later settings\n  override earlier ones for the same network; this can be used to remove an\n  earlier all-networks proxy and use direct connections only for a given\n  network, for example `-proxy=127.0.0.1:5555 -proxy=0=cjdns`. (#32425)\n\n- The `-blockmaxweight` startup option has been updated to be debug-only.\n  It is still available to users, but now hidden from the default `-help` text\n  and shown only in `-help-debug` (#32654).\n\nChanges to GUI or wallet related settings can be found in the GUI or Wallet section below.\n\nWallet\n------\n\n- BDB legacy wallets can no longer be created or loaded. They can be migrated\n  to the new descriptor wallet format. Refer to the `migratewallet` RPC for more\n  details.\n\n- The legacy wallet removal drops redundant options in the bitcoin-wallet tool,\n  such as `-withinternalbdb`, `-legacy`, and `-descriptors`. Moreover, the\n  legacy-only RPCs `addmultisigaddress`, `dumpprivkey`, `dumpwallet`,\n  `importaddress`, `importmulti`, `importprivkey`, `importpubkey`,\n  `importwallet`, `newkeypool`, `sethdseed`, and `upgradewallet`, are removed.\n  (#32944, #28710, #32438, #31250)\n\n- Support has been added for spending TRUC transactions received by the\n  wallet, as well as creating TRUC transactions. The wallet ensures that\n  TRUC policy rules are being met. The wallet will throw an error if the\n  user is trying to spend TRUC utxos with utxos of other versions.\n  Additionally, the wallet will treat unconfirmed TRUC sibling\n  transactions as mempool conflicts. The wallet will also ensure that\n  transactions spending TRUC utxos meet the required size restrictions. (#32896)\n\n- Since descriptor wallets do not allow mixing watchonly and non-watchonly descriptors,\n  the `include_watchonly` option (and its variants in naming) are removed from all RPCs\n  that had it. (#32618)\n\n- The `iswatchonly` field is removed from any RPCs that returned it. (#32618)\n\n- `unloadwallet` - Return RPC_INVALID_PARAMETER when both the RPC wallet endpoint\n  and wallet_name parameters are unspecified. Previously the RPC failed with a JSON\n  parsing error. (#32845)\n\n- `getdescriptoractivity` - Mark blockhashes and scanobjects arguments as required,\n  so the user receives a clear help message when either is missing. As in `unloadwallet`,\n  previously the RPC failed with a JSON parsing error. (#32845)\n\n- `getwalletinfo` - Removes the fields `balance`, `immature_balance` and\n  `unconfirmed_balance`. (#32721)\n\n- `getunconfirmedbalance` - Removes this RPC command. You can query the `getbalances`\n  RPC and inspect the `\"mine\"` `\"untrusted_pending\"` entry within the JSON\n  response. (#32721)\n\n- The following RPCs now contain a `version` parameter that allows\n  the user to create transactions of any standard version number (1-3):\n  - `createrawtransaction`\n  - `createpsbt`\n  - `send`\n  - `sendall`\n  - `walletcreatefundedpsbt`\n  (#32896)\n\nGUI changes\n-----------\n\n- The GUI has been migrated from Qt 5 to Qt 6. On Windows, dark mode is now supported.\n  On macOS, the Metal backend is now used. (#30997)\n\n- A transaction's fee bump is allowed under fullrbf and no longer requires\n  BIP-125 signalling. (#31953)\n\n- Custom column widths in the Transactions tab are reset as a side-effect of legacy\n  wallet removal. (#32459)\n\nLow-level changes\n=================\n\n- Logs now include which peer sent us a header. Additionally there are fewer\n  redundant header log messages. A side-effect of this change is that for\n  some untypical cases new headers aren't logged anymore, e.g. a direct\n  `BLOCK` message with a previously unknown header and `submitheader` RPC. (#27826)\n\nCredits\n=======\n\nThanks to everyone who directly contributed to this release:\n\n- 0xb10c\n- amisha\n- Andrew Toth\n- Anthony Towns\n- Antoine Poinsot\n- Ava Chow\n- benthecarman\n- Brandon Odiwuor\n- brunoerg\n- Bue-von-hon\n- Bufo\n- Chandra Pratap\n- Chris Stewart\n- Cory Fields\n- Daniel Pfeifer\n- Daniela Brozzoni\n- David Gumberg\n- deadmanoz\n- dennsikl\n- dergoegge\n- enoch\n- Ethan Heilman\n- Eugene Siegel\n- Eunovo\n- Eval EXEC\n- Fabian Jahr\n- fanquake\n- Florian Schmaus\n- fuder.eth\n- furszy\n- glozow\n- Greg Sanders\n- Hao Xu\n- Haoran Peng\n- Haowen Liu\n- Hennadii Stepanov\n- Hodlinator\n- hoffman\n- ishaanam\n- ismaelsadeeq\n- Jameson Lopp\n- janb84\n- Jiri Jakes\n- John Bampton\n- Jon Atack\n- josibake\n- jurraca\n- kevkevin\n- kevkevinpal\n- kilavvy\n- Kristaps Kaupe\n- l0rinc\n- laanwj\n- leopardracer\n- L\u0151rinc\n- Luis Schwab\n- Luke Dashjr\n- MarcoFalke\n- marcofleon\n- Martin Zumsande\n- Matt Corallo\n- Matthew Zipkin\n- Max Edwards\n- monlovesmango\n- Murch\n- naiyoma\n- nervana21\n- Nicola Leonardo Susca\n- Novo\n- pablomartin4btc\n- Peter Todd\n- Pieter Wuille\n- Pol Espinasa\n- Prabhat Verma\n- rkrux\n- Roman Zeyde\n- Ryan Ofsky\n- Saikiran\n- Salvatore Ingala\n- Sebastian Falbesoner\n- Sergi Delgado Segura\n- Shunsuke Shimizu\n- Sjors Provoost\n- stickies-v\n- stratospher\n- stringintech\n- strmfos\n- stutxo\n- tdb3\n- TheCharlatan\n- Tom\u00e1s Andr\u00f3il\n- UdjinM6\n- Vasil Dimov\n- VolodymyrBg\n- w0xlt\n- will\n- willcl-ark\n- William Casarin\n- woltx\n- yancy\n- zaidmstrr\n\nAs well as to everyone that helped with translations on\n[Transifex](https://explore.transifex.com/bitcoin/bitcoin/).",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 188,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": "Github link was replaced with a permanent link",
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Bitcoin Core version v30.0 is now available from: \n<a href=\"https://bitcoincore.org/bin/bitcoin-core-30.0/\">https://bitcoincore.org/bin/bitcoin-core-30.0/</a> \nThis release includes new features, various bug fixes and performance\nimprovements, as well as updated translations. \nPlease report bugs using the issue tracker at GitHub: \n<a href=\"https://github.com/bitcoin/bitcoin/issues\">https://github.com/bitcoin/b&hellip;</a>",
  "truncated": true,
  "post_url": "/t/bitcoin-core-v30-0-released/2050/1",
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null,
  "can_vote": false
}