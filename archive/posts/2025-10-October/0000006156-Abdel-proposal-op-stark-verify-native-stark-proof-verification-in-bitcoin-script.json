{
  "id": 6156,
  "name": "Abdel",
  "username": "Abdel",
  "avatar_template": "/user_avatar/delvingbitcoin.org/abdel/{size}/1579_2.png",
  "created_at": "2025-10-29T13:49:36.191Z",
  "cooked": "<p>hey hey, thanks for your time and suggestions.\nI will be honest, i am not a fan of metaprotocols.\nthat been said, all your arguments here make sense.\nFor risk mitigation and market driven adoption I would probably counter argument by saying that Starknet for example, which is an L2 built using the STARK proofs scheme I am proposing here for instance, has been running in production for years, and the proving system used by it has processed nearly 1 billion transactions, secured over $1 trillion of cumulative volume etc.\nYes it\u2019s not on Bitcoin but would be the same for a meta protocol technically. In fact, factually speaking, a meta protocol would be infinitely less secure than Starknet today.\nAgain, the arguments are valid and make sense. But just wanted to give a contrasted perspective on the matter given the history of this specific tech in practice, not on paper.</p>",
  "post_number": 5,
  "post_type": 1,
  "posts_count": 5,
  "updated_at": "2025-10-29T13:49:36.191Z",
  "reply_count": 0,
  "reply_to_post_number": 4,
  "quote_count": 0,
  "incoming_link_count": 2,
  "reads": 2,
  "readers_count": 1,
  "score": 10.4,
  "yours": false,
  "topic_id": 2056,
  "topic_slug": "proposal-op-stark-verify-native-stark-proof-verification-in-bitcoin-script",
  "topic_title": "Proposal: OP_STARK_VERIFY - Native STARK Proof Verification in Bitcoin Script",
  "topic_html_title": "Proposal: OP_STARK_VERIFY - Native STARK Proof Verification in Bitcoin Script",
  "category_id": 7,
  "display_username": "Abdel",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "id": 694,
    "username": "ftw2100",
    "name": "F__T__W",
    "avatar_template": "/user_avatar/delvingbitcoin.org/ftw2100/{size}/1083_2.png"
  },
  "bookmarked": false,
  "raw": "hey hey, thanks for your time and suggestions.\nI will be honest, i am not a fan of metaprotocols.\nthat been said, all your arguments here make sense.\nFor risk mitigation and market driven adoption I would probably counter argument by saying that Starknet for example, which is an L2 built using the STARK proofs scheme I am proposing here for instance, has been running in production for years, and the proving system used by it has processed nearly 1 billion transactions, secured over $1 trillion of cumulative volume etc.\nYes it's not on Bitcoin but would be the same for a meta protocol technically. In fact, factually speaking, a meta protocol would be infinitely less secure than Starknet today.\nAgain, the arguments are valid and make sense. But just wanted to give a contrasted perspective on the matter given the history of this specific tech in practice, not on paper.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 910,
  "hidden": false,
  "trust_level": 0,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "hey hey, thanks for your time and suggestions.\nI will be honest, i am not a fan of metaprotocols.\nthat been said, all your arguments here make sense.\nFor risk mitigation and market driven adoption I would probably counter argument by saying that Starknet for example, which is an L2 built using the S&hellip;",
  "truncated": true,
  "post_url": "/t/proposal-op-stark-verify-native-stark-proof-verification-in-bitcoin-script/2056/5",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}