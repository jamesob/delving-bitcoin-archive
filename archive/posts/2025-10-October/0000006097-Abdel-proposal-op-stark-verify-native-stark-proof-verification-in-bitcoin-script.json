{
  "id": 6097,
  "name": "Abdel",
  "username": "Abdel",
  "avatar_template": "/user_avatar/delvingbitcoin.org/abdel/{size}/1579_2.png",
  "created_at": "2025-10-16T16:45:25.792Z",
  "cooked": "<p>Thanks for the very spot on questions / comments.</p>\n<p>For the context, as it applies to all potential STARK on Bitcoin avenues we explore.</p>\n<p>We can tune proving system params to either improve proving speed (at the cost of larger proof/slower verification) or reducing proof size (at the cost of slower proving/higher machine specs, specifically RAM).</p>\n<p>Typically we use a multistage pipeline where:</p>\n<ul>\n<li>Fast proving is used for payload jobs (e.g. rollup blocks)</li>\n<li>Fast proving is used for recursive proof folding (to get a single proof for multiple jobs)</li>\n<li>Last several steps are used to compress the proof as much as possible and make it verifier friendly (depending on particular settlement layer)\n<ul>\n<li>Typically we switch hash function here</li>\n<li>Adjust parameters to slow proving/fast verification mode</li>\n<li>Use different proving systems if necessary</li>\n</ul>\n</li>\n</ul>\n<p>When we measure proof size and verification time, we are talking about the very last stage of the pipeline.</p>\n<p>Here are the variants of proof compression pipelines (we are using Stwo for leaf jobs and recursive folding for all schemes so will omit it here):</p>\n<ol>\n<li>Stwo \u2014 single step compression (the fastest option, suitable for offchain verification), ~500KB proof size (bzip2), ~25ms verification time</li>\n<li>Stwo \u2192 Stone \u2192 Stone \u2014 multi-step compression (the one we plan for production), ~50KB proof size (bzip2), ~30ms verification time</li>\n<li>Stwo \u2192 \u2026 \u2192 Stwo \u2014 multi-layer compression optimized for Bitcoin script, ~100KB proof size</li>\n</ol>\n<p>Regarding the onchain costs:</p>\n<ul>\n<li>Proof settlement via OP_CAT verifier looks like 175 transactions of total size ~7.3MB</li>\n<li>Current Simplicity implementation is ~2.5 MB script; it is not yet compatible with the proving pipeline (3) output + there will be an overhead from splitting it into multiple transactions, so the total cost should be comparable to OP_CAT</li>\n</ul>",
  "post_number": 3,
  "post_type": 1,
  "posts_count": 4,
  "updated_at": "2025-10-16T16:45:25.792Z",
  "reply_count": 0,
  "reply_to_post_number": 2,
  "quote_count": 0,
  "incoming_link_count": 2,
  "reads": 11,
  "readers_count": 10,
  "score": 12.2,
  "yours": false,
  "topic_id": 2056,
  "topic_slug": "proposal-op-stark-verify-native-stark-proof-verification-in-bitcoin-script",
  "topic_title": "Proposal: OP_STARK_VERIFY - Native STARK Proof Verification in Bitcoin Script",
  "topic_html_title": "Proposal: OP_STARK_VERIFY - Native STARK Proof Verification in Bitcoin Script",
  "category_id": 7,
  "display_username": "Abdel",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "id": 31,
    "username": "instagibbs",
    "name": "Gregory Sanders",
    "avatar_template": "/user_avatar/delvingbitcoin.org/instagibbs/{size}/28_2.png"
  },
  "bookmarked": false,
  "raw": "Thanks for the very spot on questions / comments.\n\nFor the context, as it applies to all potential STARK on Bitcoin avenues we explore.\n\nWe can tune proving system params to either improve proving speed (at the cost of larger proof/slower verification) or reducing proof size (at the cost of slower proving/higher machine specs, specifically RAM).\n\nTypically we use a multistage pipeline where:\n- Fast proving is used for payload jobs (e.g. rollup blocks)\n- Fast proving is used for recursive proof folding (to get a single proof for multiple jobs)\n- Last several steps are used to compress the proof as much as possible and make it verifier friendly (depending on particular settlement layer)\n    - Typically we switch hash function here\n    - Adjust parameters to slow proving/fast verification mode\n    - Use different proving systems if necessary\n\nWhen we measure proof size and verification time, we are talking about the very last stage of the pipeline.\n\nHere are the variants of proof compression pipelines (we are using Stwo for leaf jobs and recursive folding for all schemes so will omit it here):\n1. Stwo \u2014 single step compression (the fastest option, suitable for offchain verification), ~500KB proof size (bzip2), ~25ms verification time\n2. Stwo -> Stone -> Stone \u2014 multi-step compression (the one we plan for production), ~50KB proof size (bzip2), ~30ms verification time\n3. Stwo -> ... -> Stwo \u2014 multi-layer compression optimized for Bitcoin script, ~100KB proof size\n\nRegarding the onchain costs:\n- Proof settlement via OP_CAT verifier looks like 175 transactions of total size ~7.3MB\n- Current Simplicity implementation is ~2.5 MB script; it is not yet compatible with the proving pipeline (3) output + there will be an overhead from splitting it into multiple transactions, so the total cost should be comparable to OP_CAT",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 910,
  "hidden": false,
  "trust_level": 0,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Thanks for the very spot on questions / comments. \nFor the context, as it applies to all potential STARK on Bitcoin avenues we explore. \nWe can tune proving system params to either improve proving speed (at the cost of larger proof/slower verification) or reducing proof size (at the cost of slower p&hellip;",
  "truncated": true,
  "post_url": "/t/proposal-op-stark-verify-native-stark-proof-verification-in-bitcoin-script/2056/3",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}