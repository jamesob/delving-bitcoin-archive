{
  "id": 1683,
  "name": "Rusty Russell",
  "username": "rustyrussell",
  "avatar_template": "/user_avatar/delvingbitcoin.org/rustyrussell/{size}/154_2.png",
  "created_at": "2024-02-24T04:13:31.288Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"ajtowns\" data-post=\"7\" data-topic=\"359\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ajtowns/48/3_2.png\" class=\"avatar\"> ajtowns:</div>\n<blockquote>\n<p>I want to propose a new state; but I can\u2019t just give you signed transactions for the new state, unless I\u2019m sure I can claim my funds from that state. Normally that would mean I give you the signature for the update tx after I\u2019ve received your signature for the settlement tx. But that\u2019s an extra round.</p>\n</blockquote>\n</aside>\n<p>For my own clarification here, BTW: we do this in the current protocol without any issues, but for LN-symmetry we split the tx into two parts (update and settlement), so now the peer could spend the new update and withhold the new settlement.</p>\n<blockquote>\n<p>But then that means that spending the update tx is only possible if you know the CTV commitment to the settlement tx, which would normally mean O(n) storage, since you need to be able to spend every historical update tx to the current one, and each update tx can have a different settlement tx.</p>\n</blockquote>\n<p>AFAICT you only need two, assuming you wait for a reply before sending another update?  You would always fast-forward to the latest update tx.</p>\n<blockquote>\n<p>So instead have the update tx use CTV (or APO-simulating-CTV)</p>\n</blockquote>\n<p>Adapter signatures is nicer, BUT note that CTV is more optimal than adapter signatures here!  However, neither is actually ideal (requiring another tx for fees): what we <em>want</em> is a commitment scheme which lets the spender extract fee from its own output, and/or bring their own fee input.</p>",
  "post_number": 13,
  "post_type": 1,
  "updated_at": "2024-02-24T04:13:31.288Z",
  "reply_count": 0,
  "reply_to_post_number": 7,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 11,
  "readers_count": 10,
  "score": 2.2,
  "yours": false,
  "topic_id": 359,
  "topic_slug": "ln-symmetry-project-recap",
  "topic_title": "LN-Symmetry Project Recap",
  "topic_html_title": "LN-Symmetry Project Recap",
  "category_id": 7,
  "display_username": "Rusty Russell",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"ajtowns, post:7, topic:359\"]\nI want to propose a new state; but I can\u2019t just give you signed transactions for the new state, unless I\u2019m sure I can claim my funds from that state. Normally that would mean I give you the signature for the update tx after I\u2019ve received your signature for the settlement tx. But that\u2019s an extra round.\n[/quote]\n\nFor my own clarification here, BTW: we do this in the current protocol without any issues, but for LN-symmetry we split the tx into two parts (update and settlement), so now the peer could spend the new update and withhold the new settlement.\n\n> But then that means that spending the update tx is only possible if you know the CTV commitment to the settlement tx, which would normally mean O(n) storage, since you need to be able to spend every historical update tx to the current one, and each update tx can have a different settlement tx.\n\nAFAICT you only need two, assuming you wait for a reply before sending another update?  You would always fast-forward to the latest update tx.\n\n> So instead have the update tx use CTV (or APO-simulating-CTV) \n\nAdapter signatures is nicer, BUT note that CTV is more optimal than adapter signatures here!  However, neither is actually ideal (requiring another tx for fees): what we *want* is a commitment scheme which lets the spender extract fee from its own output, and/or bring their own fee input.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 137,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}