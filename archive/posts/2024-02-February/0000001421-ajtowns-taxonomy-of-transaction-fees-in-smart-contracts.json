{
  "id": 1421,
  "name": "Anthony Towns",
  "username": "ajtowns",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/3_2.png",
  "created_at": "2024-02-02T04:23:23.781Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"rustyrussell\" data-post=\"2\" data-topic=\"512\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/rustyrussell/48/154_2.png\" class=\"avatar\"> rustyrussell:</div>\n<blockquote>\n<p>As fees rise, compactness will override all other concerns. (Including security!)</p>\n</blockquote>\n</aside>\n<p>That seems unsound? \u201cI want to save money, therefore I\u2019ll make it easy for someone to steal all my money\u201d If you really want to save on fees, and don\u2019t mind security risks, you don\u2019t go on-chain at all, you use a centralised database, or a more-centralised blockchain than bitcoin.</p>\n<p>The risk that makes sense to me here is the one to decentralisation: you\u2019re still going onchain, you\u2019re still keeping your funds secured, but you\u2019re paying fees out of band to the largest miners via a trusted relationship, ignoring the downside that, at scale, this makes smaller miners less profitable, and perhaps unsustainable.</p>\n<p>(We\u2019ve got evidence that people will abandon security when trying to claim BRC20 mints and the like, but that\u2019s a lottery in the first place: if your tx isn\u2019t amongst the first N to claim, you\u2019re throwing your money away anyway)</p>\n<p>I don\u2019t think the decentralisation risk is avoidable though.</p>\n<p>Consider the case where an LSP wants to unilaterally close a channel: then they will need to get a commitment tx on chain, but in a high/variable fee environment cannot rely on the commitment tx to have precommitted sufficient fee payment (for ln-symmetry/eltoo channels, they may not be able to precommit to any fee payment), and because it\u2019s a unilateral close, can\u2019t immediately claim any of their own channel balance to use that for fees.</p>\n<p>One approach is to do what we do now: pull in fees from an existing utxo, and add a change address. That can be done via an anchor output and CPFP, or by the commitment tx only being signed with SINGLE|ANYONECANPAY, or by pre-preparing a utxo with the exact fee and an ALL|ANYONECANPAY signature.</p>\n<p>But a large LSP that has their own mining operation has another option: they can just prioritise the tx directly, even if it has 0 fee. When that is mined, as a miner they\u2019ll be forgoing fees so it\u2019s not free, but that\u2019s still cheaper: they\u2019re only forgoing X vbytes worth of fees from the bottom of the block, where X is the size of the commitment without any additional fee inputs/change outputs, rather than paying X+Y bytes worth of fees at the top/middle of the block, where Y is the size of the additional fee inputs and change outputs (and any overhead).</p>\n<aside class=\"quote no-group\" data-username=\"rustyrussell\" data-post=\"2\" data-topic=\"512\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/rustyrussell/48/154_2.png\" class=\"avatar\"> rustyrussell:</div>\n<blockquote>\n<p>This implies that we\u2019ll will use endogenous fees where possible, and single transaction which stacks as many otherwise-unrelated operations, with a single exogenous fee in/out.</p>\n</blockquote>\n</aside>\n<p>In this scenario, the \u201csingle exogenous fee\u201d doesn\u2019t make it onchain at all (it\u2019s an internal transfer from the LSP part of the business to the mining part of the business), but presumably all the LSP\u2019s txs are still combined together into a single 0-fee tx at the start of the block.</p>\n<p>Adding introspection logic isn\u2019t needed for that setup, and would itself be unnecessary overhead.</p>",
  "post_number": 3,
  "post_type": 1,
  "updated_at": "2024-02-02T04:23:23.781Z",
  "reply_count": 1,
  "reply_to_post_number": 2,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 19,
  "readers_count": 18,
  "score": 8.6,
  "yours": false,
  "topic_id": 512,
  "topic_slug": "taxonomy-of-transaction-fees-in-smart-contracts",
  "topic_title": "Taxonomy of Transaction Fees in Smart Contracts",
  "topic_html_title": "Taxonomy of Transaction Fees in Smart Contracts",
  "category_id": 7,
  "display_username": "Anthony Towns",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"rustyrussell, post:2, topic:512\"]\nAs fees rise, compactness will override all other concerns. (Including security!)\n[/quote]\n\nThat seems unsound? \"I want to save money, therefore I'll make it easy for someone to steal all my money\" If you really want to save on fees, and don't mind security risks, you don't go on-chain at all, you use a centralised database, or a more-centralised blockchain than bitcoin.\n\nThe risk that makes sense to me here is the one to decentralisation: you're still going onchain, you're still keeping your funds secured, but you're paying fees out of band to the largest miners via a trusted relationship, ignoring the downside that, at scale, this makes smaller miners less profitable, and perhaps unsustainable.\n\n(We've got evidence that people will abandon security when trying to claim BRC20 mints and the like, but that's a lottery in the first place: if your tx isn't amongst the first N to claim, you're throwing your money away anyway)\n\nI don't think the decentralisation risk is avoidable though.\n\nConsider the case where an LSP wants to unilaterally close a channel: then they will need to get a commitment tx on chain, but in a high/variable fee environment cannot rely on the commitment tx to have precommitted sufficient fee payment (for ln-symmetry/eltoo channels, they may not be able to precommit to any fee payment), and because it's a unilateral close, can't immediately claim any of their own channel balance to use that for fees.\n\nOne approach is to do what we do now: pull in fees from an existing utxo, and add a change address. That can be done via an anchor output and CPFP, or by the commitment tx only being signed with SINGLE|ANYONECANPAY, or by pre-preparing a utxo with the exact fee and an ALL|ANYONECANPAY signature.\n\nBut a large LSP that has their own mining operation has another option: they can just prioritise the tx directly, even if it has 0 fee. When that is mined, as a miner they'll be forgoing fees so it's not free, but that's still cheaper: they're only forgoing X vbytes worth of fees from the bottom of the block, where X is the size of the commitment without any additional fee inputs/change outputs, rather than paying X+Y bytes worth of fees at the top/middle of the block, where Y is the size of the additional fee inputs and change outputs (and any overhead).\n\n[quote=\"rustyrussell, post:2, topic:512\"]\nThis implies that we\u2019ll will use endogenous fees where possible, and single transaction which stacks as many otherwise-unrelated operations, with a single exogenous fee in/out.\n[/quote]\n\nIn this scenario, the \"single exogenous fee\" doesn't make it onchain at all (it's an internal transfer from the LSP part of the business to the mining part of the business), but presumably all the LSP's txs are still combined together into a single 0-fee tx at the start of the block.\n\nAdding introspection logic isn't needed for that setup, and would itself be unnecessary overhead.",
  "actions_summary": [],
  "moderator": true,
  "admin": true,
  "staff": true,
  "user_id": 3,
  "hidden": false,
  "trust_level": 4,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}