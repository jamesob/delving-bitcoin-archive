{
  "id": 1566,
  "name": "Bastien Teinturier",
  "username": "t-bast",
  "avatar_template": "/user_avatar/delvingbitcoin.org/t-bast/{size}/98_2.png",
  "created_at": "2024-02-14T14:57:01.333Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"pgrange\" data-post=\"3\" data-topic=\"555\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/pgrange/48/345_2.png\" class=\"avatar\"> pgrange:</div>\n<blockquote>\n<p>don\u2019t worry, I\u2019m scared just the appropriate amount</p>\n</blockquote>\n</aside>\n<p><img src=\"https://delvingbitcoin.org/images/emoji/twitter/sweat_smile.png?v=12\" title=\":sweat_smile:\" class=\"emoji only-emoji\" alt=\":sweat_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<aside class=\"quote no-group\" data-username=\"pgrange\" data-post=\"3\" data-topic=\"555\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/pgrange/48/345_2.png\" class=\"avatar\"> pgrange:</div>\n<blockquote>\n<p>For the payment technical process, I\u2019m not sure how different this would be from the situation where the user\u2019s phone is off when they receive a payment. How does the LSP deal with off phone now? Can we get inspiration from that to handle this hardware device complications?</p>\n</blockquote>\n</aside>\n<p>What currently happens is that the LSP tries to wake the user\u2019s device, and after a timeout (usually 30 seconds or 1 minute), gives up and fails the HTLC. In your case, you will want to hold the HTLC for much longer than that otherwise it will always fail. The issue with holding HTLCs longer is that it keeps the HTLC pending across the whole route, for all nodes in the payment path, which is bad. You\u2019ll also be limited by the HTLC expiry delta anyway, which is usually between 24 and 144 blocks.</p>\n<p>You may however in the future rely on asynchronous payments, which should help solves this kind of flow, and would be compatible with your use-case: <a href=\"https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-October/003307.html\" class=\"inline-onebox\">[Lightning-dev] A Mobile Lightning User Goes to Pay a Mobile\tLightning User...</a></p>\n<aside class=\"quote no-group\" data-username=\"pgrange\" data-post=\"3\" data-topic=\"555\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/pgrange/48/345_2.png\" class=\"avatar\"> pgrange:</div>\n<blockquote>\n<p>Also, I have the idea that the user is already often involved today when receiving a Lightning payment.</p>\n</blockquote>\n</aside>\n<p>It\u2019s true that in a lot of cases, the payer and the recipient are active at the same time to share an invoice and pay it immediately: in those cases, it would work fine.</p>\n<aside class=\"quote no-group\" data-username=\"pgrange\" data-post=\"3\" data-topic=\"555\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/pgrange/48/345_2.png\" class=\"avatar\"> pgrange:</div>\n<blockquote>\n<p>Will it be really more secure if the user validates transactions on their hardware device that just look gibberish? Will the user have to spend their time validating meaningless transactions on their device for any protocol update?</p>\n</blockquote>\n</aside>\n<p>You will need the ledger app to \u201ctranslate\u201d what is being signed into something that is understandable by the user. However, the issue is that what is being signed is a commitment transaction and htlc transactions, so the ledger app needs to parse that, compare it to the previous commitment, and tell the user something like \u201cthis new state is sending X sats for payment_hash=H1 and receiving Y sats for payment_hash=H2\u201d. This isn\u2019t rocket science, but there are a few cases to handle!</p>\n<p>You will also need the user to come online whenever a force-close happens, they will need to authorize all the transactions that are created. It can be complex to translate what\u2019s happening at that level to something that the user can understand\u2026</p>",
  "post_number": 4,
  "post_type": 1,
  "updated_at": "2024-02-14T14:57:01.333Z",
  "reply_count": 0,
  "reply_to_post_number": 3,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 1,
  "readers_count": 0,
  "score": 0,
  "yours": false,
  "topic_id": 555,
  "topic_slug": "lightning-hardware-wallet",
  "topic_title": "Lightning Hardware Wallet",
  "topic_html_title": "Lightning Hardware Wallet",
  "category_id": 8,
  "display_username": "Bastien Teinturier",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"pgrange, post:3, topic:555\"]\ndon\u2019t worry, I\u2019m scared just the appropriate amount\n[/quote]\n\n:sweat_smile: \n\n[quote=\"pgrange, post:3, topic:555\"]\nFor the payment technical process, I\u2019m not sure how different this would be from the situation where the user\u2019s phone is off when they receive a payment. How does the LSP deal with off phone now? Can we get inspiration from that to handle this hardware device complications?\n[/quote]\n\nWhat currently happens is that the LSP tries to wake the user's device, and after a timeout (usually 30 seconds or 1 minute), gives up and fails the HTLC. In your case, you will want to hold the HTLC for much longer than that otherwise it will always fail. The issue with holding HTLCs longer is that it keeps the HTLC pending across the whole route, for all nodes in the payment path, which is bad. You'll also be limited by the HTLC expiry delta anyway, which is usually between 24 and 144 blocks.\n\nYou may however in the future rely on asynchronous payments, which should help solves this kind of flow, and would be compatible with your use-case: https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-October/003307.html\n\n[quote=\"pgrange, post:3, topic:555\"]\nAlso, I have the idea that the user is already often involved today when receiving a Lightning payment.\n[/quote]\n\nIt's true that in a lot of cases, the payer and the recipient are active at the same time to share an invoice and pay it immediately: in those cases, it would work fine.\n\n[quote=\"pgrange, post:3, topic:555\"]\nWill it be really more secure if the user validates transactions on their hardware device that just look gibberish? Will the user have to spend their time validating meaningless transactions on their device for any protocol update?\n[/quote]\n\nYou will need the ledger app to \"translate\" what is being signed into something that is understandable by the user. However, the issue is that what is being signed is a commitment transaction and htlc transactions, so the ledger app needs to parse that, compare it to the previous commitment, and tell the user something like \"this new state is sending X sats for payment_hash=H1 and receiving Y sats for payment_hash=H2\". This isn't rocket science, but there are a few cases to handle!\n\nYou will also need the user to come online whenever a force-close happens, they will need to authorize all the transactions that are created. It can be complex to translate what's happening at that level to something that the user can understand...",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 101,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}