{
  "id": 1450,
  "name": "Anthony Towns",
  "username": "ajtowns",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/3_2.png",
  "created_at": "2024-02-03T11:29:09.208Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"sdaftuar\" data-post=\"8\" data-topic=\"393\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/s/0ea827/48.png\" class=\"avatar\"> sdaftuar:</div>\n<blockquote>\n<p>Imagine tx C arrives, and we consider eviction of tx B to make room for it. Even if \u201caccept tx C and evict tx B (along with B\u2019s descendants)\u201d is a valid replacement under the feerate diagram check, it\u2019s possible that immediately re-accepting tx B would be successful, because without tx D it might be under the cluster size limits.</p>\n</blockquote>\n</aside>\n<p>I\u2019m not sure I see this as bad? The mempool would be going from:</p>\n<ul>\n<li>[E] [A]  (separate clusters)</li>\n<li>[E, B] [A]</li>\n<li>[E, B, D] [A]</li>\n<li>[E, A, C]</li>\n<li>[E, A, C, B]</li>\n</ul>\n<p>Those are all fairly different states, and each one is strictly improving the feerate diagram. That seems like a good thing!</p>\n<p>The only drawback I can see is that \u201cB\u201d would be potentially be being relayed and validated twice (which is wasteful, and you might be able to convert that into a DoS attack of some sort if you can cheaply construct lots of C\u2019s and D\u2019s?).</p>\n<p>If there was some reasonable way of jumping directly from \u201c[EBD] [A]\u201d to \u201c[EACB]\u201d without the intervening step where B is evicted from the mempool, that would seem perfect. If we already have a linearisation of the stuff we\u2019re evicting (ie \u201c[\u2026BD]\u201d) could we just try adding those txs back in in order immediately?</p>",
  "post_number": 12,
  "post_type": 1,
  "updated_at": "2024-02-03T11:29:09.208Z",
  "reply_count": 0,
  "reply_to_post_number": 8,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 5,
  "readers_count": 4,
  "score": 1.0,
  "yours": false,
  "topic_id": 393,
  "topic_slug": "an-overview-of-the-cluster-mempool-proposal",
  "topic_title": "An overview of the cluster mempool proposal",
  "topic_html_title": "An overview of the cluster mempool proposal",
  "category_id": 8,
  "display_username": "Anthony Towns",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"sdaftuar, post:8, topic:393\"]\nImagine tx C arrives, and we consider eviction of tx B to make room for it. Even if \u201caccept tx C and evict tx B (along with B\u2019s descendants)\u201d is a valid replacement under the feerate diagram check, it\u2019s possible that immediately re-accepting tx B would be successful, because without tx D it might be under the cluster size limits.\n[/quote]\n\nI'm not sure I see this as bad? The mempool would be going from:\n\n * [E] [A]  (separate clusters)\n * [E, B] [A]\n * [E, B, D] [A]\n * [E, A, C]\n * [E, A, C, B]\n\nThose are all fairly different states, and each one is strictly improving the feerate diagram. That seems like a good thing!\n\nThe only drawback I can see is that \"B\" would be potentially be being relayed and validated twice (which is wasteful, and you might be able to convert that into a DoS attack of some sort if you can cheaply construct lots of C's and D's?).\n\nIf there was some reasonable way of jumping directly from \"[EBD] [A]\" to \"[EACB]\" without the intervening step where B is evicted from the mempool, that would seem perfect. If we already have a linearisation of the stuff we're evicting (ie \"[...BD]\") could we just try adding those txs back in in order immediately?",
  "actions_summary": [],
  "moderator": true,
  "admin": true,
  "staff": true,
  "user_id": 3,
  "hidden": false,
  "trust_level": 4,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}