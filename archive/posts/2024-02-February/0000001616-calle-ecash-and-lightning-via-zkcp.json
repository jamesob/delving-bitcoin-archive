{
  "id": 1616,
  "name": "",
  "username": "calle",
  "avatar_template": "/user_avatar/delvingbitcoin.org/calle/{size}/84_2.png",
  "created_at": "2024-02-19T14:07:42.809Z",
  "cooked": "<p>Nice writeup, I especially like the \u201cIssuing new ecash\u201d part. We had thought of implementing something similar in Cashu in the issuing process but decided against implementing it for now because it would require more interaction with the user\u2019s lightning wallet (they need to obtain the preimage in their Lightning wallet, then use it in their ecash wallet).</p>\n<p>However, good news: we already have a ZKP implemented as a proof of knowledge of <code>m</code> as a DLEQ proof, which you can find here: <a href=\"https://github.com/cashubtc/nuts/blob/94a621d1014a8687269f58ecadc5ef167dce546f/12.md\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">nuts/12.md at 94a621d1014a8687269f58ecadc5ef167dce546f \u00b7 cashubtc/nuts \u00b7 GitHub</a></p>\n<p>As far as I can see, your construction is missing a crucial part though: the transferrability of these tokens from user to user without the mint being able to link the transfer to the Lightning invoice (i.e., keeping the ecash privacy intact). Since the mint does not know the <code>K</code> the user requests a signature on, it\u2019s hard to make sure that the claim of a token remains intact when passed form user to user (and all sorts of other issues arise, such as Alice being able to re-mint a token committing to the same invoice again using a different <code>r</code> after having sent it to another user Carol).</p>\n<p>This has been the main challenge for my research in the past months. Good news though, I think I\u2019ve found a way to do it and will write it up once I have the code to show it\u2019s viable. The rest is almost exactly as you propose it here.</p>\n<p>I really enjoyed reading this, cheers!</p>",
  "post_number": 2,
  "post_type": 1,
  "updated_at": "2024-02-19T14:12:47.774Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 1,
  "reads": 18,
  "readers_count": 17,
  "score": 23.4,
  "yours": false,
  "topic_id": 586,
  "topic_slug": "ecash-and-lightning-via-zkcp",
  "topic_title": "Ecash and lightning via ZKCP",
  "topic_html_title": "Ecash and lightning via ZKCP",
  "category_id": 7,
  "display_username": "",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Nice writeup, I especially like the \"Issuing new ecash\" part. We had thought of implementing something similar in Cashu in the issuing process but decided against implementing it for now because it would require more interaction with the user's lightning wallet (they need to obtain the preimage in their Lightning wallet, then use it in their ecash wallet).\n\nHowever, good news: we already have a ZKP implemented as a proof of knowledge of `m` as a DLEQ proof, which you can find here: https://github.com/cashubtc/nuts/blob/94a621d1014a8687269f58ecadc5ef167dce546f/12.md\n\nAs far as I can see, your construction is missing a crucial part though: the transferrability of these tokens from user to user without the mint being able to link the transfer to the Lightning invoice (i.e., keeping the ecash privacy intact). Since the mint does not know the `K` the user requests a signature on, it's hard to make sure that the claim of a token remains intact when passed form user to user (and all sorts of other issues arise, such as Alice being able to re-mint a token committing to the same invoice again using a different `r` after having sent it to another user Carol).\n\nThis has been the main challenge for my research in the past months. Good news though, I think I've found a way to do it and will write it up once I have the code to show it's viable. The rest is almost exactly as you propose it here.\n\nI really enjoyed reading this, cheers!",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 93,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": "Github link was replaced with a permanent link",
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false
}