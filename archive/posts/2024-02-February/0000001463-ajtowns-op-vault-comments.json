{
  "id": 1463,
  "name": "Anthony Towns",
  "username": "ajtowns",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/3_2.png",
  "created_at": "2024-02-06T03:29:59.578Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"harding\" data-post=\"1\" data-topic=\"521\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/harding/48/6_2.png\" class=\"avatar\"> harding:</div>\n<blockquote>\n<p>Example 1: Bob has a vault that\u2019s guarded by a watchtower than only looks for confirmed transactions (no mempool monitoring). Mallory obtains his trigger authorization key and creates a relatively low feerate transaction that steals a relatively small amount of Bob\u2019s funds, revaulting the remaining amount. For Bob to ensure he recovers the funds, he\u2019ll have to create a fairly large recovery transaction that pays a relatively high feerate to get confirmed in time. That may cost him more sats than the amount Mallory stole is worth, so it might be rational for him to write off the lost amount and allow Mallory to claim it.</p>\n</blockquote>\n</aside>\n<p>I think that\u2019s trivially true if you take an extreme enough case: a miner could discover the trigger key, and create a tx spending 1 sat to themselves via the delayed CTV path, with the rest being revaulted. It wouldn\u2019t be worth trying to recover that sat, though you would likely still want the watchtower to apply the recovery operation to all the other funds that are spendable via your compromised trigger key.</p>\n<p>I don\u2019t think the recovery transaction needs to be particularly large though; it would have multiple inputs for each utxo that comprise your vault, with the witness data being:</p>\n<ul>\n<li>65B control block (tapleaf version, ipk, one step merkle path for the trigger leaf)</li>\n<li>34B script (<code>&lt;scriptPubKeyHash&gt; VAULT_RECOVER</code>)</li>\n<li>1B output index</li>\n</ul>\n<p>If you added a recover authorisation key, that would be an extra 33B to the script and 65B for the additional witness item for the signature. It would also need an additional input to cover fees. Because of the ability to specify the same output index for each input, you\u2019d only need one output, which could also include the change.</p>\n<p>So including the extra input for the funds Mallory is trying to steal would be an extra 66-91 vbytes by my count.</p>\n<aside class=\"quote no-group\" data-username=\"harding\" data-post=\"1\" data-topic=\"521\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/harding/48/6_2.png\" class=\"avatar\"> harding:</div>\n<blockquote>\n<p>Then Mallory creates another offchain spend from the revaulted output in another zero-fee transaction that steals a relatively small additional amount of Bob\u2019s funds. Mallory repeats this process until she has roughly a block full of small-value spends from Bob\u2019s vault.</p>\n</blockquote>\n</aside>\n<p>Seems like a fair attack, though more in the realm of vandalism than theft: Mallory will be losing more income by not not mining txs from the normal mempool than they\u2019ll be gaining in the dust they\u2019re stealing from Bob.</p>\n<aside class=\"quote no-group\" data-username=\"harding\" data-post=\"1\" data-topic=\"521\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/harding/48/6_2.png\" class=\"avatar\"> harding:</div>\n<blockquote>\n<p>if the trigger authorization script included a <code>1 OP_CSV</code> delay, Mallory could only practically create one uneconomic withdrawal before Bob had a chance to sweep the rest of his funds into recovery. This would, of course, reduce the flexibility of vaults for frequent spending and make them harder to compose with scripts for contract protocols.</p>\n</blockquote>\n</aside>\n<p>Yeah, I think this fixes that attack and is good advice. I don\u2019t think it\u2019s a big constraint on potential contracting things \u2013 if you\u2019re scheduling multiple payments from a vault in the same block, you might as well just include them all in a single CTV, since CTV can commit to multiple outputs. Your contracting tool already needs to be able to decompose the taproot scriptPubKey to get to the CTV, going a step further and decomposing the CTV to get to just one desired output seems fine. And given there\u2019s a potential recovery step, any contracting things like that can\u2019t really rely on the payment until the CTV script path spend is confirmed anyway.</p>",
  "post_number": 2,
  "post_type": 1,
  "updated_at": "2024-02-06T03:29:59.578Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 4,
  "readers_count": 3,
  "score": 0.8,
  "yours": false,
  "topic_id": 521,
  "topic_slug": "op-vault-comments",
  "topic_title": "OP_VAULT comments",
  "topic_html_title": "OP_VAULT comments",
  "category_id": 7,
  "display_username": "Anthony Towns",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"harding, post:1, topic:521\"]\nExample 1: Bob has a vault that\u2019s guarded by a watchtower than only looks for confirmed transactions (no mempool monitoring). Mallory obtains his trigger authorization key and creates a relatively low feerate transaction that steals a relatively small amount of Bob\u2019s funds, revaulting the remaining amount. For Bob to ensure he recovers the funds, he\u2019ll have to create a fairly large recovery transaction that pays a relatively high feerate to get confirmed in time. That may cost him more sats than the amount Mallory stole is worth, so it might be rational for him to write off the lost amount and allow Mallory to claim it.\n[/quote]\n\nI think that's trivially true if you take an extreme enough case: a miner could discover the trigger key, and create a tx spending 1 sat to themselves via the delayed CTV path, with the rest being revaulted. It wouldn't be worth trying to recover that sat, though you would likely still want the watchtower to apply the recovery operation to all the other funds that are spendable via your compromised trigger key.\n\nI don't think the recovery transaction needs to be particularly large though; it would have multiple inputs for each utxo that comprise your vault, with the witness data being:\n\n * 65B control block (tapleaf version, ipk, one step merkle path for the trigger leaf)\n * 34B script (`<scriptPubKeyHash> VAULT_RECOVER`)\n * 1B output index\n\nIf you added a recover authorisation key, that would be an extra 33B to the script and 65B for the additional witness item for the signature. It would also need an additional input to cover fees. Because of the ability to specify the same output index for each input, you'd only need one output, which could also include the change.\n\nSo including the extra input for the funds Mallory is trying to steal would be an extra 66-91 vbytes by my count.\n\n[quote=\"harding, post:1, topic:521\"]\nThen Mallory creates another offchain spend from the revaulted output in another zero-fee transaction that steals a relatively small additional amount of Bob\u2019s funds. Mallory repeats this process until she has roughly a block full of small-value spends from Bob\u2019s vault.\n[/quote]\n\nSeems like a fair attack, though more in the realm of vandalism than theft: Mallory will be losing more income by not not mining txs from the normal mempool than they'll be gaining in the dust they're stealing from Bob.\n\n[quote=\"harding, post:1, topic:521\"]\nif the trigger authorization script included a `1 OP_CSV` delay, Mallory could only practically create one uneconomic withdrawal before Bob had a chance to sweep the rest of his funds into recovery. This would, of course, reduce the flexibility of vaults for frequent spending and make them harder to compose with scripts for contract protocols.\n[/quote]\n\nYeah, I think this fixes that attack and is good advice. I don't think it's a big constraint on potential contracting things -- if you're scheduling multiple payments from a vault in the same block, you might as well just include them all in a single CTV, since CTV can commit to multiple outputs. Your contracting tool already needs to be able to decompose the taproot scriptPubKey to get to the CTV, going a step further and decomposing the CTV to get to just one desired output seems fine. And given there's a potential recovery step, any contracting things like that can't really rely on the payment until the CTV script path spend is confirmed anyway.",
  "actions_summary": [],
  "moderator": true,
  "admin": true,
  "staff": true,
  "user_id": 3,
  "hidden": false,
  "trust_level": 4,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}