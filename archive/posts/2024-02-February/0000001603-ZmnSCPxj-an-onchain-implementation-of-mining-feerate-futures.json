{
  "id": 1603,
  "name": "ZmnSCPxj jxPCSnmZ",
  "username": "ZmnSCPxj",
  "avatar_template": "/letter_avatar_proxy/v4/letter/z/ee7513/{size}.png",
  "created_at": "2024-02-19T00:34:09.933Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"harding\" data-post=\"2\" data-topic=\"547\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/harding/48/6_2.png\" class=\"avatar\"> harding:</div>\n<blockquote>\n<p>That said, I think a <a href=\"https://delvingbitcoin.org/t/mempool-incentive-compatibility/553#a-simple-analysis-of-a-toy-problem-14\">contemporary post</a> on this forum points to a weakness in this theoretical model: a miner with a large percentage of total network hashrate can forgo mining a transaction in a particular block and still have a realistic chance of being able to mine that transaction in one of their later blocks. In the case of this contract, the large miner may be willing to settle this contract in their favor even if it means being unable to mine some higher feerate transactions in the current block because the large miner knows that they\u2019ll have a chance of mining some of the excluded transactions in the next block. A miner with a small percentage of total network hashrate doesn\u2019t have that option: they\u2019ll have to let the contract settle against them because their probability of getting a second chance at mining any transactions is tiny.</p>\n</blockquote>\n</aside>\n<p>My intuition here is that if the congestion is large enough, then even a large miner is forced to leave off its execution branch of this contract.</p>\n<p>Consider the case where each block can contain only one transaction each.  Suppose there are two other transactions (let us assume it is an ordinal transaction so they are as large as the miner-unilteral tx branch here) whose feerates are strictly higher than the feerate of the fixed miner-unilateral tx branch.  Now further suppose the miner is in possession of a perfect oracle that tells it that it WILL mine the next 2 blocks (i.e. it is so large it has 100% of the hashrate).</p>\n<p>Since there is congestion (i.e. there are more high-fee-paying transactions than a single block can fit), the miner, of whatever size, is better off putting the two other transactions in both of the blocks it will get, than the miner-unilateral branch of this contract.</p>\n<p>Thus, in terms of the <code>N</code> in this contract, if at time <code>T</code> the high-fee-paying transactions are many enough that they would fill more than <code>N</code> blocks, the miner is still incentivized to pack those transactions into its blocks.  This is because it has to decide between high-paying transaction for N blocks now, or a low-paying one now and high-paying transactions for N-(1transaction) blocks.  Note in particular that the post you linked has the miner deciding between a low-paying tx now or a high-paying tx replacement later.</p>\n<p>This should be useful in the case where it is obvious that there is a situation where the blockchain is congested for <code>N</code> blocks at time <code>T</code>.  In boundary cases where the blockchain is congested for less than <code>N</code> blocks I think the user would be fine with the miner exercising its branch, as <code>N</code> is pre-agreed-to anyway.</p>",
  "post_number": 4,
  "post_type": 1,
  "updated_at": "2024-02-19T00:34:09.933Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 1,
  "readers_count": 0,
  "score": 0.2,
  "yours": false,
  "topic_id": 547,
  "topic_slug": "an-onchain-implementation-of-mining-feerate-futures",
  "topic_title": "An Onchain Implementation Of Mining Feerate Futures",
  "topic_html_title": "An Onchain Implementation Of Mining Feerate Futures",
  "category_id": 7,
  "display_username": "ZmnSCPxj jxPCSnmZ",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"harding, post:2, topic:547\"]\nThat said, I think a [contemporary post](https://delvingbitcoin.org/t/mempool-incentive-compatibility/553#a-simple-analysis-of-a-toy-problem-14) on this forum points to a weakness in this theoretical model: a miner with a large percentage of total network hashrate can forgo mining a transaction in a particular block and still have a realistic chance of being able to mine that transaction in one of their later blocks. In the case of this contract, the large miner may be willing to settle this contract in their favor even if it means being unable to mine some higher feerate transactions in the current block because the large miner knows that they\u2019ll have a chance of mining some of the excluded transactions in the next block. A miner with a small percentage of total network hashrate doesn\u2019t have that option: they\u2019ll have to let the contract settle against them because their probability of getting a second chance at mining any transactions is tiny.\n[/quote]\n\nMy intuition here is that if the congestion is large enough, then even a large miner is forced to leave off its execution branch of this contract.\n\nConsider the case where each block can contain only one transaction each.  Suppose there are two other transactions (let us assume it is an ordinal transaction so they are as large as the miner-unilteral tx branch here) whose feerates are strictly higher than the feerate of the fixed miner-unilateral tx branch.  Now further suppose the miner is in possession of a perfect oracle that tells it that it WILL mine the next 2 blocks (i.e. it is so large it has 100% of the hashrate).\n\nSince there is congestion (i.e. there are more high-fee-paying transactions than a single block can fit), the miner, of whatever size, is better off putting the two other transactions in both of the blocks it will get, than the miner-unilateral branch of this contract.\n\nThus, in terms of the `N` in this contract, if at time `T` the high-fee-paying transactions are many enough that they would fill more than `N` blocks, the miner is still incentivized to pack those transactions into its blocks.  This is because it has to decide between high-paying transaction for N blocks now, or a low-paying one now and high-paying transactions for N-(1transaction) blocks.  Note in particular that the post you linked has the miner deciding between a low-paying tx now or a high-paying tx replacement later.\n\nThis should be useful in the case where it is obvious that there is a situation where the blockchain is congested for `N` blocks at time `T`.  In boundary cases where the blockchain is congested for less than `N` blocks I think the user would be fine with the miner exercising its branch, as `N` is pre-agreed-to anyway.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 104,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}