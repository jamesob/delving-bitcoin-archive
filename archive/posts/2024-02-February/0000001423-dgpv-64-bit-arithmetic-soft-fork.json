{
  "id": 1423,
  "name": "",
  "username": "dgpv",
  "avatar_template": "/user_avatar/delvingbitcoin.org/dgpv/{size}/75_2.png",
  "created_at": "2024-02-02T05:25:22.336Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"EthanHeilman\" data-post=\"36\" data-topic=\"397\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ethanheilman/48/328_2.png\" class=\"avatar\"> EthanHeilman:</div>\n<blockquote>\n<p>I would propose altering this to so that the result and the overflow amount are pushed onto the stack.</p>\n</blockquote>\n</aside>\n<p>The overflow amount would be LE64,  but then the zero in case of \u2018no overflow\u2019 would also need to be LE64 (otherwise more-than-64bit calculations would still require branching), and that would complicate the common case of checking for \u2018no overflow\u2019, because you cannot just do <code>NOT VERIFY</code> - <code>NOT</code> expects a scriptnum</p>",
  "post_number": 37,
  "post_type": 1,
  "posts_count": 52,
  "updated_at": "2024-02-02T05:25:46.309Z",
  "reply_count": 1,
  "reply_to_post_number": 36,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 42,
  "readers_count": 41,
  "score": 13.4,
  "yours": false,
  "topic_id": 397,
  "topic_slug": "64-bit-arithmetic-soft-fork",
  "topic_title": "64 bit arithmetic soft fork",
  "topic_html_title": "64 bit arithmetic soft fork",
  "category_id": 7,
  "display_username": "",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": "",
  "bookmarked": false,
  "raw": "[quote=\"EthanHeilman, post:36, topic:397\"]\nI would propose altering this to so that the result and the overflow amount are pushed onto the stack.\n[/quote]\n\nThe overflow amount would be LE64,  but then the zero in case of 'no overflow' would also need to be LE64 (otherwise more-than-64bit calculations would still require branching), and that would complicate the common case of checking for 'no overflow', because you cannot just do `NOT VERIFY` - `NOT` expects a scriptnum",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 85,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "The overflow amount would be LE64,  but then the zero in case of \u2018no overflow\u2019 would also need to be LE64 (otherwise more-than-64bit calculations would still require branching), and that would complicate the common case of checking for \u2018no overflow\u2019, because you cannot just do NOT VERIFY - NOT expe&hellip;",
  "truncated": true,
  "post_url": "/t/64-bit-arithmetic-soft-fork/397/37",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}