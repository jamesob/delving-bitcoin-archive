{
  "id": 1602,
  "name": "/dev/fd0",
  "username": "1440000bytes",
  "avatar_template": "/user_avatar/delvingbitcoin.org/1440000bytes/{size}/301_2.png",
  "created_at": "2024-02-18T19:42:28.312Z",
  "cooked": "<p>Interesting approach which could solve lot of problems.</p>\n<aside class=\"quote no-group\" data-username=\"harding\" data-post=\"2\" data-topic=\"547\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/harding/48/6_2.png\" class=\"avatar\"> harding:</div>\n<blockquote>\n<p>That said, I think a <a href=\"https://delvingbitcoin.org/t/mempool-incentive-compatibility/553#a-simple-analysis-of-a-toy-problem-14\">contemporary post</a> on this forum points to a weakness in this theoretical model: a miner with a large percentage of total network hashrate can forgo mining a transaction in a particular block and still have a realistic chance of being able to mine that transaction in one of their later blocks. In the case of this contract, the large miner may be willing to settle this contract in their favor even if it means being unable to mine some higher feerate transactions in the current block because the large miner knows that they\u2019ll have a chance of mining some of the excluded transactions in the next block. A miner with a small percentage of total network hashrate doesn\u2019t have that option: they\u2019ll have to let the contract settle against them because their probability of getting a second chance at mining any transactions is tiny.</p>\n</blockquote>\n</aside>\n<p>This can be avoided by using average fee rates over N blocks and settle discreet log contracts using multi oracles.</p>",
  "post_number": 3,
  "post_type": 1,
  "updated_at": "2024-02-18T19:42:28.312Z",
  "reply_count": 0,
  "reply_to_post_number": 2,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 12,
  "readers_count": 11,
  "score": 2.4,
  "yours": false,
  "topic_id": 547,
  "topic_slug": "an-onchain-implementation-of-mining-feerate-futures",
  "topic_title": "An Onchain Implementation Of Mining Feerate Futures",
  "topic_html_title": "An Onchain Implementation Of Mining Feerate Futures",
  "category_id": 7,
  "display_username": "/dev/fd0",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Interesting approach which could solve lot of problems.\n\n[quote=\"harding, post:2, topic:547\"]\nThat said, I think a [contemporary post](https://delvingbitcoin.org/t/mempool-incentive-compatibility/553#a-simple-analysis-of-a-toy-problem-14) on this forum points to a weakness in this theoretical model: a miner with a large percentage of total network hashrate can forgo mining a transaction in a particular block and still have a realistic chance of being able to mine that transaction in one of their later blocks. In the case of this contract, the large miner may be willing to settle this contract in their favor even if it means being unable to mine some higher feerate transactions in the current block because the large miner knows that they\u2019ll have a chance of mining some of the excluded transactions in the next block. A miner with a small percentage of total network hashrate doesn\u2019t have that option: they\u2019ll have to let the contract settle against them because their probability of getting a second chance at mining any transactions is tiny.\n[/quote]\n\nThis can be avoided by using average fee rates over N blocks and settle discreet log contracts using multi oracles.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 247,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}