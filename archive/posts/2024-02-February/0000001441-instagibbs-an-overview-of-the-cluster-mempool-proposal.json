{
  "id": 1441,
  "name": "Gregory Sanders",
  "username": "instagibbs",
  "avatar_template": "/user_avatar/delvingbitcoin.org/instagibbs/{size}/28_2.png",
  "created_at": "2024-02-02T14:41:04.334Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"sdaftuar\" data-post=\"8\" data-topic=\"393\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/s/0ea827/48.png\" class=\"avatar\"> sdaftuar:</div>\n<blockquote>\n<p>However, I don\u2019t think we can easily achieve this behavior while maintaining an additional intuitive property:</p>\n<ul>\n<li>Any transactions we evict under this policy should not succeed in re-entering the mempool if immediately resubmitted.</li>\n</ul>\n</blockquote>\n</aside>\n<p>Can you motivate this as a principled objection? Mempool quality increases, just not in the most optimal way possible. The alternative is to not improve the mempool at all?</p>\n<aside class=\"quote no-group\" data-username=\"sdaftuar\" data-post=\"8\" data-topic=\"393\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/s/0ea827/48.png\" class=\"avatar\"> sdaftuar:</div>\n<blockquote>\n<p>Alternatively, we could find some child transaction to consider evicting; however if there is more than one candidate, then we might be in a difficult situation of trying to pick which one to evaluate, and there\u2019s no obvious way to make that choice.</p>\n</blockquote>\n</aside>\n<p>Again, if our constraint is \u201cwe can only pick the optimal evictions\u201d, sure this is intractable, but I am not convinced of that. For now I\u2019d rather focus on the premise of the objection on the simple non-v3 case.</p>\n<hr>\n<p>Also while we\u2019re here, the other strategy previously discussed to allow cluster limits to be breached, temporarily and in some limited size/count way, linearize, then \u201cprune\u201d until you get back to cluster limits. Accept/reject said linearization based on normal diagram checks. I know you\u2019ve already dismissed this, but good to have alternatives all in one place.</p>\n<p>With other objections you\u2019ve had aside, I think this strategy is more limited because you may not be able to practically make the sibling eviction candidates small.</p>",
  "post_number": 9,
  "post_type": 1,
  "updated_at": "2024-02-02T14:46:32.086Z",
  "reply_count": 1,
  "reply_to_post_number": 8,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 5,
  "readers_count": 4,
  "score": 5.8,
  "yours": false,
  "topic_id": 393,
  "topic_slug": "an-overview-of-the-cluster-mempool-proposal",
  "topic_title": "An overview of the cluster mempool proposal",
  "topic_html_title": "An overview of the cluster mempool proposal",
  "category_id": 8,
  "display_username": "Gregory Sanders",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"sdaftuar, post:8, topic:393\"]\nHowever, I don\u2019t think we can easily achieve this behavior while maintaining an additional intuitive property:\n\n* Any transactions we evict under this policy should not succeed in re-entering the mempool if immediately resubmitted.\n[/quote]\n\nCan you motivate this as a principled objection? Mempool quality increases, just not in the most optimal way possible. The alternative is to not improve the mempool at all?\n\n[quote=\"sdaftuar, post:8, topic:393\"]\nAlternatively, we could find some child transaction to consider evicting; however if there is more than one candidate, then we might be in a difficult situation of trying to pick which one to evaluate, and there\u2019s no obvious way to make that choice.\n[/quote]\n\nAgain, if our constraint is \"we can only pick the optimal evictions\", sure this is intractable, but I am not convinced of that. For now I'd rather focus on the premise of the objection on the simple non-v3 case.\n\n---\nAlso while we're here, the other strategy previously discussed to allow cluster limits to be breached, temporarily and in some limited size/count way, linearize, then \"prune\" until you get back to cluster limits. Accept/reject said linearization based on normal diagram checks. I know you've already dismissed this, but good to have alternatives all in one place.\n\nWith other objections you've had aside, I think this strategy is more limited because you may not be able to practically make the sibling eviction candidates small.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 31,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}