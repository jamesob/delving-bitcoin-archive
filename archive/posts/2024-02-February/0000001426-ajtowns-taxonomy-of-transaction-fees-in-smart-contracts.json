{
  "id": 1426,
  "name": "Anthony Towns",
  "username": "ajtowns",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/3_2.png",
  "created_at": "2024-02-02T08:48:56.544Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"instagibbs\" data-post=\"1\" data-topic=\"512\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/instagibbs/48/28_2.png\" class=\"avatar\"> instagibbs:</div>\n<blockquote>\n<p>In the below diagrams, green arrows indicate where fees are \u201ccoming from\u201d.</p>\n</blockquote>\n</aside>\n<p>I found these diagrams a little confusing. Here\u2019s how I think I would draw them; what do you think?</p>\n<ul>\n<li>Rounded boxes are utxos</li>\n<li>Square boxes are transactions</li>\n<li>Green lines emphasise where fee/change amounts come from/go</li>\n<li>Dashed lines just indicate conflicting txs (due to attempting to spend the same utxo) and are also labelled.</li>\n<li>If RBFing a previous state, the minimal set of txs that justify the RBF are highlighted in orange. If only one tx is highlighted, it probably works today; if two txs are highlighted, you need to wait for package RBF to be able to do state conflicts.</li>\n</ul>\n<h2><a name=\"endogenous-fees-single-transaction-rbf-1\" class=\"anchor\" href=\"#endogenous-fees-single-transaction-rbf-1\"></a>Endogenous fees, single transaction RBF</h2>\n<pre data-code-height=\"450\" data-code-wrap=\"mermaid\"><code class=\"lang-mermaid\">flowchart TD\n    Pc([contract]) --&gt; P4:::rbf\n    Pc --&gt; Pi4\n    Pi4[Pay to state y] &lt;-.-&gt;|conflicts| P4[Pay to state x\\nEndo fees, Single RBF]\n    P4 --&gt; Po4([state x balance minus fees])\n    \n    classDef rbf fill:#f96\n    linkStyle 0 stroke-width:4px,stroke:green\n    linkStyle 1 stroke-width:4px,stroke:green\n</code></pre>\n<h1><a name=\"exogenous-fees-single-transaction-rbf-2\" class=\"anchor\" href=\"#exogenous-fees-single-transaction-rbf-2\"></a>Exogenous fees, single transaction RBF</h1>\n<pre data-code-height=\"450\" data-code-wrap=\"mermaid\"><code class=\"lang-mermaid\">flowchart TD\n    Pc([contract]) --&gt; P5:::rbf\n    Pc --&gt; Pi5\n    Pi5[Pay to state y] &lt;-.-&gt;|conflicts| P5[Pay to state x\\nExo fees, Single RBF]\n    Pi5_2([fee input])--&gt; P5\n    P5 --&gt; Po5([state x balance])\n    P5 --&gt; Co5([change])\n    \n    classDef rbf fill:#f96\n    linkStyle 3 stroke-width:4px,stroke:green\n    linkStyle 5 stroke-width:4px,stroke:green\n</code></pre>\n<h1><a name=\"endogenous-fees-cpfp-3\" class=\"anchor\" href=\"#endogenous-fees-cpfp-3\"></a>Endogenous fees, CPFP</h1>\n<p><em>This is the same as \u201cendogenous fees, package rbf\u201d, if you note that \u201cPay to state x\u201d conflicts with some other tx \u201cPay to state y\u201d, both spending \u201ccontract\u201d</em></p>\n<pre data-code-height=\"450\" data-code-wrap=\"mermaid\"><code class=\"lang-mermaid\">flowchart TD\n    Pi3([contract]) --&gt; P3[Pay to state x]:::rbf\n    Pi3 --&gt; Pc[Pay to state y] &lt;-.-&gt;|conflicts| P3\n    P3 --&gt; Po3([contract state x])\n    Po3 --&gt; C3[Endo fees, CPFP]:::rbf\n    C3 --&gt; Co3([state x balance minus fees])\n    \n    classDef rbf fill:#f96\n    linkStyle 0 stroke-width:4px,stroke:green\n    linkStyle 3 stroke-width:4px,stroke:green\n    linkStyle 4 stroke-width:4px,stroke:green\n    linkStyle 5 stroke-width:4px,stroke:green\n</code></pre>\n<h1><a name=\"exogenous-fees-cpfp-4\" class=\"anchor\" href=\"#exogenous-fees-cpfp-4\"></a>Exogenous fees, CPFP</h1>\n<p><em>Likewise</em></p>\n<pre data-code-height=\"519\" data-code-wrap=\"mermaid\"><code class=\"lang-mermaid\">flowchart TD\n    Pi([contract]) --&gt; P[Pay to state x]:::rbf\n    Pi --&gt; Pc[Pay to state y] &lt;-.-&gt;|conflicts| P\n    P --&gt; Po([state x])\n    Po --&gt; C[Exo fees, CPFP]:::rbf\n    fee([fee input]) --&gt; C\n    C --&gt; Co([change plus state x balance])\n    \n    classDef rbf fill:#f96\n    linkStyle 5 stroke-width:4px,stroke:green\n    linkStyle 6 stroke-width:4px,stroke:green\n</code></pre>",
  "post_number": 6,
  "post_type": 1,
  "updated_at": "2024-02-02T08:48:56.544Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 3,
  "readers_count": 2,
  "score": 0.6,
  "yours": false,
  "topic_id": 512,
  "topic_slug": "taxonomy-of-transaction-fees-in-smart-contracts",
  "topic_title": "Taxonomy of Transaction Fees in Smart Contracts",
  "topic_html_title": "Taxonomy of Transaction Fees in Smart Contracts",
  "category_id": 7,
  "display_username": "Anthony Towns",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"instagibbs, post:1, topic:512\"]\nIn the below diagrams, green arrows indicate where fees are \u201ccoming from\u201d.\n[/quote]\n\nI found these diagrams a little confusing. Here's how I think I would draw them; what do you think?\n\n * Rounded boxes are utxos\n * Square boxes are transactions\n * Green lines emphasise where fee/change amounts come from/go\n * Dashed lines just indicate conflicting txs (due to attempting to spend the same utxo) and are also labelled.\n * If RBFing a previous state, the minimal set of txs that justify the RBF are highlighted in orange. If only one tx is highlighted, it probably works today; if two txs are highlighted, you need to wait for package RBF to be able to do state conflicts.\n\n## Endogenous fees, single transaction RBF\n\n```mermaid height=450,auto\nflowchart TD\n    Pc([contract]) --> P4:::rbf\n    Pc --> Pi4\n    Pi4[Pay to state y] <-.->|conflicts| P4[Pay to state x\\nEndo fees, Single RBF]\n    P4 --> Po4([state x balance minus fees])\n    \n    classDef rbf fill:#f96\n    linkStyle 0 stroke-width:4px,stroke:green\n    linkStyle 1 stroke-width:4px,stroke:green\n```\n\n# Exogenous fees, single transaction RBF\n\n```mermaid height=450,auto\nflowchart TD\n    Pc([contract]) --> P5:::rbf\n    Pc --> Pi5\n    Pi5[Pay to state y] <-.->|conflicts| P5[Pay to state x\\nExo fees, Single RBF]\n    Pi5_2([fee input])--> P5\n    P5 --> Po5([state x balance])\n    P5 --> Co5([change])\n    \n    classDef rbf fill:#f96\n    linkStyle 3 stroke-width:4px,stroke:green\n    linkStyle 5 stroke-width:4px,stroke:green\n```\n\n# Endogenous fees, CPFP\n\n*This is the same as \"endogenous fees, package rbf\", if you note that \"Pay to state x\" conflicts with some other tx \"Pay to state y\", both spending \"contract\"*\n\n```mermaid height=450,auto\nflowchart TD\n    Pi3([contract]) --> P3[Pay to state x]:::rbf\n    Pi3 --> Pc[Pay to state y] <-.->|conflicts| P3\n    P3 --> Po3([contract state x])\n    Po3 --> C3[Endo fees, CPFP]:::rbf\n    C3 --> Co3([state x balance minus fees])\n    \n    classDef rbf fill:#f96\n    linkStyle 0 stroke-width:4px,stroke:green\n    linkStyle 3 stroke-width:4px,stroke:green\n    linkStyle 4 stroke-width:4px,stroke:green\n    linkStyle 5 stroke-width:4px,stroke:green\n```\n\n# Exogenous fees, CPFP\n\n*Likewise*\n\n```mermaid height=519,auto\nflowchart TD\n    Pi([contract]) --> P[Pay to state x]:::rbf\n    Pi --> Pc[Pay to state y] <-.->|conflicts| P\n    P --> Po([state x])\n    Po --> C[Exo fees, CPFP]:::rbf\n    fee([fee input]) --> C\n    C --> Co([change plus state x balance])\n    \n    classDef rbf fill:#f96\n    linkStyle 5 stroke-width:4px,stroke:green\n    linkStyle 6 stroke-width:4px,stroke:green\n```",
  "actions_summary": [],
  "moderator": true,
  "admin": true,
  "staff": true,
  "user_id": 3,
  "hidden": false,
  "trust_level": 4,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [
    {
      "id": "heart",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false
}