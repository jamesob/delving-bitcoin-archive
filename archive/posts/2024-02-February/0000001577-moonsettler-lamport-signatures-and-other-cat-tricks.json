{
  "id": 1577,
  "name": "moonsettler",
  "username": "moonsettler",
  "avatar_template": "/user_avatar/delvingbitcoin.org/moonsettler/{size}/38_2.png",
  "created_at": "2024-02-15T10:44:20.568Z",
  "cooked": "<p><em>copy pasta from the CAT github PR for those that don\u2019t follow:</em></p>\n<p>Some of us have been playing with the idea of neutered CAT: instead of the MAX_SCRIPT_ELEMENT_SIZE (520 bytes) the maximum output size would be 80 bytes.</p>\n<p><strong>Rationale:</strong>\nIt explicitly disables open ended second order effects by removing the ability to assemble a SIGHASH or CTV template on the stack for more detailed introspection than intended. If such introspection behavior is desired in the future it can be explicitly enabled by specialized and more efficient opcodes.</p>\n<p>Combined with CSFS it can be used as a signed datacarrier, for which the \u2018standard\u2019 limit is 80 bytes, it also has to be smaller than 84 bytes which is required for building CTV templates on the stack, and larger than 64/65/72 bytes which are respectively needed for:</p>\n<ul>\n<li>Merkle inclusion: 2x 20/32 byte hashes</li>\n<li>LN-symmetry (LNhance): 2x 32 byte hashes</li>\n<li>Separate sig: 64/72 bytes (0-conf bonds, staking contracts)</li>\n</ul>\n<p>Could be a livable compromise between the conservatives that want to preserve certain characteristics of bitcoin and the prometheans who want to give the developers more practical and useful tools to build with.</p>",
  "post_number": 17,
  "post_type": 1,
  "updated_at": "2024-02-15T10:44:20.568Z",
  "reply_count": 1,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 7,
  "readers_count": 6,
  "score": 6.4,
  "yours": false,
  "topic_id": 236,
  "topic_slug": "lamport-signatures-and-other-cat-tricks",
  "topic_title": "Lamport signatures and other CAT tricks",
  "topic_html_title": "Lamport signatures and other CAT tricks",
  "category_id": 7,
  "display_username": "moonsettler",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "*copy pasta from the CAT github PR for those that don't follow:*\n\nSome of us have been playing with the idea of neutered CAT: instead of the MAX_SCRIPT_ELEMENT_SIZE (520 bytes) the maximum output size would be 80 bytes.\n\n**Rationale:**\nIt explicitly disables open ended second order effects by removing the ability to assemble a SIGHASH or CTV template on the stack for more detailed introspection than intended. If such introspection behavior is desired in the future it can be explicitly enabled by specialized and more efficient opcodes.\n\nCombined with CSFS it can be used as a signed datacarrier, for which the 'standard' limit is 80 bytes, it also has to be smaller than 84 bytes which is required for building CTV templates on the stack, and larger than 64/65/72 bytes which are respectively needed for:\n- Merkle inclusion: 2x 20/32 byte hashes\n- LN-symmetry (LNhance): 2x 32 byte hashes\n- Separate sig: 64/72 bytes (0-conf bonds, staking contracts)\n\nCould be a livable compromise between the conservatives that want to preserve certain characteristics of bitcoin and the prometheans who want to give the developers more practical and useful tools to build with.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 48,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}