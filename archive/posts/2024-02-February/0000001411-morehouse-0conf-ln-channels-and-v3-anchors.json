{
  "id": 1411,
  "name": "Matt Morehouse",
  "username": "morehouse",
  "avatar_template": "/letter_avatar_proxy/v4/letter/m/df705f/{size}.png",
  "created_at": "2024-02-01T22:58:04.876Z",
  "cooked": "<h2><a name=\"current-situation-1\" class=\"anchor\" href=\"#current-situation-1\"></a>Current situation</h2>\n<p>In an emergency, the funding transaction can be confirmed using the commitment + anchor spend to CPFP.  Alternatively, if either party has a change output on the funding transaction, they can use it to CPFP directly.</p>\n<p>However, any of these CPFP methods can be defeated by pinning the funding transaction.</p>\n<h2><a name=\"future-solution-2\" class=\"anchor\" href=\"#future-solution-2\"></a>Future solution</h2>\n<p>Piecing together some ideas I\u2019ve heard from <a class=\"mention\" href=\"/u/instagibbs\">@instagibbs</a>.</p>\n<p>If we have:</p>\n<ul>\n<li>cluster mempool</li>\n<li>package relay</li>\n<li>v3 policy becomes a \u201c<a href=\"https://delvingbitcoin.org/t/opt-in-transaction-policies-for-anti-pinning/159#transaction-priority-opt-in-5\">priority opt-in</a>\u201d, with no ancestor restrictions and no 1-child limit</li>\n</ul>\n<p>then we can make funding transactions v3, and I think this problem is largely solved.</p>\n<p>The funding transaction can be CPFP\u2019d by either party using the commitment + anchor spend package.  Pinning is largely mitigated, since the priority fee rate must be used for all descendants of the funding transaction.</p>\n<p>The only scenario where the funding transaction couldn\u2019t be confirmed in a timely manner is when (1) the cluster limit is reached and then (2) mempool fee rates spike.  An attacker would need to cause (1) preemptively, costing them considerable fees (cluster limit * priority fee rate), and only benefiting them on the rare chance that (2) occurs.  Therefore, such an attack is probably not a realistic concern.</p>\n<h2><a name=\"v3-only-solution-3\" class=\"anchor\" href=\"#v3-only-solution-3\"></a>v3-only solution</h2>\n<p>During the v3 transition period (before cluster mempool et al.), maybe the best we can do is to keep the status quo.</p>\n<p>To allow either party to CPFP the funding transaction in an emergency, we can add a shared anchor to the funding transaction and keep it non-v3.  This would also allow arbitrary ancestor topologies (e.g., splice trees) for the funding transaction.</p>\n<p>Pinning can still defeat the shared anchor, but that is no worse than our current situation.</p>",
  "post_number": 7,
  "post_type": 1,
  "updated_at": "2024-02-01T22:58:04.876Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 12,
  "readers_count": 11,
  "score": 17.4,
  "yours": false,
  "topic_id": 494,
  "topic_slug": "0conf-ln-channels-and-v3-anchors",
  "topic_title": "0conf LN channels and v3 anchors",
  "topic_html_title": "0conf LN channels and v3 anchors",
  "category_id": 7,
  "display_username": "Matt Morehouse",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "## Current situation\n\nIn an emergency, the funding transaction can be confirmed using the commitment + anchor spend to CPFP.  Alternatively, if either party has a change output on the funding transaction, they can use it to CPFP directly.\n\nHowever, any of these CPFP methods can be defeated by pinning the funding transaction.\n\n\n## Future solution\n\nPiecing together some ideas I've heard from @instagibbs.\n\nIf we have:\n\n- cluster mempool\n- package relay\n- v3 policy becomes a \"[priority opt-in](https://delvingbitcoin.org/t/opt-in-transaction-policies-for-anti-pinning/159#transaction-priority-opt-in-5)\", with no ancestor restrictions and no 1-child limit\n\nthen we can make funding transactions v3, and I think this problem is largely solved.\n\nThe funding transaction can be CPFP'd by either party using the commitment + anchor spend package.  Pinning is largely mitigated, since the priority fee rate must be used for all descendants of the funding transaction.\n\nThe only scenario where the funding transaction couldn't be confirmed in a timely manner is when (1) the cluster limit is reached and then (2) mempool fee rates spike.  An attacker would need to cause (1) preemptively, costing them considerable fees (cluster limit * priority fee rate), and only benefiting them on the rare chance that (2) occurs.  Therefore, such an attack is probably not a realistic concern.\n\n## v3-only solution\n\nDuring the v3 transition period (before cluster mempool et al.), maybe the best we can do is to keep the status quo.\n\nTo allow either party to CPFP the funding transaction in an emergency, we can add a shared anchor to the funding transaction and keep it non-v3.  This would also allow arbitrary ancestor topologies (e.g., splice trees) for the funding transaction.\n\nPinning can still defeat the shared anchor, but that is no worse than our current situation.",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 47,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    },
    {
      "id": "thinking",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 2,
  "current_user_used_main_reaction": false
}