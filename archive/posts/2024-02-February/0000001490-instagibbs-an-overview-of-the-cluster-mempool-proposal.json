{
  "id": 1490,
  "name": "Gregory Sanders",
  "username": "instagibbs",
  "avatar_template": "/user_avatar/delvingbitcoin.org/instagibbs/{size}/28_2.png",
  "created_at": "2024-02-08T15:23:54.319Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"sdaftuar\" data-post=\"15\" data-topic=\"393\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/s/0ea827/48.png\" class=\"avatar\"> sdaftuar:</div>\n<blockquote>\n<p>So A, B, C are in the mempool and D arrives. ABC is at the cluster size limit, and the cluster should chunk as [AB, C]. Running your algorithm, we mark C for eviction, and then mark B for eviction \u2013 at which point we\u2019ve freed enough space. We compare [AD] to [AB, C] and assuming I made D\u2019s feerate high enough, it gets in. But now there is room for C to be re-added as well.</p>\n</blockquote>\n</aside>\n<p>You\u2019re of course right, since we\u2019re not optimally pruning these effects can still happen. So you might want to have the evicting party pay for it, but then let it back in via re-submission. Or just be more optimal.</p>\n<aside class=\"quote no-group\" data-username=\"sdaftuar\" data-post=\"15\" data-topic=\"393\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/s/0ea827/48.png\" class=\"avatar\"> sdaftuar:</div>\n<blockquote>\n<p>it would be a shame if we were held up in deploying it due to reliance that has developed on existing behavior.</p>\n</blockquote>\n</aside>\n<p>Shower-thought level quality aside, the goal is to give wallets, who maybe don\u2019t even see the cluster limit being hit, a way to improve the mempool and get their transactions confirmed. If we find an even better way later, we should take it.</p>\n<aside class=\"quote no-group\" data-username=\"sdaftuar\" data-post=\"15\" data-topic=\"393\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/s/0ea827/48.png\" class=\"avatar\"> sdaftuar:</div>\n<blockquote>\n<p>then I think it would make sense to motivate the logic with a use case that would need it.</p>\n</blockquote>\n</aside>\n<p>A couple use-cases for motivation in the future, all relying on cluster sizes of <a href=\"https://delvingbitcoin.org/t/v3-and-some-possible-futures/523\">above 2</a>:</p>\n<ol>\n<li>0-conf funding transactions in LN. Funding transaction may have descendants added on, so the anchor spend(or slightly larger replacement) is unable to enter the cluster.</li>\n<li>Ark/Timeout trees. You may want log(n) nodes in the tree published with a single anchor at the end of the chain, but once enough branches are put into the mempool, you\u2019re unable to make attempts at inclusion.</li>\n</ol>\n<p>Adding anchors at each step \u201cfixes\u201d these, but significant marginal bytes to protect against scenarios no one has seen in the wild is a hard sell.</p>",
  "post_number": 16,
  "post_type": 1,
  "updated_at": "2024-02-08T15:23:54.319Z",
  "reply_count": 0,
  "reply_to_post_number": 15,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 2,
  "readers_count": 1,
  "score": 0,
  "yours": false,
  "topic_id": 393,
  "topic_slug": "an-overview-of-the-cluster-mempool-proposal",
  "topic_title": "An overview of the cluster mempool proposal",
  "topic_html_title": "An overview of the cluster mempool proposal",
  "category_id": 8,
  "display_username": "Gregory Sanders",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"sdaftuar, post:15, topic:393\"]\nSo A, B, C are in the mempool and D arrives. ABC is at the cluster size limit, and the cluster should chunk as [AB, C]. Running your algorithm, we mark C for eviction, and then mark B for eviction \u2013 at which point we\u2019ve freed enough space. We compare [AD] to [AB, C] and assuming I made D\u2019s feerate high enough, it gets in. But now there is room for C to be re-added as well.\n[/quote]\n\nYou're of course right, since we're not optimally pruning these effects can still happen. So you might want to have the evicting party pay for it, but then let it back in via re-submission. Or just be more optimal.\n\n[quote=\"sdaftuar, post:15, topic:393\"]\nit would be a shame if we were held up in deploying it due to reliance that has developed on existing behavior.\n[/quote]\n\nShower-thought level quality aside, the goal is to give wallets, who maybe don't even see the cluster limit being hit, a way to improve the mempool and get their transactions confirmed. If we find an even better way later, we should take it.\n\n[quote=\"sdaftuar, post:15, topic:393\"]\nthen I think it would make sense to motivate the logic with a use case that would need it.\n[/quote]\n\nA couple use-cases for motivation in the future, all relying on cluster sizes of [above 2](https://delvingbitcoin.org/t/v3-and-some-possible-futures/523):\n\n1) 0-conf funding transactions in LN. Funding transaction may have descendants added on, so the anchor spend(or slightly larger replacement) is unable to enter the cluster.\n2) Ark/Timeout trees. You may want log(n) nodes in the tree published with a single anchor at the end of the chain, but once enough branches are put into the mempool, you're unable to make attempts at inclusion.\n\nAdding anchors at each step \"fixes\" these, but significant marginal bytes to protect against scenarios no one has seen in the wild is a hard sell.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 31,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}