{
  "id": 3489,
  "name": "josie",
  "username": "josibake",
  "avatar_template": "/user_avatar/delvingbitcoin.org/josibake/{size}/83_2.png",
  "created_at": "2024-11-05T10:23:56.088Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"AntoineP\" data-post=\"1\" data-topic=\"1222\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/antoinep/48/483_2.png\" class=\"avatar\"> AntoineP:</div>\n<blockquote>\n<p>Libbitcoin will skip transaction validation besides checking they were properly committed, i.e. no malleation of either transactions or witnesses (note this means in particular inputs existence isn\u2019t checked). This is in my opinion a similar threat model to Bitcoin Core\u2019s <code>-assumevalid</code>.</p>\n</blockquote>\n</aside>\n<p>I think this edit helps, but is still a bit confusing in that the term \u201ctransaction validation\u201d is overloaded. Later in the post, you define \u201cValidation\u201d and \u201cConfirmability\u201d as two separate things, i.e., \u201cValidation\u201d is all verification checks <em>except</em> \u201cConfirmability\u201d and \u201cConfirmability\u201d is only verifying prevouts exist and are unspent. I think the OP would be more clear if it explicitly mentions that for blocks under the milestone, both \u201cValidation\u201d and \u201cConfirmability\u201d checks are skipped. I think this also makes it more clear where the differences with Core\u2019s architecture are: while this is conceptually a similar threat model, Core <em>does</em> need to check that inputs exist and are unspent because this is necessary for maintaining a \u201cUTXO set\u201d (in that we must know what inputs are being spent so that they can be deleted from the UTXO set before continuing).</p>",
  "post_number": 10,
  "post_type": 1,
  "updated_at": "2024-11-05T10:23:56.088Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 20,
  "readers_count": 19,
  "score": 19.0,
  "yours": false,
  "topic_id": 1222,
  "topic_slug": "libbitcoin-for-core-people",
  "topic_title": "Libbitcoin for Core people",
  "topic_html_title": "Libbitcoin for Core people",
  "category_id": 8,
  "display_username": "josie",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"AntoineP, post:1, topic:1222\"]\nLibbitcoin will skip transaction validation besides checking they were properly committed, i.e. no malleation of either transactions or witnesses (note this means in particular inputs existence isn\u2019t checked). This is in my opinion a similar threat model to Bitcoin Core\u2019s `-assumevalid`.\n[/quote]\n\nI think this edit helps, but is still a bit confusing in that the term \"transaction validation\" is overloaded. Later in the post, you define \"Validation\" and \"Confirmability\" as two separate things, i.e., \"Validation\" is all verification checks _except_ \"Confirmability\" and \"Confirmability\" is only verifying prevouts exist and are unspent. I think the OP would be more clear if it explicitly mentions that for blocks under the milestone, both \"Validation\" and \"Confirmability\" checks are skipped. I think this also makes it more clear where the differences with Core's architecture are: while this is conceptually a similar threat model, Core _does_ need to check that inputs exist and are unspent because this is necessary for maintaining a \"UTXO set\" (in that we must know what inputs are being spent so that they can be deleted from the UTXO set before continuing).",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 92,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false
}