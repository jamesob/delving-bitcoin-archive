{
  "id": 3625,
  "name": "jungly",
  "username": "jungly",
  "avatar_template": "/user_avatar/delvingbitcoin.org/jungly/{size}/289_2.png",
  "created_at": "2024-11-27T21:34:24.602Z",
  "cooked": "<p>With consistent views from BFT broadcast, each node will arrive at the same reward distribution as they data set they reason upon is consistent.</p>\n<p>The elegance here is to note the difference between consensus and BFT broadcast. Consensus/Agreement in theory states that one node proposes a value and everyone else agrees with it - to phrase things loosely. BFT broadcast on the other hand is much more relaxed. It makes sure threshold parties have received a given message. If all messages are BFT broadcast, all nodes end up with a consistent view, and we don\u2019t need consensus/agreement. In fact, there is a simple reduction from reliable broadcast to consensus, where you need more rounds on top of broadcast to get to consensus.</p>\n<p>Another very important point to note, the broadcast among MSPs is within a known set of parties. Which is a much much easier problem than consensus in a permissionless system where the set of parties is <em>not</em> known at the outset.</p>\n<p>It will not be a mundane task to define, prove and implement a permissionless consensus protocol. It will add a <em>lot</em> of engineering man months. Radpool wants to avoid such huge projects, even without consensus Radpool is a <em>big</em> project. We instead run with a known membership, and choose well known easy to implement algorithms to get to a functional MVP.</p>",
  "post_number": 7,
  "post_type": 1,
  "updated_at": "2024-11-27T21:34:24.602Z",
  "reply_count": 0,
  "reply_to_post_number": 6,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 8,
  "readers_count": 7,
  "score": 1.6,
  "yours": false,
  "topic_id": 1262,
  "topic_slug": "radpool-decentralised-mining-pool-with-futures-contracts-for-payouts",
  "topic_title": "Radpool: Decentralised Mining Pool With Futures Contracts For Payouts",
  "topic_html_title": "Radpool: Decentralised Mining Pool With Futures Contracts For Payouts",
  "category_id": 7,
  "display_username": "jungly",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "username": "mcelrath",
    "name": "Bob McElrath",
    "avatar_template": "/user_avatar/delvingbitcoin.org/mcelrath/{size}/521_2.png"
  },
  "bookmarked": false,
  "raw": "With consistent views from BFT broadcast, each node will arrive at the same reward distribution as they data set they reason upon is consistent.\n\nThe elegance here is to note the difference between consensus and BFT broadcast. Consensus/Agreement in theory states that one node proposes a value and everyone else agrees with it - to phrase things loosely. BFT broadcast on the other hand is much more relaxed. It makes sure threshold parties have received a given message. If all messages are BFT broadcast, all nodes end up with a consistent view, and we don't need consensus/agreement. In fact, there is a simple reduction from reliable broadcast to consensus, where you need more rounds on top of broadcast to get to consensus.\n\nAnother very important point to note, the broadcast among MSPs is within a known set of parties. Which is a much much easier problem than consensus in a permissionless system where the set of parties is _not_ known at the outset.\n\nIt will not be a mundane task to define, prove and implement a permissionless consensus protocol. It will add a _lot_ of engineering man months. Radpool wants to avoid such huge projects, even without consensus Radpool is a _big_ project. We instead run with a known membership, and choose well known easy to implement algorithms to get to a functional MVP.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 102,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}