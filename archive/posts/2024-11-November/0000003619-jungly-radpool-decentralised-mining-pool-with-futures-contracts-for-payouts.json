{
  "id": 3619,
  "name": "jungly",
  "username": "jungly",
  "avatar_template": "/user_avatar/delvingbitcoin.org/jungly/{size}/289_2.png",
  "created_at": "2024-11-27T17:46:05.078Z",
  "cooked": "<p>There are a few differences between Braidpool and Radpool proposals</p>\n<ol>\n<li>Consensus - Radpool does not need one, Braidpool needs consensus on transactions/beads/blocks at the base layer itself. Radpool only needs BFT broadcast that FROST federation needs anyway.</li>\n<li>Timeliness concerns - Radpool does not do consensus and therefore does not have concerns about reaching the consensus in a given time frame. FWIW, I think we should build delay tolerant protocols.</li>\n<li>FROST Federation - Radpool federation membership explicitly defines how <a href=\"https://www.radpool.xyz/1/frost-federation.html#_membership\" rel=\"noopener nofollow ugc\">miner hashrate decides federation membership</a>. Braidpool requires miners to get lucky to find a block for joining the federation. I think hashrate is enough and is more inclusive than finding blocks.</li>\n<li>Payout mechanism - In Radpool a single miner can exit at any time, with Braidpool the miner has to wait two week period in the worst case, or request permission for an early exit.</li>\n<li>Futures payout mechanism - Radpool\u2019s payout primitive is a future\u2019s contract using a DLC. Braidpool needs to figure out how the futures contracts will work.</li>\n<li>Miner onboarding - In Radpool, a miner signs up to an MSP and is done. In Braidpool miners need to run a fair few services to get going.</li>\n<li>Network Topology - Radpool ends up with a point to point network of MSPs and miners talking only to MSPs. Braidpool is a p2p network across all miners.</li>\n</ol>\n<p>For what is worth, the syndicate in <em>Radpool is built by MSPs who bring both the required hashrate <em>and</em> liquidity they provide to fund DLCs.</em></p>\n<h2><a name=\"p-3619-execution-risk-1\" class=\"anchor\" href=\"#p-3619-execution-risk-1\"></a>Execution Risk</h2>\n<p>The biggest reason I am pitching Radpool as a separate project is execution risk with Braidpool.</p>\n<p>Braidpool proposes a consensus protocol that is not proven to work or to scale - especially if we don\u2019t use Kaspa\u2019s DAGKnight protocol. I get DAGKnight, my <a href=\"https://github.com/kulpreet/transman-phd-thesis/blob/0e8816ee270fb1ea2d596b0237c91d87b73dc97c/TCD-SCSS-PHD-2006-12.pdf\" rel=\"noopener nofollow ugc\">PhD thesis</a> was on a DAG based consensus protocol back in 2006. I remember how much effort it took me to implement a consensus protocol. Implementing a new consensus protocol that can scale to thousands of nodes is risky. I suspect at scale DAGKnight\u2019s block rate will slow down and so will Braidpool\u2019s. What will that mean for Braidpool, where we are very focussed on fast block times, I don\u2019t know. It could work smoothly. But it is a risk.</p>\n<p>Radpool eliminates the need for consensus. Radpool explicitly avoids new cryptography or distributed systems protocols. With Radpool, we take well understood protocols and put them together to provide a mining pool that improves blocktemplate decentralisation and offers decentralised FPPS.</p>\n<h2><a name=\"p-3619-response-to-bobs-comments-2\" class=\"anchor\" href=\"#p-3619-response-to-bobs-comments-2\"></a>Response to Bob\u2019s Comments</h2>\n<blockquote>\n<p>syndicate of MSPs will result in a highly political process</p>\n</blockquote>\n<p>Syndicate membership is explicitly defined by the hashrate the MSP brings to the pool. Miners vote with their hashrate.</p>\n<blockquote>\n<p>smaller number of entities to attack for those that want to censor transactions</p>\n</blockquote>\n<p>Some miners want to and can build block templates. Others don\u2019t want to. Radpool enables both. Some MSPs will run SV2, some will run SV1. Miners will choose how they want to work. MSPs will support both SV1 and SV2 - good old SRI has both!</p>\n<blockquote>\n<p>pricing and trading of options and future (share transfer to a risk-taker) is significantly muddied</p>\n</blockquote>\n<p>Radpool\u2019s future contract is very simple and defined between two parties - MSP and Miner. MSP agrees to pay miner X BTC for Y Hashrate produced by Z date. All three parameters are independently decided for each contract by the parties involved. Braidpool\u2019s future contract system is not yet clear to me. <a href=\"https://blog.opdup.com/2021/08/18/deliver-hashrate-to-market-makers.html\" rel=\"noopener nofollow ugc\">I tried to define something using single use seals for Braidpool a while back</a>, but Braidpool didn\u2019t go that route.</p>\n<blockquote>\n<p>The share accounting system was not described.</p>\n</blockquote>\n<p>I\u2019ll add a section on this.</p>",
  "post_number": 4,
  "post_type": 1,
  "updated_at": "2024-11-27T17:51:11.385Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 7,
  "readers_count": 6,
  "score": 1.4,
  "yours": false,
  "topic_id": 1262,
  "topic_slug": "radpool-decentralised-mining-pool-with-futures-contracts-for-payouts",
  "topic_title": "Radpool: Decentralised Mining Pool With Futures Contracts For Payouts",
  "topic_html_title": "Radpool: Decentralised Mining Pool With Futures Contracts For Payouts",
  "category_id": 7,
  "display_username": "jungly",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "There are a few differences between Braidpool and Radpool proposals\n\n1. Consensus - Radpool does not need one, Braidpool needs consensus on transactions/beads/blocks at the base layer itself. Radpool only needs BFT broadcast that FROST federation needs anyway.\n2. Timeliness concerns - Radpool does not do consensus and therefore does not have concerns about reaching the consensus in a given time frame. FWIW, I think we should build delay tolerant protocols.\n4. FROST Federation - Radpool federation membership explicitly defines how [miner hashrate decides federation membership](https://www.radpool.xyz/1/frost-federation.html#_membership). Braidpool requires miners to get lucky to find a block for joining the federation. I think hashrate is enough and is more inclusive than finding blocks.\n5. Payout mechanism - In Radpool a single miner can exit at any time, with Braidpool the miner has to wait two week period in the worst case, or request permission for an early exit.\n6. Futures payout mechanism - Radpool's payout primitive is a future's contract using a DLC. Braidpool needs to figure out how the futures contracts will work.\n7. Miner onboarding - In Radpool, a miner signs up to an MSP and is done. In Braidpool miners need to run a fair few services to get going.\n8. Network Topology - Radpool ends up with a point to point network of MSPs and miners talking only to MSPs. Braidpool is a p2p network across all miners. \n\nFor what is worth, the syndicate in *Radpool is built by MSPs who bring both the required hashrate _and_ liquidity they provide to fund DLCs.*\n\n## Execution Risk\n\nThe biggest reason I am pitching Radpool as a separate project is execution risk with Braidpool. \n\nBraidpool proposes a consensus protocol that is not proven to work or to scale - especially if we don't use Kaspa's DAGKnight protocol. I get DAGKnight, my [PhD thesis](https://github.com/kulpreet/transman-phd-thesis/blob/0e8816ee270fb1ea2d596b0237c91d87b73dc97c/TCD-SCSS-PHD-2006-12.pdf) was on a DAG based consensus protocol back in 2006. I remember how much effort it took me to implement a consensus protocol. Implementing a new consensus protocol that can scale to thousands of nodes is risky. I suspect at scale DAGKnight's block rate will slow down and so will Braidpool's. What will that mean for Braidpool, where we are very focussed on fast block times, I don't know. It could work smoothly. But it is a risk.\n\nRadpool eliminates the need for consensus. Radpool explicitly avoids new cryptography or distributed systems protocols. With Radpool, we take well understood protocols and put them together to provide a mining pool that improves blocktemplate decentralisation and offers decentralised FPPS.\n\n## Response to Bob's Comments\n\n> syndicate of MSPs will result in a highly political process\n\nSyndicate membership is explicitly defined by the hashrate the MSP brings to the pool. Miners vote with their hashrate.\n\n> smaller number of entities to attack for those that want to censor transactions\n\nSome miners want to and can build block templates. Others don't want to. Radpool enables both. Some MSPs will run SV2, some will run SV1. Miners will choose how they want to work. MSPs will support both SV1 and SV2 - good old SRI has both!\n\n>  pricing and trading of options and future (share transfer to a risk-taker) is significantly muddied \n\nRadpool's future contract is very simple and defined between two parties - MSP and Miner. MSP agrees to pay miner X BTC for Y Hashrate produced by Z date. All three parameters are independently decided for each contract by the parties involved. Braidpool's future contract system is not yet clear to me. [I tried to define something using single use seals for Braidpool a while back](https://blog.opdup.com/2021/08/18/deliver-hashrate-to-market-makers.html), but Braidpool didn't go that route.\n\n> The share accounting system was not described.\n\nI'll add a section on this.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 102,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": "Github link was replaced with a permanent link",
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}