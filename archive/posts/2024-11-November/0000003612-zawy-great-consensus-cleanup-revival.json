{
  "id": 3612,
  "name": "Zawy",
  "username": "zawy",
  "avatar_template": "/user_avatar/delvingbitcoin.org/zawy/{size}/750_2.png",
  "created_at": "2024-11-27T11:53:20.181Z",
  "cooked": "<p>TL;DR\nA 2 hr limit on every block enables an easy attack on external applications that don\u2019t implement it correctly if the median of past timestamps (MPT ot MTP) is ever more than 2 hours in the past. Applying Murch\u2019s timestamp limit to every block appears better than doing it only on the 2016th block because it forces everyone to view it and code it as a change to the MPT consensus rule which will prevent mistakes and attacks if it\u2019s viewed as only a \u201ctimestamp\u201d or \u201cdifficulty\u201d change. This is because there may be script or code somewhere in the world that is focused on MPT and the developer thinks the change only affects timestamp or the difficulty.</p>\n<p>I called the 2 hr limit on every block the \u201csafest and easiest\u201d option, but I need to retract that due to 2 hour being too small. It changes the MPT consensus rule that a lot of software depends on by overriding it if a timestamp &gt;2 hr in the past occurs and if the MPT is even further in the past. It enables an easy malicious attack on all software that doesn\u2019t implement the rule change. A single miner only needs to use a timestamp &gt;2 hrs in the past if the MTP happens to be more than that.</p>\n<p>The general rule is that if you make a consensus rule change, make it as small as possible. This is what Murch\u2019s fix does (timestamps at 2016th block can\u2019t older than the 1st block), but there\u2019s a lack of \u201csymmetry\u201d, \u201cconsistency\u201d, \u201csimplicity\u201d, or \u201cbeauty\u201d in not applying the limit to every block which might be a way of saying there\u2019s an unknown risk. It seems harder for me to reason that doing it on only 1 block is as safe as doing it on every block. Applying it to every block might be simpler (less risky) code. In testing, the change would occur 2016 times more often, possibly making problems easier to detect. If it\u2019s safe at the transition, it better be safe on every block.</p>\n<p>So the choice is between minimal consensus change (apply only on 2016th block) and adhering to \u201csymmetry\u201d, \u201cconsistency\u201d, \u201cconsistency\u201d, or \u201cbeauty\u201d as a way to prevent problems that are hard to detect or deduce.</p>\n<p>As observational evidence that lack of \u201csymmetry\u201d or \u201cbeauty\u201d is risky in ways that are hard to detect (and therefore the same changes should be applied to every block) I think halvings and difficulty changes not being slowly changed on every block are possibly Satoshi\u2019s biggest mistakes. No alt coin has survived on-off mining when using bitcoin\u2019s difficulty algorithm which means it\u2019s dangerous to bitcoin itself if the fundamental security requirement of non-repurposable hashrate equipment is relaxed or not present, as it is in most alt coins. The halvings are harmful to miners\u2019 investment planning and have caused large price fluctuations that have been brutal to weak hodlers and bitcoin\u2019s reputation in the populace. In both cases Satoshi chose math or code simplicity over \u201csymmetry\u201d or \u201cconsistency\u201d. He should have felt some uneasiness about those decisions despite there not being an error in the calculations. It\u2019s widely known (at least intuitively) that batch processing or fluctuations towards a goal is less efficient than continuous, stable progress.</p>\n<p>The two problems occured but there wasn\u2019t any error in Satoshi\u2019s math. The problem is at a higher level than his objective. I don\u2019t know what problem there could be in this case of changing once per 2016 blocks, but it probably isn\u2019t in the specific objective of preventing attacks, but \u201cexternal\u201d to it. For example, \u201cexternal\u201d code or applications may not have an awareness of something happening every 2016 blocks but depend only on the MPT, which is potentially going to be overridden. So from their point of view, not doing it every block might be a \u201clarger\u201d consensus change.</p>\n<p>If people only look at the difficulty algorithm or timestamp code to deploy or see the effects of this consensus change, it allows  attacks on code that only need to know the MPT. This should be marketed as an MTP change, not a difficulty or timestamp change. Doing it every block seems better in the sense it forces everyone to realize it\u2019s an MTP rule change.</p>\n<p>This argument doesn\u2019t mean \u201cwe might as well use a 2 hr limit\u201d because it allows an easy attack on code that doesn\u2019t update. If some reason the proposed two week limit makes people uneasy, a 1 day limit would be safer than 2 hours.</p>",
  "post_number": 55,
  "post_type": 1,
  "updated_at": "2024-11-27T14:48:15.789Z",
  "reply_count": 0,
  "reply_to_post_number": 54,
  "quote_count": 0,
  "incoming_link_count": 5,
  "reads": 11,
  "readers_count": 10,
  "score": 27.2,
  "yours": false,
  "topic_id": 710,
  "topic_slug": "great-consensus-cleanup-revival",
  "topic_title": "Great Consensus Cleanup Revival",
  "topic_html_title": "Great Consensus Cleanup Revival",
  "category_id": 7,
  "display_username": "Zawy",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 8,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "username": "ajtowns",
    "name": "Anthony Towns",
    "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/417_2.png"
  },
  "bookmarked": false,
  "raw": "TL;DR\nA 2 hr limit on every block enables an easy attack on external applications that don't implement it correctly if the median of past timestamps (MPT ot MTP) is ever more than 2 hours in the past. Applying Murch's timestamp limit to every block appears better than doing it only on the 2016th block because it forces everyone to view it and code it as a change to the MPT consensus rule which will prevent mistakes and attacks if it's viewed as only a \"timestamp\" or \"difficulty\" change. This is because there may be script or code somewhere in the world that is focused on MPT and the developer thinks the change only affects timestamp or the difficulty.\n\nI called the 2 hr limit on every block the \"safest and easiest\" option, but I need to retract that due to 2 hour being too small. It changes the MPT consensus rule that a lot of software depends on by overriding it if a timestamp >2 hr in the past occurs and if the MPT is even further in the past. It enables an easy malicious attack on all software that doesn't implement the rule change. A single miner only needs to use a timestamp >2 hrs in the past if the MTP happens to be more than that.\n\nThe general rule is that if you make a consensus rule change, make it as small as possible. This is what Murch's fix does (timestamps at 2016th block can't older than the 1st block), but there's a lack of \"symmetry\", \"consistency\", \"simplicity\", or \"beauty\" in not applying the limit to every block which might be a way of saying there's an unknown risk. It seems harder for me to reason that doing it on only 1 block is as safe as doing it on every block. Applying it to every block might be simpler (less risky) code. In testing, the change would occur 2016 times more often, possibly making problems easier to detect. If it's safe at the transition, it better be safe on every block. \n\nSo the choice is between minimal consensus change (apply only on 2016th block) and adhering to \"symmetry\", \"consistency\", \"consistency\", or \"beauty\" as a way to prevent problems that are hard to detect or deduce. \n\nAs observational evidence that lack of \"symmetry\" or \"beauty\" is risky in ways that are hard to detect (and therefore the same changes should be applied to every block) I think halvings and difficulty changes not being slowly changed on every block are possibly Satoshi's biggest mistakes. No alt coin has survived on-off mining when using bitcoin's difficulty algorithm which means it's dangerous to bitcoin itself if the fundamental security requirement of non-repurposable hashrate equipment is relaxed or not present, as it is in most alt coins. The halvings are harmful to miners' investment planning and have caused large price fluctuations that have been brutal to weak hodlers and bitcoin's reputation in the populace. In both cases Satoshi chose math or code simplicity over \"symmetry\" or \"consistency\". He should have felt some uneasiness about those decisions despite there not being an error in the calculations. It's widely known (at least intuitively) that batch processing or fluctuations towards a goal is less efficient than continuous, stable progress.\n\nThe two problems occured but there wasn't any error in Satoshi's math. The problem is at a higher level than his objective. I don't know what problem there could be in this case of changing once per 2016 blocks, but it probably isn't in the specific objective of preventing attacks, but \"external\" to it. For example, \"external\" code or applications may not have an awareness of something happening every 2016 blocks but depend only on the MPT, which is potentially going to be overridden. So from their point of view, not doing it every block might be a \"larger\" consensus change.\n\nIf people only look at the difficulty algorithm or timestamp code to deploy or see the effects of this consensus change, it allows  attacks on code that only need to know the MPT. This should be marketed as an MTP change, not a difficulty or timestamp change. Doing it every block seems better in the sense it forces everyone to realize it's an MTP rule change.\n\nThis argument doesn't mean \"we might as well use a 2 hr limit\" because it allows an easy attack on code that doesn't update. If some reason the proposed two week limit makes people uneasy, a 1 day limit would be safer than 2 hours.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 502,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}