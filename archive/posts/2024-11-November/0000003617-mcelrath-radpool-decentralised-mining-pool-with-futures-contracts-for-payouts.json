{
  "id": 3617,
  "name": "Bob McElrath",
  "username": "mcelrath",
  "avatar_template": "/user_avatar/delvingbitcoin.org/mcelrath/{size}/521_2.png",
  "created_at": "2024-11-27T16:30:28.615Z",
  "cooked": "<p>Some comments on this proposal.</p>\n<p>TL;DR: The differences between this <a href=\"https://radpool.xyz\" rel=\"noopener nofollow ugc\">Radpool proposal</a> and my <a href=\"https://github.com/braidpool/braidpool/blob/9fe685d2ea027814cec6766d1b27284fd17ea880/docs/braidpool_spec.md\" rel=\"noopener nofollow ugc\">Braidpool proposal</a> are:</p>\n<ol>\n<li>The use of a fixed FROST signing federation (radpool) instead of a dynamic one (braidpool).</li>\n<li>Having the FROST federation be composed of share-buying entities (radpool) instead of miners (braidpool).</li>\n<li>Having share-buyers in control of block templates (radpool) instead of miners (braidpool)</li>\n</ol>\n<p>Everything else is identical. Kulpreet has been working on FROST signing and I have been working on the Braid accounting and payouts. I don\u2019t see any reason that this can\u2019t be one project. At any rate I intend to keep working with Kulpreet and use his FROST code for Braidpool\u2019s dynamic federation.</p>\n<p>In more detail:</p>\n<ol>\n<li>Using a syndicate of MSPs will result in a highly political process around allowing MSPs into the signing federation. By comparison, Braidpool will use an open dynamic federation composed of miners who have recently won blocks.</li>\n<li>Since MSPs decide block templates, this presents a smaller number of entities to attack for those that want to censor transactions. Furthermore the profit motive for constructing block templates is poor \u2013 most jurisdictions make it legally risky to perform this task, which is why OCEAN and Braidpool move block template selection to the edges (individual miners) maximizing the number of entities that must be attacked to accomplish censorship. Block template creation is not logically related to participating in the financialization of mining. Note that attempting to censor in this way is a mis-application of laws intended for banks which have three functions they perform that Bitcoin miners, nodes, and MSPs fundamentally cannot: beneficial party identification, transaction blocking, and asset seizure. We should be simultaneously lobbying against this mis-application of laws. Centralizing around MSPs will result in the same situation as currently happens in Ethereum: there will be two types of block producers, \u201ccompliant\u201d and \u201cMEV\u201d, neither of which we want. Share buying is a logically distinct operation from block template construction and I don\u2019t find it necessary or desirable to conflate the two. Today\u2019s centralized pools are already conflated share-buyers and block-template-deciders and we know what that looks like.</li>\n<li>The use of PPLNS implies significantly higher variance than Braidpool, depending on N. One can regard Braidpool as PPLNS with N=2016 (the fixed difficulty adjustment window) which enables simple pricing of hashrate derivatives. With any other PPLNS scheme such as used by OCEAN (N=8) or Radpool, pricing and trading of options and future (share transfer to a risk-taker) is significantly muddied since different shares within the same difficulty adjustment window will have a different price. This incentivizes pool hopping \u2013 switch to Radpool or OCEAN when the share price is high and switch away when the pool\u2019s luck drops. It also makes the creation of standardized derivatives markets nearly impossible.</li>\n<li>The share accounting system was not described. Braidpool will provide this in its DAG. If these end up being separate projects, I invite Radpool to use it.</li>\n</ol>\n<p>But some praise:</p>\n<ol>\n<li>I think using DLC\u2019s for share buying is a good idea and have been investigating it for Braidpool too, to emulate FPPS.</li>\n<li>Even if <a class=\"mention\" href=\"/u/jungly\">@jungly</a> wants to pursue this as a separate project from Braidpool, I think much of the FROST signing federation code and possibly share accounting (if he wants to put them in a braid) can be shared. I\u2019d rather have two decentralized mining pool projects than zero and I will finish Braidpool.</li>\n</ol>\n<p>I don\u2019t know why <a class=\"mention\" href=\"/u/jungly\">@jungly</a> proposed a separate project, but I think a big part of his motivation is that he thinks miners won\u2019t want to run Bitcoin or Braidpool nodes. I\u2019ve heard both opinions from miners (that running Bitcoin nodes is not a problem and \u201ctoo hard\u201d). Time will tell but I think this is important to move block template selection to the edges and OCEAN is seeing success with DATUM.</p>\n<p>Finally let me correct some misconceptions:</p>\n<p>\u201cBraidpool\u2019s UHPO model is an example where a miner needs permission from a threshold of miners to exit with their payout.\u201d \u2013 Braidpool will not require permission to exit. All shares will be paid automatically at the end of a difficulty adjustment window and any miner in the network can broadcast this transaction. The rules around the resulting UHPO transaction are decided by consensus and proportional distribution of BTC according to submitted shares. If the pool fails to sign an Eltoo update or UHPO update, the last known-good set of payouts is already signed and can be broadcast by any miner. From that point on any hashrate pointed at the pool will fall back to solo mining.</p>\n<p>The scale of Kaspa relative to the number of nodes on Bitcoin is not a valid comparison. This has to do with the desirability Kaspa as an asset, not the scaling constraints of their consensus protocol.</p>\n<p>The security model of FROST signing proposed in Radpool is identical to what I proposed for Braidpool. Signing nodes are connected point-to-point by revealing their (encrypted) IP information to other miners in the signing federation (but not to anyone else). Thus all the security proofs for FROST hold.</p>\n<p>Finally finally, there are fundamentally two different kinds of entities involved in the FROST federation: miners and share-buyers. In the presence of both, it doesn\u2019t make sense for the signing federation to be composed entirely of one or the other. Miners shouldn\u2019t be in full control of whether their contracts settle and neither should the share buyers. Therefore the logical conclusion is that the signing federation should be composed of BOTH, with miners represented by their hashrate, and share-buyers by their locked financial commitment, proportionally. I will modify the Braidpool proposal to include both. Likely using DLC\u2019s.</p>\n<p>Lastly, if you\u2019re interested in either, please <a href=\"https://developer.blockchaincommons.com/frost/\" rel=\"noopener nofollow ugc\">join the Blockchain Commons meeting on Dec 4</a> to hear Kulpreet talk about his FROST federation!</p>\n<p>Cheers,\n\u2013 Bob</p>",
  "post_number": 3,
  "post_type": 1,
  "updated_at": "2024-11-27T16:35:31.060Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 11,
  "reads": 9,
  "readers_count": 8,
  "score": 56.6,
  "yours": false,
  "topic_id": 1262,
  "topic_slug": "radpool-decentralised-mining-pool-with-futures-contracts-for-payouts",
  "topic_title": "Radpool: Decentralised Mining Pool With Futures Contracts For Payouts",
  "topic_html_title": "Radpool: Decentralised Mining Pool With Futures Contracts For Payouts",
  "category_id": 7,
  "display_username": "Bob McElrath",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Some comments on this proposal.\n\nTL;DR: The differences between this [Radpool proposal](https://radpool.xyz) and my [Braidpool proposal](https://github.com/braidpool/braidpool/blob/9fe685d2ea027814cec6766d1b27284fd17ea880/docs/braidpool_spec.md) are:\n1. The use of a fixed FROST signing federation (radpool) instead of a dynamic one (braidpool).\n2. Having the FROST federation be composed of share-buying entities (radpool) instead of miners (braidpool).\n3. Having share-buyers in control of block templates (radpool) instead of miners (braidpool)\n\nEverything else is identical. Kulpreet has been working on FROST signing and I have been working on the Braid accounting and payouts. I don't see any reason that this can't be one project. At any rate I intend to keep working with Kulpreet and use his FROST code for Braidpool's dynamic federation.\n\nIn more detail:\n\n1. Using a syndicate of MSPs will result in a highly political process around allowing MSPs into the signing federation. By comparison, Braidpool will use an open dynamic federation composed of miners who have recently won blocks.\n2. Since MSPs decide block templates, this presents a smaller number of entities to attack for those that want to censor transactions. Furthermore the profit motive for constructing block templates is poor -- most jurisdictions make it legally risky to perform this task, which is why OCEAN and Braidpool move block template selection to the edges (individual miners) maximizing the number of entities that must be attacked to accomplish censorship. Block template creation is not logically related to participating in the financialization of mining. Note that attempting to censor in this way is a mis-application of laws intended for banks which have three functions they perform that Bitcoin miners, nodes, and MSPs fundamentally cannot: beneficial party identification, transaction blocking, and asset seizure. We should be simultaneously lobbying against this mis-application of laws. Centralizing around MSPs will result in the same situation as currently happens in Ethereum: there will be two types of block producers, \"compliant\" and \"MEV\", neither of which we want. Share buying is a logically distinct operation from block template construction and I don't find it necessary or desirable to conflate the two. Today's centralized pools are already conflated share-buyers and block-template-deciders and we know what that looks like.\n3. The use of PPLNS implies significantly higher variance than Braidpool, depending on N. One can regard Braidpool as PPLNS with N=2016 (the fixed difficulty adjustment window) which enables simple pricing of hashrate derivatives. With any other PPLNS scheme such as used by OCEAN (N=8) or Radpool, pricing and trading of options and future (share transfer to a risk-taker) is significantly muddied since different shares within the same difficulty adjustment window will have a different price. This incentivizes pool hopping -- switch to Radpool or OCEAN when the share price is high and switch away when the pool's luck drops. It also makes the creation of standardized derivatives markets nearly impossible.\n4. The share accounting system was not described. Braidpool will provide this in its DAG. If these end up being separate projects, I invite Radpool to use it.\n\nBut some praise:\n1. I think using DLC's for share buying is a good idea and have been investigating it for Braidpool too, to emulate FPPS. \n2. Even if @jungly wants to pursue this as a separate project from Braidpool, I think much of the FROST signing federation code and possibly share accounting (if he wants to put them in a braid) can be shared. I'd rather have two decentralized mining pool projects than zero and I will finish Braidpool.\n\nI don't know why @jungly proposed a separate project, but I think a big part of his motivation is that he thinks miners won't want to run Bitcoin or Braidpool nodes. I've heard both opinions from miners (that running Bitcoin nodes is not a problem and \"too hard\"). Time will tell but I think this is important to move block template selection to the edges and OCEAN is seeing success with DATUM.\n\nFinally let me correct some misconceptions:\n\n\"Braidpool\u2019s UHPO model is an example where a miner needs permission from a threshold of miners to exit with their payout.\" -- Braidpool will not require permission to exit. All shares will be paid automatically at the end of a difficulty adjustment window and any miner in the network can broadcast this transaction. The rules around the resulting UHPO transaction are decided by consensus and proportional distribution of BTC according to submitted shares. If the pool fails to sign an Eltoo update or UHPO update, the last known-good set of payouts is already signed and can be broadcast by any miner. From that point on any hashrate pointed at the pool will fall back to solo mining.\n\nThe scale of Kaspa relative to the number of nodes on Bitcoin is not a valid comparison. This has to do with the desirability Kaspa as an asset, not the scaling constraints of their consensus protocol.\n\nThe security model of FROST signing proposed in Radpool is identical to what I proposed for Braidpool. Signing nodes are connected point-to-point by revealing their (encrypted) IP information to other miners in the signing federation (but not to anyone else). Thus all the security proofs for FROST hold.\n\nFinally finally, there are fundamentally two different kinds of entities involved in the FROST federation: miners and share-buyers. In the presence of both, it doesn't make sense for the signing federation to be composed entirely of one or the other. Miners shouldn't be in full control of whether their contracts settle and neither should the share buyers. Therefore the logical conclusion is that the signing federation should be composed of BOTH, with miners represented by their hashrate, and share-buyers by their locked financial commitment, proportionally. I will modify the Braidpool proposal to include both. Likely using DLC's.\n\nLastly, if you're interested in either, please [join the Blockchain Commons meeting on Dec 4](https://developer.blockchaincommons.com/frost/) to hear Kulpreet talk about his FROST federation!\n\nCheers,\n-- Bob",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 406,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": "Github link was replaced with a permanent link",
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}