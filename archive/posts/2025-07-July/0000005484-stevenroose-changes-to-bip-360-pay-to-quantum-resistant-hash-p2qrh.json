{
  "id": 5484,
  "name": "Steven Roose",
  "username": "stevenroose",
  "avatar_template": "/user_avatar/delvingbitcoin.org/stevenroose/{size}/1087_2.png",
  "created_at": "2025-07-15T15:09:55.489Z",
  "cooked": "<p><a class=\"mention\" href=\"/u/sipa\">@sipa</a> How about a simple taproot v2 where you still commit to a 32-byte output, where you can do regular taproot spend (sign with output key or proof MAST tweak), or if you can simply show the MAST root as the preimage of the output.</p>\n<p>This obviously wouldn\u2019t work in the context of eliminating EC for quantum-resistance, but I have often wondered why taproot didn\u2019t include this option. Is such an idea broken in some way that I\u2019m not seeing? It relies on both no one being able to sign for an arbitrary 32-byte SHA256 output and no one knowing the SHA256 preimage of a public key.</p>\n<p>The privacy aspect I think would be identical for cases where a keyspend is not present.</p>",
  "post_number": 14,
  "post_type": 1,
  "posts_count": 14,
  "updated_at": "2025-07-15T15:09:55.489Z",
  "reply_count": 1,
  "reply_to_post_number": 11,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 4,
  "readers_count": 3,
  "score": 5.8,
  "yours": false,
  "topic_id": 1811,
  "topic_slug": "changes-to-bip-360-pay-to-quantum-resistant-hash-p2qrh",
  "topic_title": "Changes to BIP-360 - Pay to Quantum Resistant Hash (P2QRH)",
  "topic_html_title": "Changes to BIP-360 - Pay to Quantum Resistant Hash (P2QRH)",
  "category_id": 7,
  "display_username": "Steven Roose",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "id": 96,
    "username": "sipa",
    "name": "Pieter Wuille",
    "avatar_template": "/user_avatar/delvingbitcoin.org/sipa/{size}/1100_2.png"
  },
  "bookmarked": false,
  "raw": "@sipa How about a simple taproot v2 where you still commit to a 32-byte output, where you can do regular taproot spend (sign with output key or proof MAST tweak), or if you can simply show the MAST root as the preimage of the output.\n\nThis obviously wouldn't work in the context of eliminating EC for quantum-resistance, but I have often wondered why taproot didn't include this option. Is such an idea broken in some way that I'm not seeing? It relies on both no one being able to sign for an arbitrary 32-byte SHA256 output and no one knowing the SHA256 preimage of a public key.\n\nThe privacy aspect I think would be identical for cases where a keyspend is not present.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 76,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "<a class=\"mention\" href=\"/u/sipa\">@sipa</a> How about a simple taproot v2 where you still commit to a 32-byte output, where you can do regular taproot spend (sign with output key or proof MAST tweak), or if you can simply show the MAST root as the preimage of the output. \nThis obviously wouldn\u2019t work in the context of eliminating EC for&hellip;",
  "truncated": true,
  "post_url": "/t/changes-to-bip-360-pay-to-quantum-resistant-hash-p2qrh/1811/14",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}