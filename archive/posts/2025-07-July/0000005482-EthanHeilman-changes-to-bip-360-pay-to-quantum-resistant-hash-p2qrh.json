{
  "id": 5482,
  "name": "Ethan Heilman",
  "username": "EthanHeilman",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ethanheilman/{size}/328_2.png",
  "created_at": "2025-07-15T14:48:49.506Z",
  "cooked": "<blockquote>\n<p>From my understanding the main reason of using version 3 is the fact that in order to re-use version 2 you need a different payload size, while your size is exactly 256 bits</p>\n</blockquote>\n<p>I haven\u2019t heard this before. I can only speak for myself, but that was not a consideration. Can you provide more details about this?</p>\n<p>The motivation, as far as I am aware, was to take an opinionated stance that SegWit versions should not be used in order. Rather they should be used to signal the type of output in an address. So in theory P2QRH might use SegWit version 3 for \u201cbc1(r)\u201d, then later another output might use SigWit version 2 to \u201cbc1(z)\u201d for say a (z)ero knowledge output). That is we are not using SegWit versions as incrementing version numbers, but are disregarding the numeric order to use them as flags.</p>\n<p>It is worth having a conversation about if this is the right way to use SegWit versions. If the community is strongly against it, then I\u2019d personally rather have P2QRH than Segwit version based output flagging.</p>\n<p>My argument in favor of output flagging is as follows: Having SegWit versions used out of order is mildly confusing for new bitcoin-core developers, but reduces user error. My philosophy is, outside of extreme examples, to always take the trade-off in favor of usability.</p>\n<p>I\u2019d classify arguments against into three categories:</p>\n<ul>\n<li>There is a technical reason SegWit versions must increment that Ethan missed.</li>\n<li>There is no net usability benefit or the complexity is too high for bitcoin-core.</li>\n<li>There isn\u2019t enough support in the community for idea of using SegWit versions as flags and it holds up agreement on BIP-360.</li>\n</ul>",
  "post_number": 13,
  "post_type": 1,
  "posts_count": 14,
  "updated_at": "2025-07-15T14:48:49.506Z",
  "reply_count": 0,
  "reply_to_post_number": 12,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 15,
  "readers_count": 14,
  "score": 2.8,
  "yours": false,
  "topic_id": 1811,
  "topic_slug": "changes-to-bip-360-pay-to-quantum-resistant-hash-p2qrh",
  "topic_title": "Changes to BIP-360 - Pay to Quantum Resistant Hash (P2QRH)",
  "topic_html_title": "Changes to BIP-360 - Pay to Quantum Resistant Hash (P2QRH)",
  "category_id": 7,
  "display_username": "Ethan Heilman",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "id": 482,
    "username": "dr-orlovsky",
    "name": "Dr. Maxim Orlovsky",
    "avatar_template": "/user_avatar/delvingbitcoin.org/dr-orlovsky/{size}/677_2.png"
  },
  "bookmarked": false,
  "raw": "> From my understanding the main reason of using version 3 is the fact that in order to re-use version 2 you need a different payload size, while your size is exactly 256 bits\n\nI haven't heard this before. I can only speak for myself, but that was not a consideration. Can you provide more details about this?\n\nThe motivation, as far as I am aware, was to take an opinionated stance that SegWit versions should not be used in order. Rather they should be used to signal the type of output in an address. So in theory P2QRH might use SegWit version 3 for \"bc1(r)\", then later another output might use SigWit version 2 to \"bc1(z)\" for say a (z)ero knowledge output). That is we are not using SegWit versions as incrementing version numbers, but are disregarding the numeric order to use them as flags.\n\nIt is worth having a conversation about if this is the right way to use SegWit versions. If the community is strongly against it, then I'd personally rather have P2QRH than Segwit version based output flagging. \n\nMy argument in favor of output flagging is as follows: Having SegWit versions used out of order is mildly confusing for new bitcoin-core developers, but reduces user error. My philosophy is, outside of extreme examples, to always take the trade-off in favor of usability.\n\nI'd classify arguments against into three categories:\n- There is a technical reason SegWit versions must increment that Ethan missed.\n- There is no net usability benefit or the complexity is too high for bitcoin-core.\n- There isn't enough support in the community for idea of using SegWit versions as flags and it holds up agreement on BIP-360.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 267,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "From my understanding the main reason of using version 3 is the fact that in order to re-use version 2 you need a different payload size, while your size is exactly 256 bits \n\nI haven\u2019t heard this before. I can only speak for myself, but that was not a consideration. Can you provide more details ab&hellip;",
  "truncated": true,
  "post_url": "/t/changes-to-bip-360-pay-to-quantum-resistant-hash-p2qrh/1811/13",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}