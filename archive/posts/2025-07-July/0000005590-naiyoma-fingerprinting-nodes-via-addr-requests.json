{
  "id": 5590,
  "name": "Naiyoma",
  "username": "naiyoma",
  "avatar_template": "/user_avatar/delvingbitcoin.org/naiyoma/{size}/1285_2.png",
  "created_at": "2025-07-29T07:34:49.913Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"danielabrozzoni\" data-post=\"1\" data-topic=\"1786\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/danielabrozzoni/48/1300_2.png\" class=\"avatar\"> danielabrozzoni:</div>\n<blockquote>\n<h2>Randomizing timestamps</h2>\n</blockquote>\n</aside>\n<p>This would work; however, it would make new addresses appear older and therefore at risk of being marked as Terrible more quickly. Another issue is that we can\u2019t be completely sure an attacker wouldn\u2019t try to defuzz these timestamps</p>\n<p>While fuzzing introduces obfuscation by adding bounded noise (within a \u00b1\ud835\udeff window), it does not guarantee unlinkability. This makes exact reconstruction difficult, but not entirely impossible.</p>\n<p>Given enough fuzzed samples and knowledge of the fuzzing parameters (e.g., distribution and bounds), an attacker could use statistical techniques\u2014such as maximum likelihood estimation (MLE), clustering, or Bayesian inference\u2014to:</p>\n<ul>\n<li>\n<p>Estimate the original (pre-fuzzed) values,</p>\n</li>\n<li>\n<p>Determine whether two fuzzed values likely originated from the same or similar source.</p>\n</li>\n</ul>\n<p>Even when fuzzing is applied uniformly and independently, correlations between original values can still leak through the noise.</p>\n<p>I\u2019m curious if anyone has thoughts or ideas on how realistic or effective defuzzing might be in practice?</p>",
  "post_number": 11,
  "post_type": 1,
  "posts_count": 11,
  "updated_at": "2025-07-29T07:34:49.913Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 15,
  "readers_count": 14,
  "score": 2.0,
  "yours": false,
  "topic_id": 1786,
  "topic_slug": "fingerprinting-nodes-via-addr-requests",
  "topic_title": "Fingerprinting nodes via addr requests",
  "topic_html_title": "Fingerprinting nodes via addr requests",
  "category_id": 7,
  "display_username": "Naiyoma",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": "",
  "bookmarked": false,
  "raw": "[quote=\"danielabrozzoni, post:1, topic:1786\"]\n## Randomizing timestamps\n[/quote]\n\nThis would work; however, it would make new addresses appear older and therefore at risk of being marked as Terrible more quickly. Another issue is that we can't be completely sure an attacker wouldn\u2019t try to defuzz these timestamps\n\nWhile fuzzing introduces obfuscation by adding bounded noise (within a \u00b1\ud835\udeff window), it does not guarantee unlinkability. This makes exact reconstruction difficult, but not entirely impossible.\n\nGiven enough fuzzed samples and knowledge of the fuzzing parameters (e.g., distribution and bounds), an attacker could use statistical techniques\u2014such as maximum likelihood estimation (MLE), clustering, or Bayesian inference\u2014to:\n\n* Estimate the original (pre-fuzzed) values,\n\n* Determine whether two fuzzed values likely originated from the same or similar source.\n\nEven when fuzzing is applied uniformly and independently, correlations between original values can still leak through the noise.\n\nI'm curious if anyone has thoughts or ideas on how realistic or effective defuzzing might be in practice?",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 156,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "This would work; however, it would make new addresses appear older and therefore at risk of being marked as Terrible more quickly. Another issue is that we can\u2019t be completely sure an attacker wouldn\u2019t try to defuzz these timestamps \nWhile fuzzing introduces obfuscation by adding bounded noise (wit&hellip;",
  "truncated": true,
  "post_url": "/t/fingerprinting-nodes-via-addr-requests/1786/11",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}