{
  "id": 5384,
  "name": "Matt Corallo",
  "username": "MattCorallo",
  "avatar_template": "/letter_avatar_proxy/v4/letter/m/e47c2d/{size}.png",
  "created_at": "2025-07-01T12:55:02.045Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"roasbeef\" data-post=\"4\" data-topic=\"1799\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/roasbeef/48/160_2.png\" class=\"avatar\"> roasbeef:</div>\n<blockquote>\n<p>Peers would be free to <em>reject</em> an attempt to create an onion link if the requesting peer doesn\u2019t already have a channel with the responding node.</p>\n<p><em>Requiring</em> that a channel already exists doesn\u2019t necessarily provide DoS protection. It just increases the cost to creating an onion link. The onion link establishment protocol sketched out in the OP can be extended to require an upfront payment, require presenting a UTXO provably locked to a future time, stream funds to maintain link uptime, etc.</p>\n</blockquote>\n</aside>\n<p>So what you\u2019re saying is that in practice your proposal wouldn\u2019t change the network topology at all? What\u2019s the point, then?</p>\n<aside class=\"quote no-group\" data-username=\"roasbeef\" data-post=\"4\" data-topic=\"1799\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/roasbeef/48/160_2.png\" class=\"avatar\"> roasbeef:</div>\n<blockquote>\n<p>That mandates that the same TCP connection be used? Can you point to where this is explicitly outlined? I can find no text that discusses anything of the sort. Minimally, it would need to select/dictate a new port. Implicitly, after BOLT 1, all p2p interaction is assumed to take place over a single port.</p>\n</blockquote>\n</aside>\n<p>The spec doesn\u2019t say that it has to be on the same connection, which implies that nodes are free to do whatever they want. Nodes today may restrict peers to a single connection with the same pubkey, but that doesn\u2019t mean its banned? Also, there\u2019s no need for a separate port for this? You can just open a second connection on the same port.</p>\n<aside class=\"quote no-group\" data-username=\"roasbeef\" data-post=\"4\" data-topic=\"1799\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/roasbeef/48/160_2.png\" class=\"avatar\"> roasbeef:</div>\n<blockquote>\n<p>Can you describe such active queue management? Last time I asked about how clients handle active queue management (BOLT issue where I brought up QUIC), the responses were all something along the lines of \u201cwe make sure not to send too much\u201d. Which is a writer side heuristic, rather than a reader side queue management.</p>\n</blockquote>\n</aside>\n<p>Yes, TCP is all about applying backpressure from an application through to the sender to ensure the sender can do these things without making the recipient unable to respond. You don\u2019t need receiver-size queue management if the sender is handling TCP correctly :).</p>\n<aside class=\"quote no-group\" data-username=\"roasbeef\" data-post=\"4\" data-topic=\"1799\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/roasbeef/48/160_2.png\" class=\"avatar\"> roasbeef:</div>\n<blockquote>\n<p>No matter what type of active queue management takes place, a single global TCP connection for all p2p messages will <em>still</em> run into head-of-line blocking.</p>\n</blockquote>\n</aside>\n<p>Sure, but if you don\u2019t send too much the head-of-line blocking isn\u2019t going to slow down channel operations. Head-of-line blocking isn\u2019t some death curse, for a long-lived connection where we\u2019re processing messages fairly quickly (basically all lightning messages are <em>super</em> quick to process) its not gonna materially impact latency. The web has major head-of-line blocking issues because they can\u2019t open parallel connections (due to slowstart, which isn\u2019t an issue for us) nor signal (in practice) which resources are needed urgently and which won\u2019t impact pageload.</p>",
  "post_number": 6,
  "post_type": 1,
  "posts_count": 8,
  "updated_at": "2025-07-01T12:55:02.045Z",
  "reply_count": 1,
  "reply_to_post_number": 4,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 12,
  "readers_count": 11,
  "score": 7.4,
  "yours": false,
  "topic_id": 1799,
  "topic_slug": "reimagining-onion-messages-as-an-overlay-layer",
  "topic_title": "Reimagining Onion Messages as an Overlay Layer",
  "topic_html_title": "Reimagining Onion Messages as an Overlay Layer",
  "category_id": 7,
  "display_username": "Matt Corallo",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"roasbeef, post:4, topic:1799\"]\nPeers would be free to *reject* an attempt to create an onion link if the requesting peer doesn\u2019t already have a channel with the responding node.\n\n*Requiring* that a channel already exists doesn\u2019t necessarily provide DoS protection. It just increases the cost to creating an onion link. The onion link establishment protocol sketched out in the OP can be extended to require an upfront payment, require presenting a UTXO provably locked to a future time, stream funds to maintain link uptime, etc.\n[/quote]\n\nSo what you're saying is that in practice your proposal wouldn't change the network topology at all? What's the point, then?\n\n[quote=\"roasbeef, post:4, topic:1799\"]\nThat mandates that the same TCP connection be used? Can you point to where this is explicitly outlined? I can find no text that discusses anything of the sort. Minimally, it would need to select/dictate a new port. Implicitly, after BOLT 1, all p2p interaction is assumed to take place over a single port.\n[/quote]\n\nThe spec doesn't say that it has to be on the same connection, which implies that nodes are free to do whatever they want. Nodes today may restrict peers to a single connection with the same pubkey, but that doesn't mean its banned? Also, there's no need for a separate port for this? You can just open a second connection on the same port.\n\n[quote=\"roasbeef, post:4, topic:1799\"]\nCan you describe such active queue management? Last time I asked about how clients handle active queue management (BOLT issue where I brought up QUIC), the responses were all something along the lines of \u201cwe make sure not to send too much\u201d. Which is a writer side heuristic, rather than a reader side queue management.\n[/quote]\n\nYes, TCP is all about applying backpressure from an application through to the sender to ensure the sender can do these things without making the recipient unable to respond. You don't need receiver-size queue management if the sender is handling TCP correctly :).\n\n[quote=\"roasbeef, post:4, topic:1799\"]\nNo matter what type of active queue management takes place, a single global TCP connection for all p2p messages will *still* run into head-of-line blocking.\n[/quote]\n\nSure, but if you don't send too much the head-of-line blocking isn't going to slow down channel operations. Head-of-line blocking isn't some death curse, for a long-lived connection where we're processing messages fairly quickly (basically all lightning messages are *super* quick to process) its not gonna materially impact latency. The web has major head-of-line blocking issues because they can't open parallel connections (due to slowstart, which isn't an issue for us) nor signal (in practice) which resources are needed urgently and which won't impact pageload.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 50,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "So what you\u2019re saying is that in practice your proposal wouldn\u2019t change the network topology at all? What\u2019s the point, then? \n\nThe spec doesn\u2019t say that it has to be on the same connection, which implies that nodes are free to do whatever they want. Nodes today may restrict peers to a single connec&hellip;",
  "truncated": true,
  "post_url": "/t/reimagining-onion-messages-as-an-overlay-layer/1799/6",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}