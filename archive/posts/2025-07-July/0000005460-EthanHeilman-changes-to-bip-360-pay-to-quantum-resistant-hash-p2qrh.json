{
  "id": 5460,
  "name": "Ethan Heilman",
  "username": "EthanHeilman",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ethanheilman/{size}/328_2.png",
  "created_at": "2025-07-14T19:26:29.092Z",
  "cooked": "<p>I like your objections, thanks for posting them. Let me respond to them.</p>\n<blockquote>\n<p>[1] If this proposal is advertised as a solution for the quantum threat, it might not get any attention until that threat exists, which might be never.</p>\n</blockquote>\n<p>I would not be working on it if there was not a pressing threat of quantum computers. Is it useful for other things, sure, but that is not the motivation behind this proposal.</p>\n<blockquote>\n<p>[2]  The name \u201cpay-to-quantum-resistant-hash\u201d is confusing as it breaks with the convention of output types, that describe what you\u2019re paying into.</p>\n</blockquote>\n<p>I don\u2019t disagree here. Technically following the naming convention it would be something like P2QRTLRH (pay-to-quantum-resistant-tapleaf-root-hash). That seems too long.</p>\n<p>If everyone wants to activate P2QRH but they want a different name, I would not object. I do worry about the bikeshedding potential of arguing over the exact name before the PR is even merged into the BIPs repo.</p>\n<blockquote>\n<p>[3]  reading the BIP it seems like you\u2019re proposing to re-use SHA256 which in my limited QC understanding is quantum-safe? Can be seen as misleading</p>\n</blockquote>\n<p>SHA256 is quantum-resistant. If SHA256 pre-image security is broken, Bitcoin is in big trouble.</p>\n<blockquote>\n<p>[4] Addresses are to be read by the sender and the sender doesn\u2019t really care if the receiver\u2019s wallet is quantum-resistant. Using letters in the address to convey information also sets a bad UX precedent as they\u2019re not intended to be used that way.</p>\n</blockquote>\n<p>Senders often do care if the receiver has their funds stolen prior to receiving it. Users are also likely to examine their addresses to see if their funds are vulnerable long-exposure attacks, this makes it easier for them to do so.</p>\n<p>Being able to determine the output type via the address is useful and we already do this with bc1\u2026 to tell someone it is a segwit (mainnet) address. I suspect this is a matter of personal taste and I\u2019d be interested in seeing a larger discussion on this question to gauge preferences.</p>\n<blockquote>\n<p>[5] In the scenario where a quantum threat is imminent or already passed and we are in a post-quantum world, I hope we don\u2019t need address letters or output naming for developers to know what outputs they should be using.</p>\n</blockquote>\n<p>I hope the same thing, but wallets are sometimes slow to upgrade and people may be using steel wallets with the address written down. All things being equal, we should choose the option that reduces the chance of user error even if we aren\u2019t sure how big of a chance that is.</p>\n<blockquote>\n<p>[6] Also, in such a world, any additional new feature we add to bitcoin will hopefully also be quantum resistant and I hope we won\u2019t be naming every new output type as \u201cpay to quantum resistant something\u201d. Even other new features might be added before. Will we add OP_QUANTUMRESISTANTTXHASH, OP_CHECKQUANTUMRESISTANTCONTRACTVERIFY, etc?</p>\n</blockquote>\n<p>If we add a new quantum resistant output type after everyone has upgraded their outputs, then it doesn\u2019t really matter anymore. Everyone will have upgraded. We are past the point of danger.</p>\n<p>Any opcodes added via OP_SUCCESSx or tapleaf version would be compatible with P2QRH. I could be wrong, but I am not sure we will need a new output type for sometime.</p>\n<p>What is the benefit of putting in the word QUANTUMRESISTANT in front of new opcodes as you are proposing?</p>\n<blockquote>\n<p>TL;DR: I think pay-to-tapscript is useful outside of the QC context and association with it might delay interest until QC seems more relevant.</p>\n</blockquote>\n<p>I\u2019m curious what you want such an output for? If you don\u2019t care about quantum attacks, use P2TR with a NUMS point. Sure P2QRH would save you 32 bytes in transaction size. What is your use case here?</p>",
  "post_number": 6,
  "post_type": 1,
  "posts_count": 14,
  "updated_at": "2025-07-14T19:35:52.115Z",
  "reply_count": 1,
  "reply_to_post_number": 5,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 18,
  "readers_count": 17,
  "score": 8.6,
  "yours": false,
  "topic_id": 1811,
  "topic_slug": "changes-to-bip-360-pay-to-quantum-resistant-hash-p2qrh",
  "topic_title": "Changes to BIP-360 - Pay to Quantum Resistant Hash (P2QRH)",
  "topic_html_title": "Changes to BIP-360 - Pay to Quantum Resistant Hash (P2QRH)",
  "category_id": 7,
  "display_username": "Ethan Heilman",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "id": 76,
    "username": "stevenroose",
    "name": "Steven Roose",
    "avatar_template": "/user_avatar/delvingbitcoin.org/stevenroose/{size}/1087_2.png"
  },
  "bookmarked": false,
  "raw": "I like your objections, thanks for posting them. Let me respond to them.\n\n>  [1] If this proposal is advertised as a solution for the quantum threat, it might not get any attention until that threat exists, which might be never.\n\nI would not be working on it if there was not a pressing threat of quantum computers. Is it useful for other things, sure, but that is not the motivation behind this proposal.\n\n> [2]  The name \u201cpay-to-quantum-resistant-hash\u201d is confusing as it breaks with the convention of output types, that describe what you\u2019re paying into.\n\nI don't disagree here. Technically following the naming convention it would be something like P2QRTLRH (pay-to-quantum-resistant-tapleaf-root-hash). That seems too long.\n\nIf everyone wants to activate P2QRH but they want a different name, I would not object. I do worry about the bikeshedding potential of arguing over the exact name before the PR is even merged into the BIPs repo.\n\n> [3]  reading the BIP it seems like you\u2019re proposing to re-use SHA256 which in my limited QC understanding is quantum-safe? Can be seen as misleading\n\nSHA256 is quantum-resistant. If SHA256 pre-image security is broken, Bitcoin is in big trouble.\n\n> [4] Addresses are to be read by the sender and the sender doesn\u2019t really care if the receiver\u2019s wallet is quantum-resistant. Using letters in the address to convey information also sets a bad UX precedent as they\u2019re not intended to be used that way.\n\nSenders often do care if the receiver has their funds stolen prior to receiving it. Users are also likely to examine their addresses to see if their funds are vulnerable long-exposure attacks, this makes it easier for them to do so.\n\nBeing able to determine the output type via the address is useful and we already do this with bc1... to tell someone it is a segwit (mainnet) address. I suspect this is a matter of personal taste and I'd be interested in seeing a larger discussion on this question to gauge preferences.\n\n> [5] In the scenario where a quantum threat is imminent or already passed and we are in a post-quantum world, I hope we don\u2019t need address letters or output naming for developers to know what outputs they should be using.\n\nI hope the same thing, but wallets are sometimes slow to upgrade and people may be using steel wallets with the address written down. All things being equal, we should choose the option that reduces the chance of user error even if we aren't sure how big of a chance that is.\n\n> [6] Also, in such a world, any additional new feature we add to bitcoin will hopefully also be quantum resistant and I hope we won\u2019t be naming every new output type as \u201cpay to quantum resistant something\u201d. Even other new features might be added before. Will we add OP_QUANTUMRESISTANTTXHASH, OP_CHECKQUANTUMRESISTANTCONTRACTVERIFY, etc?\n\nIf we add a new quantum resistant output type after everyone has upgraded their outputs, then it doesn't really matter anymore. Everyone will have upgraded. We are past the point of danger. \n\nAny opcodes added via OP_SUCCESSx or tapleaf version would be compatible with P2QRH. I could be wrong, but I am not sure we will need a new output type for sometime.\n\nWhat is the benefit of putting in the word QUANTUMRESISTANT in front of new opcodes as you are proposing? \n\n> TL;DR: I think pay-to-tapscript is useful outside of the QC context and association with it might delay interest until QC seems more relevant.\n\nI'm curious what you want such an output for? If you don't care about quantum attacks, use P2TR with a NUMS point. Sure P2QRH would save you 32 bytes in transaction size. What is your use case here?",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 267,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "I like your objections, thanks for posting them. Let me respond to them. \n\n[1] If this proposal is advertised as a solution for the quantum threat, it might not get any attention until that threat exists, which might be never. \n\nI would not be working on it if there was not a pressing threat of quan&hellip;",
  "truncated": true,
  "post_url": "/t/changes-to-bip-360-pay-to-quantum-resistant-hash-p2qrh/1811/6",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}