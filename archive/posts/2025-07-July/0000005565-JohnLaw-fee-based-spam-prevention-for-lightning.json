{
  "id": 5565,
  "name": null,
  "username": "JohnLaw",
  "avatar_template": "/letter_avatar_proxy/v4/letter/j/58956e/{size}.png",
  "created_at": "2025-07-26T19:36:06.826Z",
  "cooked": "<p>Hi Clara,</p>\n<p>\"\nIf there are 120 slots in the channel, it will cost an attacker 67.2*120 ~ 8k sats to jam it for two weeks?</p>\n<p>Does the this change if the payments the attacker is sending is only 1 sat? Do they need to lock 0.8 sats?\n\"</p>\n<p>Yes, if there are just 120 slots, the Hold Fee charged by one channel for 120 10k-sat payments would just be 8k sats to jam for 2 weeks, and this drops to 0.8 sats for 1-sat payments.\n(I believe BOLT 02 sets max_accepted_htlc to 483, so these values would be about 4 times as much, namely 32k sats for 10k-sat payments and 3.2 sats for 1-sat payments).</p>\n<p>These would be low costs for a successful jamming attack.\nHowever, the Hold Fee isn\u2019t the only fee that is charged.\nThere\u2019s also an Upfront Fee and a Succss Fee.</p>\n<p>The Upfront Fee includes a charge for consuming a slot:</p>\n<p>\"\nThe Upfront Fee pays for:</p>\n<pre><code>the computation and communication costs of routing the payment,. \nthe cost of allocating a Commitment transaction output (\u201cslot\u201d) to the payment,. \nthe cost of allocating channel funds to the payment for the seconds that can be required for a non-delayed payment,. \nthe risk of not fulfilling the HTLC with one\u2019s upstream partner despite one\u2019s downstream partner having fulfilled their HTLC,. \nthe risk of having to pay a Hold Fee (as described below), and. \nthe risk of burning funds (as described below).  \n</code></pre>\n<p>\"</p>\n<p>As long as the per-slot component of the Upfront Fee is set high enough, jamming the slots with 10k-sat (or 1-sat) payments will be expensive enough to compensate the routers for their stranded capital.</p>\n<p>Still, you make an excellent point about the potential to jam a channel for 2 weeks by consuming all of the slots!</p>\n<p>As you noted, the impact of running out of slots lasts the entire time the payment is being routed.\nAs a result, it makes sense to include a charge for consuming a slot as part of the Hold Fee (the per-slot charge within the Upfront Fee can be kept to cover the loss of the slot for a payment that isn\u2019t delayed).</p>\n<p>The simplest way to do this is to make the Hold Fee a function of the time the payment is held and the maximum of:</p>\n<ol>\n<li>the value of the payment, and</li>\n<li>the capital in the channel divided by 483.</li>\n</ol>\n<p>This approach forces the party that causes the delay to pay for the costs that they impose on others, which is the idea behind the fee-based approach.</p>\n<p>An optimization may be to separate the channel\u2019s funds into two channels which are advertised separately. One of these channels would have a small amount of capital and wouuld be devoted to making small payments only. With this optimization, even if each channel charges a Hold Fee that depends on the max of the value of the payment and the capital in the channel divided by 483, the Hold Fee charged for small payments will be low.</p>\n<p>Finally, another approach for routing small payments is to use the OPR protocol (<a href=\"https://github.com/JohnLaw2/ln-opr\" rel=\"noopener nofollow ugc\">https://github.com/JohnLaw2/ln-opr</a>), as it eliminates the potential to delay the payment as well as all on-chain charges for resolving the payment.</p>",
  "post_number": 18,
  "post_type": 1,
  "posts_count": 18,
  "updated_at": "2025-07-26T19:36:06.826Z",
  "reply_count": 0,
  "reply_to_post_number": 17,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 1,
  "readers_count": 0,
  "score": 0.2,
  "yours": false,
  "topic_id": 1524,
  "topic_slug": "fee-based-spam-prevention-for-lightning",
  "topic_title": "Fee-Based Spam Prevention For Lightning",
  "topic_html_title": "Fee-Based Spam Prevention For Lightning",
  "category_id": 7,
  "display_username": null,
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "id": 310,
    "username": "ClaraShk",
    "name": "",
    "avatar_template": "/user_avatar/delvingbitcoin.org/clarashk/{size}/370_2.png"
  },
  "bookmarked": false,
  "raw": "Hi Clara,\n\n\"\nIf there are 120 slots in the channel, it will cost an attacker 67.2*120 ~ 8k sats to jam it for two weeks?\n\nDoes the this change if the payments the attacker is sending is only 1 sat? Do they need to lock 0.8 sats?\n\"\n\nYes, if there are just 120 slots, the Hold Fee charged by one channel for 120 10k-sat payments would just be 8k sats to jam for 2 weeks, and this drops to 0.8 sats for 1-sat payments.\n(I believe BOLT 02 sets max_accepted_htlc to 483, so these values would be about 4 times as much, namely 32k sats for 10k-sat payments and 3.2 sats for 1-sat payments).\n\nThese would be low costs for a successful jamming attack.\nHowever, the Hold Fee isn't the only fee that is charged.\nThere's also an Upfront Fee and a Succss Fee.\n\nThe Upfront Fee includes a charge for consuming a slot:\n\n\"\nThe Upfront Fee pays for:\n\n    the computation and communication costs of routing the payment,. \n    the cost of allocating a Commitment transaction output (\u201cslot\u201d) to the payment,. \n    the cost of allocating channel funds to the payment for the seconds that can be required for a non-delayed payment,. \n    the risk of not fulfilling the HTLC with one\u2019s upstream partner despite one\u2019s downstream partner having fulfilled their HTLC,. \n    the risk of having to pay a Hold Fee (as described below), and. \n    the risk of burning funds (as described below).  \n\"\n\nAs long as the per-slot component of the Upfront Fee is set high enough, jamming the slots with 10k-sat (or 1-sat) payments will be expensive enough to compensate the routers for their stranded capital.\n\nStill, you make an excellent point about the potential to jam a channel for 2 weeks by consuming all of the slots!\n\nAs you noted, the impact of running out of slots lasts the entire time the payment is being routed.\nAs a result, it makes sense to include a charge for consuming a slot as part of the Hold Fee (the per-slot charge within the Upfront Fee can be kept to cover the loss of the slot for a payment that isn't delayed).\n\nThe simplest way to do this is to make the Hold Fee a function of the time the payment is held and the maximum of:\n1) the value of the payment, and\n2) the capital in the channel divided by 483.\n\nThis approach forces the party that causes the delay to pay for the costs that they impose on others, which is the idea behind the fee-based approach.\n\nAn optimization may be to separate the channel's funds into two channels which are advertised separately. One of these channels would have a small amount of capital and wouuld be devoted to making small payments only. With this optimization, even if each channel charges a Hold Fee that depends on the max of the value of the payment and the capital in the channel divided by 483, the Hold Fee charged for small payments will be low.\n\nFinally, another approach for routing small payments is to use the OPR protocol (https://github.com/JohnLaw2/ln-opr), as it eliminates the potential to delay the payment as well as all on-chain charges for resolving the payment.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 279,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Hi Clara, \n&quot;\nIf there are 120 slots in the channel, it will cost an attacker 67.2*120 ~ 8k sats to jam it for two weeks? \nDoes the this change if the payments the attacker is sending is only 1 sat? Do they need to lock 0.8 sats?\n&quot; \nYes, if there are just 120 slots, the Hold Fee charged by one channe&hellip;",
  "truncated": true,
  "post_url": "/t/fee-based-spam-prevention-for-lightning/1524/18",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}