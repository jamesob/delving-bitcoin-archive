{
  "id": 5396,
  "name": "Anthony Towns",
  "username": "ajtowns",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/417_2.png",
  "created_at": "2025-07-02T16:16:16.902Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"zawy\" data-post=\"2\" data-topic=\"1757\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/zawy/48/750_2.png\" class=\"avatar\"> zawy:</div>\n<blockquote>\n<p>If timestamps were required to be within a reasonable +/- 5 seconds plus a 2 second propagation delay (or else the block gets put in \u201ctimeout\u201d for 1 block time to enable PoW to override the timeout if a network partition occurs) then there can\u2019t be a profitable selfish mine</p>\n</blockquote>\n</aside>\n<p>Rather than putting blocks in a ten minute timeout, would it be effective to treat \u201creasonable\u201d timestamps with higher priority \u2013 so that anytime we see a block with a \u201creasonable\u201d timestamp, we request its full data and re-announce it, even if it\u2019s only equal-work to our current tip, and if it\u2019s equal-work and reasonable but our current tip had an \u201cunreasonable\u201d timestamp, we switch our tip to the other block, even though we heard about the other block slightly later?</p>\n<p>\u201cReasonable\u201d could mean <code>abs(now() - header.nTime) &lt; 10s &amp;&amp; (more_work_than_tip || abs(tiptime - header.nTime) &lt; 10s)</code> where now is our current system time, and tiptime is our system time when we received the header for our current tip, that this new block would potentially replace.</p>",
  "post_number": 3,
  "post_type": 1,
  "posts_count": 4,
  "updated_at": "2025-07-02T16:16:16.902Z",
  "reply_count": 1,
  "reply_to_post_number": 2,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 6,
  "readers_count": 5,
  "score": 6.2,
  "yours": false,
  "topic_id": 1757,
  "topic_slug": "where-does-the-33-33-threshold-for-selfish-mining-come-from",
  "topic_title": "Where does the 33.33% threshold for selfish mining come from?",
  "topic_html_title": "Where does the 33.33% threshold for selfish mining come from?",
  "category_id": 7,
  "display_username": "Anthony Towns",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"zawy, post:2, topic:1757\"]\nIf timestamps were required to be within a reasonable +/- 5 seconds plus a 2 second propagation delay (or else the block gets put in \u201ctimeout\u201d for 1 block time to enable PoW to override the timeout if a network partition occurs) then there can\u2019t be a profitable selfish mine\n[/quote]\n\nRather than putting blocks in a ten minute timeout, would it be effective to treat \"reasonable\" timestamps with higher priority -- so that anytime we see a block with a \"reasonable\" timestamp, we request its full data and re-announce it, even if it's only equal-work to our current tip, and if it's equal-work and reasonable but our current tip had an \"unreasonable\" timestamp, we switch our tip to the other block, even though we heard about the other block slightly later?\n\n\"Reasonable\" could mean `abs(now() - header.nTime) < 10s && (more_work_than_tip || abs(tiptime - header.nTime) < 10s)` where now is our current system time, and tiptime is our system time when we received the header for our current tip, that this new block would potentially replace.",
  "actions_summary": [],
  "moderator": true,
  "admin": true,
  "staff": true,
  "user_id": 3,
  "hidden": false,
  "trust_level": 4,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Rather than putting blocks in a ten minute timeout, would it be effective to treat \u201creasonable\u201d timestamps with higher priority \u2013 so that anytime we see a block with a \u201creasonable\u201d timestamp, we request its full data and re-announce it, even if it\u2019s only equal-work to our current tip, and if it\u2019s e&hellip;",
  "truncated": true,
  "post_url": "/t/where-does-the-33-33-threshold-for-selfish-mining-come-from/1757/3",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}