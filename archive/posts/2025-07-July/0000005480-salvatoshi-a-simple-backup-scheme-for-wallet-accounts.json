{
  "id": 5480,
  "name": "salvatoshi",
  "username": "salvatoshi",
  "avatar_template": "/user_avatar/delvingbitcoin.org/salvatoshi/{size}/72_2.png",
  "created_at": "2025-07-15T11:51:22.006Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"dr-orlovsky\" data-post=\"22\" data-topic=\"1607\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/dr-orlovsky/48/677_2.png\" class=\"avatar\"> dr-orlovsky:</div>\n<blockquote>\n<p>I do not like that I need now to keep a secret to get an access to descriptor</p>\n</blockquote>\n</aside>\n<p>In the proposed scheme, indeed you do not need any additional secret (other than your seed/mnenomic). The encryptions of the common secret are part of the backup, not extra secrets to store individually.</p>\n<aside class=\"quote no-group\" data-username=\"pyth\" data-post=\"23\" data-topic=\"1607\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/p/e99b99/48.png\" class=\"avatar\"> pyth:</div>\n<blockquote>\n<p>Let say my Liana policy is <code>or(A, and(thresh(2,B,C,D), older(timelock)))</code> where i\u2019m <code>A</code> and <code>B</code>,<code>C</code>,<code>D</code> are my heirs, I may want to limit the possibility to decrypt the backup only if 2 of my heirs cooperate (or even 2 heirs + a lawyer/ third party).</p>\n<p>In this (particular) case SSS (or any mechanism enforcing a threshold at decrypting) may be useful.</p>\n</blockquote>\n</aside>\n<p>There are certainly possible extensions, as explored by <a class=\"mention\" href=\"/u/josh\">@josh</a> (<a href=\"https://delvingbitcoin.org/t/multisigbackup-com-backup-and-recover-a-k-of-n-descriptor-using-only-n-seeds/1430\">[1]</a> <a href=\"https://delvingbitcoin.org/t/rust-descriptor-encrypt-encrypt-any-descriptor-such-that-only-authorized-spenders-can-decrypt/1750\">[2]</a>). While I think they are neat and interesting, I would be wary of adding complexity to an otherwise very simple scheme, as I think it is likely to hamper adoption. While a library can encapsulate the implementation complexity, it cannot always encapsulate the <em>interface</em>, which is often made more verbose/difficult by the presence of additional features. Interoperability might also be affected if there are optional features.</p>\n<p>In your example, and for most inheritance use cases, the capability of individual heirs to decrypt the backup (even if cooperation is required to actually move the funds) is IMHO unlikely to be problematic in practice.</p>",
  "post_number": 24,
  "post_type": 1,
  "posts_count": 24,
  "updated_at": "2025-07-15T12:06:03.412Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 2,
  "incoming_link_count": 0,
  "reads": 5,
  "readers_count": 4,
  "score": 16.0,
  "yours": false,
  "topic_id": 1607,
  "topic_slug": "a-simple-backup-scheme-for-wallet-accounts",
  "topic_title": "A simple backup scheme for wallet accounts",
  "topic_html_title": "A simple backup scheme for wallet accounts",
  "category_id": 8,
  "display_username": "salvatoshi",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"dr-orlovsky, post:22, topic:1607\"]\nI do not like that I need now to keep a secret to get an access to descriptor\n[/quote]\nIn the proposed scheme, indeed you do not need any additional secret (other than your seed/mnenomic). The encryptions of the common secret are part of the backup, not extra secrets to store individually.\n\n[quote=\"pyth, post:23, topic:1607\"]\nLet say my Liana policy is `or(A, and(thresh(2,B,C,D), older(timelock)))` where i\u2019m `A` and `B`,`C`,`D` are my heirs, I may want to limit the possibility to decrypt the backup only if 2 of my heirs cooperate (or even 2 heirs + a lawyer/ third party).\n\nIn this (particular) case SSS (or any mechanism enforcing a threshold at decrypting) may be useful.\n[/quote]\n\nThere are certainly possible extensions, as explored by @josh ([[1]](https://delvingbitcoin.org/t/multisigbackup-com-backup-and-recover-a-k-of-n-descriptor-using-only-n-seeds/1430) [[2]](https://delvingbitcoin.org/t/rust-descriptor-encrypt-encrypt-any-descriptor-such-that-only-authorized-spenders-can-decrypt/1750)). While I think they are neat and interesting, I would be wary of adding complexity to an otherwise very simple scheme, as I think it is likely to hamper adoption. While a library can encapsulate the implementation complexity, it cannot always encapsulate the *interface*, which is often made more verbose/difficult by the presence of additional features. Interoperability might also be affected if there are optional features.\n\nIn your example, and for most inheritance use cases, the capability of individual heirs to decrypt the backup (even if cooperation is required to actually move the funds) is IMHO unlikely to be problematic in practice.",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 81,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "In the proposed scheme, indeed you do not need any additional secret (other than your seed/mnenomic). The encryptions of the common secret are part of the backup, not extra secrets to store individually. \n\nThere are certainly possible extensions, as explored by <a class=\"mention\" href=\"/u/josh\">@josh</a> (<a href=\"https://delvingbitcoin.org/t/multisigbackup-com-backup-and-recover-a-k-of-n-descriptor-using-only-n-seeds/1430\">[1]</a> <a href=\"https://delvingbitcoin.org/t/rust-descriptor-encrypt-encrypt-any-descriptor-such-that-only-authorized-spenders-can-decrypt/1750\">[2]</a>). While I think they a&hellip;",
  "truncated": true,
  "post_url": "/t/a-simple-backup-scheme-for-wallet-accounts/1607/24",
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false
}