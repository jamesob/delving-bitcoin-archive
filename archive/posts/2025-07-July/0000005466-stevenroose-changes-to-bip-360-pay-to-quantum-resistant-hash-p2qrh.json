{
  "id": 5466,
  "name": "Steven Roose",
  "username": "stevenroose",
  "avatar_template": "/user_avatar/delvingbitcoin.org/stevenroose/{size}/1087_2.png",
  "created_at": "2025-07-15T00:03:39.361Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"EthanHeilman\" data-post=\"6\" data-topic=\"1811\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ethanheilman/48/328_2.png\" class=\"avatar\"> EthanHeilman:</div>\n<blockquote>\n<p>I\u2019m curious what you want such an output for? If you don\u2019t care about quantum attacks, use P2TR with a NUMS point. Sure P2QRH would save you 32 bytes in transaction size. What is your use case here?</p>\n</blockquote>\n</aside>\n<p>Exactly for this. Many second-layer protocols using covenants would not want the key-spend option and hence will be wasting 32 bytes in witness space. Also, primitive CAT-based covenant smart contract would be more easily composed without the need for EC tweaking inside Script. F.e. proving an output is the mast root of 2 scripts is easy CAT+SHA, while proving the same in taproot means needing to do a tweak which currently we can\u2019t.</p>",
  "post_number": 9,
  "post_type": 1,
  "posts_count": 10,
  "updated_at": "2025-07-15T00:03:39.361Z",
  "reply_count": 0,
  "reply_to_post_number": 6,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 1,
  "readers_count": 0,
  "score": 0.2,
  "yours": false,
  "topic_id": 1811,
  "topic_slug": "changes-to-bip-360-pay-to-quantum-resistant-hash-p2qrh",
  "topic_title": "Changes to BIP-360 - Pay to Quantum Resistant Hash (P2QRH)",
  "topic_html_title": "Changes to BIP-360 - Pay to Quantum Resistant Hash (P2QRH)",
  "category_id": 7,
  "display_username": "Steven Roose",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"EthanHeilman, post:6, topic:1811\"]\nI\u2019m curious what you want such an output for? If you don\u2019t care about quantum attacks, use P2TR with a NUMS point. Sure P2QRH would save you 32 bytes in transaction size. What is your use case here?\n[/quote]\n\nExactly for this. Many second-layer protocols using covenants would not want the key-spend option and hence will be wasting 32 bytes in witness space. Also, primitive CAT-based covenant smart contract would be more easily composed without the need for EC tweaking inside Script. F.e. proving an output is the mast root of 2 scripts is easy CAT+SHA, while proving the same in taproot means needing to do a tweak which currently we can't.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 76,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Exactly for this. Many second-layer protocols using covenants would not want the key-spend option and hence will be wasting 32 bytes in witness space. Also, primitive CAT-based covenant smart contract would be more easily composed without the need for EC tweaking inside Script. F.e. proving an outp&hellip;",
  "truncated": true,
  "post_url": "/t/changes-to-bip-360-pay-to-quantum-resistant-hash-p2qrh/1811/9",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}