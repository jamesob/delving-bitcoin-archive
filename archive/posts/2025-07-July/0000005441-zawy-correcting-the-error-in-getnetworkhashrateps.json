{
  "id": 5441,
  "name": "Zawy",
  "username": "zawy",
  "avatar_template": "/user_avatar/delvingbitcoin.org/zawy/{size}/750_2.png",
  "created_at": "2025-07-11T23:53:05.041Z",
  "cooked": "<p>I want to find the relation between chain_work and the lowest_hash (an N=1 situation).  The expected hash for given target is half the target, so a guess is that the \u201ceffective target\u201d for the lifetime of the chain is 2x the lowest hash seen.</p>\n<p><span class=\"math\">\\text{chain_work} = \\frac{2^{256}}{2 \\cdot \\text{lowest_hash}}</span></p>\n<p>This is close for Bitcoin: it\u2019s 2x the actual chain work. Experiment indicates it should be about 3.5x too high, but it varies often from 2x to 7x. I\u2019ve seen 50x too high but none less than 1.8x.</p>\n<p>The problem reminded me of being unable to estimate the expected solvetime (1/\u03bb) from a single solvetime. After playing around with it, it appears they are both based on the exponential distribution:</p>\n<p><span class=\"math\">D = \\frac{2^{256}}{\\text{lowest_hash}} = \\frac{1}{\\lambda}</span></p>\n<p><span class=\"math\">W = \\text{chain_work}</span></p>\n<p><span class=\"math\">\\text{PDF}(W) = \\frac{1}{D} e^{-\\frac{W}{D}}</span></p>\n<p>The histogram of <span class=\"math\">\\frac{W}{D}</span> looks like the exponential PDF, the median of sticks around the expected ln(2), and the mean and StdDev are 1 as expected. In hindsight it seems to be just this:</p>\n<p><span class=\"math\">H = \\text{lifetime effective hashrate}</span></p>\n<p><span class=\"math\">T = \\text{blockchain lifetime}</span></p>\n<p><span class=\"math\">\\text{PDF}(H \\cdot T) = \\frac{1}{D} e^{-\\frac{H \\cdot T}{D}}</span></p>\n<p>But I expected a different value for D as I described at the beginning:</p>\n<p><span class=\"math\">D' = \\frac{2^{256}}{2 \\cdot \\text{lowest_hash}} = \\frac{1}{\\lambda}</span></p>\n<p>My experiments didn\u2019t assume a constant hashrate or difficulty, but that the difficulty was correctly adjusted for the hashrate (i.e. the expected solvetimes were the block time).</p>\n<p>We use the exponential distribution to simulate solvetimes by using the CDF and solving for solvetime.  That equation is the only thing we can know about chain work from the lowest hash.</p>\n<p><span class=\"math\">W = -\\ln(rand(0,1)) \\cdot D</span></p>\n<p>This results in usually seeing <span class=\"math\">\\frac{D}{W}</span> ratios around 12, and often from 5 to 30, when averaged over many trials of many blocks.</p>\n<p>An easy way to estimate of chain_work from lowest hash is to use the 1st equation and realize there can be a lot of variability. About 10% of the time it will be either &gt; 10x too high or &lt; 6x too low.</p>\n<p><span class=\"math\">\\text{chain_work} = \\frac{2^{256}}{2 \\cdot \\text{lowest_hash}}</span></p>",
  "post_number": 16,
  "post_type": 1,
  "posts_count": 15,
  "updated_at": "2025-07-12T00:36:49.039Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 1,
  "readers_count": 0,
  "score": 0.2,
  "yours": false,
  "topic_id": 1745,
  "topic_slug": "correcting-the-error-in-getnetworkhashrateps",
  "topic_title": "Correcting the error in getnetworkhashrateps",
  "topic_html_title": "Correcting the error in getnetworkhashrateps",
  "category_id": 7,
  "display_username": "Zawy",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "I want to find the relation between chain_work and the lowest_hash (an N=1 situation).  The expected hash for given target is half the target, so a guess is that the \"effective target\" for the lifetime of the chain is 2x the lowest hash seen. \n\n$\\text{chain_work} = \\frac{2^{256}}{2 \\cdot \\text{lowest_hash}}$ \n\nThis is close for Bitcoin: it's 2x the actual chain work. Experiment indicates it should be about 3.5x too high, but it varies often from 2x to 7x. I've seen 50x too high but none less than 1.8x. \n\nThe problem reminded me of being unable to estimate the expected solvetime (1/&lambda;) from a single solvetime. After playing around with it, it appears they are both based on the exponential distribution:\n\n$D = \\frac{2^{256}}{\\text{lowest_hash}} = \\frac{1}{\\lambda}$\n\n$W = \\text{chain_work}$\n\n$\\text{PDF}(W) = \\frac{1}{D} e^{-\\frac{W}{D}}$\n\nThe histogram of $\\frac{W}{D}$ looks like the exponential PDF, the median of sticks around the expected ln(2), and the mean and StdDev are 1 as expected. In hindsight it seems to be just this:\n\n$H = \\text{lifetime effective hashrate}$\n\n$T = \\text{blockchain lifetime}$\n\n$\\text{PDF}(H \\cdot T) = \\frac{1}{D} e^{-\\frac{H \\cdot T}{D}}$\n\nBut I expected a different value for D as I described at the beginning:\n\n$D' = \\frac{2^{256}}{2 \\cdot \\text{lowest_hash}} = \\frac{1}{\\lambda}$\n\nMy experiments didn't assume a constant hashrate or difficulty, but that the difficulty was correctly adjusted for the hashrate (i.e. the expected solvetimes were the block time). \n\nWe use the exponential distribution to simulate solvetimes by using the CDF and solving for solvetime.  That equation is the only thing we can know about chain work from the lowest hash. \n\n$W = -\\ln(rand(0,1)) \\cdot D$\n\nThis results in usually seeing $\\frac{D}{W}$ ratios around 12, and often from 5 to 30, when averaged over many trials of many blocks.  \n\nAn easy way to estimate of chain_work from lowest hash is to use the 1st equation and realize there can be a lot of variability. About 10% of the time it will be either > 10x too high or < 6x too low.\n\n$\\text{chain_work} = \\frac{2^{256}}{2 \\cdot \\text{lowest_hash}}$",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 502,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "I want to find the relation between chain_work and the lowest_hash (an N=1 situation).  The expected hash for given target is half the target, so a guess is that the \u201ceffective target\u201d for the lifetime of the chain is 2x the lowest hash seen. \n\\text{chain_work} = \\frac{2^{256}}{2 \\cdot \\text{lowest_&hellip;",
  "truncated": true,
  "post_url": "/t/correcting-the-error-in-getnetworkhashrateps/1745/16",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}