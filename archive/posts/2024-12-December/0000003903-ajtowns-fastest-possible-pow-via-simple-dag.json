{
  "id": 3903,
  "name": "Anthony Towns",
  "username": "ajtowns",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/417_2.png",
  "created_at": "2024-12-31T04:30:09.270Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"zawy\" data-post=\"1\" data-topic=\"1331\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/zawy/48/750_2.png\" class=\"avatar\"> zawy:</div>\n<blockquote>\n<p><code>User chose to use 'a' as the exact latency between every peer.</code></p>\n</blockquote>\n</aside>\n<p>I don\u2019t see how this approach could work in an adversarial environment \u2013 latency isn\u2019t a global constant, it\u2019s something that varies depending on who you\u2019re trying to connect with, and it\u2019s something that you can optimise for simply by colocating.</p>\n<p>If you initially have 100% of hashrate colocated in a single data centre with a latency of 1ms, and then introduce a new miner located on the opposite side of the world with half the original hashrate (so ending up with a 33%/67% split), and a latency of 300ms to the original data centre, how does the difficulty adjust to take this into account? (Presumably increasing from X at 1ms per block, to about 450*X at ~300ms per block with +50% hashrate?) Does this work if the original miner (with 67% hashrate) just ignores all the blocks from the new miner while the new miner\u2019s tip is more than K (6? 100?) blocks\u2019 less work?</p>\n<p>How would this algorithm behave in the interplanetary scenario, where 50% of hashrate is on earth, 50% is on mars, and the latency between the two varies between 3min and 20min?</p>\n<p>If it works, it seems very nifty.</p>",
  "post_number": 4,
  "post_type": 1,
  "posts_count": 21,
  "updated_at": "2024-12-31T04:30:09.270Z",
  "reply_count": 2,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 1,
  "reads": 45,
  "readers_count": 44,
  "score": 24.0,
  "yours": false,
  "topic_id": 1331,
  "topic_slug": "fastest-possible-pow-via-simple-dag",
  "topic_title": "Fastest-possible PoW via Simple DAG",
  "topic_html_title": "Fastest-possible PoW via Simple DAG",
  "category_id": 7,
  "display_username": "Anthony Towns",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"zawy, post:1, topic:1331\"]\n`User chose to use 'a' as the exact latency between every peer.`\n[/quote]\n\nI don't see how this approach could work in an adversarial environment -- latency isn't a global constant, it's something that varies depending on who you're trying to connect with, and it's something that you can optimise for simply by colocating.\n\nIf you initially have 100% of hashrate colocated in a single data centre with a latency of 1ms, and then introduce a new miner located on the opposite side of the world with half the original hashrate (so ending up with a 33%/67% split), and a latency of 300ms to the original data centre, how does the difficulty adjust to take this into account? (Presumably increasing from X at 1ms per block, to about 450*X at ~300ms per block with +50% hashrate?) Does this work if the original miner (with 67% hashrate) just ignores all the blocks from the new miner while the new miner's tip is more than K (6? 100?) blocks' less work?\n\nHow would this algorithm behave in the interplanetary scenario, where 50% of hashrate is on earth, 50% is on mars, and the latency between the two varies between 3min and 20min?\n\nIf it works, it seems very nifty.",
  "actions_summary": [],
  "moderator": true,
  "admin": true,
  "staff": true,
  "user_id": 3,
  "hidden": false,
  "trust_level": 4,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "I don\u2019t see how this approach could work in an adversarial environment \u2013 latency isn\u2019t a global constant, it\u2019s something that varies depending on who you\u2019re trying to connect with, and it\u2019s something that you can optimise for simply by colocating. \nIf you initially have 100% of hashrate colocated i&hellip;",
  "truncated": true,
  "post_url": "/t/fastest-possible-pow-via-simple-dag/1331/4",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}