{
  "id": 3851,
  "name": "Jeremy Rubin",
  "username": "JeremyRubin",
  "avatar_template": "/user_avatar/delvingbitcoin.org/jeremyrubin/{size}/264_2.png",
  "created_at": "2024-12-23T22:04:20.638Z",
  "cooked": "<p>A while ago, <a class=\"mention\" href=\"/u/harding\">@harding</a> proposed soft forks with a \u201cshelf life\u201d for protocol upgrades, especially for covenants. It sparked some discussion, but was a bit convoluted and not widely adopted.</p>\n<p>However, there might be a new angle for that same concept: applying it to consensus cleanups. I do not think that was discussed previously.</p>\n<p>Consider someone wanting to impose a new sigops/byte limit in legacy script. That new restriction might end up confiscating funds or producing another major downside. Instead of making it permanent, we could adopt an expiration, say two years, unless explicitly renewed. That approach protects us from immediate vulnerabilities without locking us into a single solution in case we discover a better fix later. We could also allow the soft fork to be undone by signaling to disable its enforcement if we decide it is not worthwhile after all.</p>\n<p>The biggest drawback is that scripts with timelocks (like Lightning channels) might still get partly confiscated under these rules. E.g., if the initial satisfied condition is made to be invalid, and a recovery path becomes valid when they age-in. That risk does not disappear, but perhaps the ability to revisit the cleanup is still worth having.</p>\n<p>One key distinction between cleanup and feature forks is that feature forks introduce new capabilities that users might rely on indefinitely, so having them expire or require periodic reactivation would create uncertainty and complicate adoption. In contrast, consensus cleanups are narrower in scope. They aim to mitigate known risks or remove unnecessary cruft from the system, which often can be reversed or updated without causing long-term disruption. Since cleanups do not define new functionality that users depend on, but rather provide temporary mitigations or incremental improvements for behaviors users are not relying on, they are better suited to a time-limited or renewable enforcement policy.</p>\n<p>I may be missing some corner cases here, so I\u2019d be interested to hear others\u2019 thoughts on whether this approach seems feasible or if there are important reasons to avoid it.</p>",
  "post_number": 1,
  "post_type": 1,
  "posts_count": 11,
  "updated_at": "2024-12-23T22:53:02.859Z",
  "reply_count": 1,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 147,
  "reads": 50,
  "readers_count": 49,
  "score": 780.0,
  "yours": false,
  "topic_id": 1333,
  "topic_slug": "transitory-soft-forks-for-consensus-cleanup-forks",
  "topic_title": "Transitory Soft Forks for Consensus Cleanup Forks",
  "topic_html_title": "Transitory Soft Forks for Consensus Cleanup Forks",
  "category_id": 7,
  "display_username": "Jeremy Rubin",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "A while ago, @harding proposed soft forks with a \"shelf life\" for protocol upgrades, especially for covenants. It sparked some discussion, but was a bit convoluted and not widely adopted.\n\nHowever, there might be a new angle for that same concept: applying it to consensus cleanups. I do not think that was discussed previously.\n\nConsider someone wanting to impose a new sigops/byte limit in legacy script. That new restriction might end up confiscating funds or producing another major downside. Instead of making it permanent, we could adopt an expiration, say two years, unless explicitly renewed. That approach protects us from immediate vulnerabilities without locking us into a single solution in case we discover a better fix later. We could also allow the soft fork to be undone by signaling to disable its enforcement if we decide it is not worthwhile after all.\n\nThe biggest drawback is that scripts with timelocks (like Lightning channels) might still get partly confiscated under these rules. E.g., if the initial satisfied condition is made to be invalid, and a recovery path becomes valid when they age-in. That risk does not disappear, but perhaps the ability to revisit the cleanup is still worth having.\n\nOne key distinction between cleanup and feature forks is that feature forks introduce new capabilities that users might rely on indefinitely, so having them expire or require periodic reactivation would create uncertainty and complicate adoption. In contrast, consensus cleanups are narrower in scope. They aim to mitigate known risks or remove unnecessary cruft from the system, which often can be reversed or updated without causing long-term disruption. Since cleanups do not define new functionality that users depend on, but rather provide temporary mitigations or incremental improvements for behaviors users are not relying on, they are better suited to a time-limited or renewable enforcement policy.\n\nI may be missing some corner cases here, so I'd be interested to hear others' thoughts on whether this approach seems feasible or if there are important reasons to avoid it.",
  "actions_summary": [
    {
      "id": 2,
      "count": 2
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 224,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "A while ago, <a class=\"mention\" href=\"/u/harding\">@harding</a> proposed soft forks with a \u201cshelf life\u201d for protocol upgrades, especially for covenants. It sparked some discussion, but was a bit convoluted and not widely adopted. \nHowever, there might be a new angle for that same concept: applying it to consensus cleanups. I do not think th&hellip;",
  "truncated": true,
  "post_url": "/t/transitory-soft-forks-for-consensus-cleanup-forks/1333/1",
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 2
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 2,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null,
  "can_vote": false
}