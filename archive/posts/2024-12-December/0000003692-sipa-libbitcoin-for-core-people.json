{
  "id": 3692,
  "name": "Pieter Wuille",
  "username": "sipa",
  "avatar_template": "/user_avatar/delvingbitcoin.org/sipa/{size}/102_2.png",
  "created_at": "2024-12-02T20:38:57.614Z",
  "cooked": "<p>I think a weaker equivalent of the partial-ordering idea can be implemented in an \u201cexplicit UTXO set\u201d model, though only prior to the assumevalid point (or anywhere it\u2019s known that script validation won\u2019t happen).</p>\n<p>If an input is encountered which doesn\u2019t exist in the UTXO set, instead add a \u201cnegative UTXO\u201d entry, reflecting the spend, but not the creation. When the UTXO is later added, they cancel out. If negative UTXOs remain at the end, the chain is invalid (but it would require proper care to assign these failures to the spending, not the creation). This would pretty much allow processing blocks in any order.</p>\n<p>When script validation is enabled, this isn\u2019t possible because the state required to run script validation is pretty much the entire spending transaction, not just a small piece of UTXO data.</p>",
  "post_number": 36,
  "post_type": 1,
  "updated_at": "2024-12-02T20:40:08.328Z",
  "reply_count": 2,
  "reply_to_post_number": 35,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 12,
  "readers_count": 11,
  "score": 27.4,
  "yours": false,
  "topic_id": 1222,
  "topic_slug": "libbitcoin-for-core-people",
  "topic_title": "Libbitcoin for Core people",
  "topic_html_title": "Libbitcoin for Core people",
  "category_id": 8,
  "display_username": "Pieter Wuille",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "username": "andrewtoth",
    "name": "Andrew Toth",
    "avatar_template": "/user_avatar/delvingbitcoin.org/andrewtoth/{size}/576_2.png"
  },
  "bookmarked": false,
  "raw": "I think a weaker equivalent of the partial-ordering idea can be implemented in an \"explicit UTXO set\" model, though only prior to the assumevalid point (or anywhere it's known that script validation won't happen).\n\nIf an input is encountered which doesn't exist in the UTXO set, instead add a \"negative UTXO\" entry, reflecting the spend, but not the creation. When the UTXO is later added, they cancel out. If negative UTXOs remain at the end, the chain is invalid (but it would require proper care to assign these failures to the spending, not the creation). This would pretty much allow processing blocks in any order.\n\nWhen script validation is enabled, this isn't possible because the state required to run script validation is pretty much the entire spending transaction, not just a small piece of UTXO data.",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 96,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false
}