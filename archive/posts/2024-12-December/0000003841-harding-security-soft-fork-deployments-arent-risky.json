{
  "id": 3841,
  "name": "David A. Harding",
  "username": "harding",
  "avatar_template": "/user_avatar/delvingbitcoin.org/harding/{size}/925_2.png",
  "created_at": "2024-12-20T18:34:44.810Z",
  "cooked": "<p>I would\u2019ve categorized BIP66 as a security soft fork (see the <a href=\"https://github.com/bitcoin/bips/blob/2caa8e27b80c76ef581780f4da1039f106dde032/bip-0066.mediawiki#user-content-Disclosures\">disclosures</a> section at the end of the BIP or <a href=\"https://bitcoinops.org/en/topics/soft-fork-activation/#2015-ism-and-validationless-mining-the-bip66-strict-der-activation\">this</a>).</p>\n<p>In that case, I think the BIP66 activation problems related to spy mining provide a clear historical example of deployment risk in security soft forks.</p>\n<p>Additionally, I think it\u2019s important to remember that all soft forks work by making the rules more strict, so they all have a risk of confiscation.  That confiscation risk can be subtle and can apply even to forks that seem to only affect miners.  For example, there\u2019s the widely held belief (that I share) that Bitmain resisted segwit because they were privately using covert asicboost to increase their hardware\u2019s effectiveness; blocks containing segwit transactions would not allow them to use that capability and (arguably) \u201cconfiscated\u201d part of their capabilities.</p>\n<p>More definitively (and with less emotional baggage), an early proposal for BIP141 required the <code>OP_RETURN</code> wtxid commitment be placed in the final output of the coinbase transaction; this would allow the creation of small constant-sized proofs using SHA256 midstate compression.  However, it was <a href=\"https://gnusha.org/pi/bitcoindev/CAAS2fgTcU-Svd5S3F-xA9+pjYSihdh7jtS6LU4k5enR-8OPESQ@mail.gmail.com/\">realized</a> that about 1% of hashrate at the time was mining on an ASIC that required the final output be a P2PKH payment to a fixed address.  If BIP141 had been deployed as previously envisioned, that mining hardware would have been incapable of producing blocks containing segwit transactions, which would\u2019ve reduced their profits compared to other miners.</p>",
  "post_number": 5,
  "post_type": 1,
  "posts_count": 6,
  "updated_at": "2024-12-20T18:39:49.803Z",
  "reply_count": 1,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 4,
  "reads": 28,
  "readers_count": 27,
  "score": 30.6,
  "yours": false,
  "topic_id": 1328,
  "topic_slug": "security-soft-fork-deployments-arent-risky",
  "topic_title": "Security soft fork deployments arent risky",
  "topic_html_title": "Security soft fork deployments arent risky",
  "category_id": 5,
  "display_username": "David A. Harding",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "I would've categorized BIP66 as a security soft fork (see the [disclosures](https://github.com/bitcoin/bips/blob/2caa8e27b80c76ef581780f4da1039f106dde032/bip-0066.mediawiki#user-content-Disclosures) section at the end of the BIP or [this](https://bitcoinops.org/en/topics/soft-fork-activation/#2015-ism-and-validationless-mining-the-bip66-strict-der-activation)).\n\nIn that case, I think the BIP66 activation problems related to spy mining provide a clear historical example of deployment risk in security soft forks.\n\nAdditionally, I think it's important to remember that all soft forks work by making the rules more strict, so they all have a risk of confiscation.  That confiscation risk can be subtle and can apply even to forks that seem to only affect miners.  For example, there's the widely held belief (that I share) that Bitmain resisted segwit because they were privately using covert asicboost to increase their hardware's effectiveness; blocks containing segwit transactions would not allow them to use that capability and (arguably) \"confiscated\" part of their capabilities.\n\nMore definitively (and with less emotional baggage), an early proposal for BIP141 required the `OP_RETURN` wtxid commitment be placed in the final output of the coinbase transaction; this would allow the creation of small constant-sized proofs using SHA256 midstate compression.  However, it was [realized](https://gnusha.org/pi/bitcoindev/CAAS2fgTcU-Svd5S3F-xA9+pjYSihdh7jtS6LU4k5enR-8OPESQ@mail.gmail.com/) that about 1% of hashrate at the time was mining on an ASIC that required the final output be a P2PKH payment to a fixed address.  If BIP141 had been deployed as previously envisioned, that mining hardware would have been incapable of producing blocks containing segwit transactions, which would've reduced their profits compared to other miners.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 6,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": "Github link was replaced with a permanent link",
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "I would\u2019ve categorized BIP66 as a security soft fork (see the <a href=\"https://github.com/bitcoin/bips/blob/2caa8e27b80c76ef581780f4da1039f106dde032/bip-0066.mediawiki#user-content-Disclosures\">disclosures</a> section at the end of the BIP or <a href=\"https://bitcoinops.org/en/topics/soft-fork-activation/#2015-ism-and-validationless-mining-the-bip66-strict-der-activation\">this</a>). \nIn that case, I think the BIP66 activation problems related to spy mining provide a clear historical example of deployment risk in security soft forks. \nAdditionally, I think it\u2019s impor&hellip;",
  "truncated": true,
  "post_url": "/t/security-soft-fork-deployments-arent-risky/1328/5",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}