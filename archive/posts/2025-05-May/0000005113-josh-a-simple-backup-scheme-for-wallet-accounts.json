{
  "id": 5113,
  "name": "",
  "username": "josh",
  "avatar_template": "/user_avatar/delvingbitcoin.org/josh/{size}/95_2.png",
  "created_at": "2025-05-24T18:41:51.470Z",
  "cooked": "<p>Hey <a class=\"mention\" href=\"/u/salvatoshi\">@salvatoshi</a>, I created a <a href=\"https://docs.rs/descriptor-encrypt/latest/descriptor_encrypt/\" rel=\"noopener nofollow ugc\">rust library</a> <code>descriptor-encrypt</code> that can encrypt any descriptor such that only authorized spenders can decrypt. I plan to make a separate post about it, but I wanted to share it here first as I thought you might find it interesting.</p>\n<p>The basic idea is to make the access control policy match the spending policy of the descriptor. It supports all descriptor types and miniscript, and it includes a tag-based and variable-length encoding scheme to minimize the size of the encrypted data, among other features.</p>\n<p>With \u201cfull secrecy\u201d mode turned on, the encrypted data can be stored in public, and an attacker will learn nothing about the descriptor, or even its existence, unless they compromise enough seeds to spend the funds.</p>\n<p>Let me know what you think! My goal was to address your earlier concern about not being able to handle complex wallet setups, like those with a hash-lock or time-lock.</p>\n<p>Github: <a href=\"https://github.com/joshdoman/descriptor-encrypt\" rel=\"noopener nofollow ugc\">https://github.com/joshdoman/descriptor-encrypt</a></p>\n<p>Demo: <a href=\"https://descriptorencrypt.org\" rel=\"noopener nofollow ugc\">https://descriptorencrypt.org</a></p>",
  "post_number": 13,
  "post_type": 1,
  "posts_count": 20,
  "updated_at": "2025-05-24T18:41:51.470Z",
  "reply_count": 1,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 1,
  "reads": 20,
  "readers_count": 19,
  "score": 28.6,
  "yours": false,
  "topic_id": 1607,
  "topic_slug": "a-simple-backup-scheme-for-wallet-accounts",
  "topic_title": "A simple backup scheme for wallet accounts",
  "topic_html_title": "A simple backup scheme for wallet accounts",
  "category_id": 8,
  "display_username": "",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Hey @salvatoshi, I created a [rust library](https://docs.rs/descriptor-encrypt/latest/descriptor_encrypt/) `descriptor-encrypt` that can encrypt any descriptor such that only authorized spenders can decrypt. I plan to make a separate post about it, but I wanted to share it here first as I thought you might find it interesting.\n\nThe basic idea is to make the access control policy match the spending policy of the descriptor. It supports all descriptor types and miniscript, and it includes a tag-based and variable-length encoding scheme to minimize the size of the encrypted data, among other features.\n\nWith \"full secrecy\" mode turned on, the encrypted data can be stored in public, and an attacker will learn nothing about the descriptor, or even its existence, unless they compromise enough seeds to spend the funds. \n\nLet me know what you think! My goal was to address your earlier concern about not being able to handle complex wallet setups, like those with a hash-lock or time-lock.\n\nGithub: [https://github.com/joshdoman/descriptor-encrypt](https://github.com/joshdoman/descriptor-encrypt)\n\nDemo: https://descriptorencrypt.org",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 98,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Hey <a class=\"mention\" href=\"/u/salvatoshi\">@salvatoshi</a>, I created a <a href=\"https://docs.rs/descriptor-encrypt/latest/descriptor_encrypt/\" rel=\"noopener nofollow ugc\">rust library</a> descriptor-encrypt that can encrypt any descriptor such that only authorized spenders can decrypt. I plan to make a separate post about it, but I wanted to share it here first as I thought you might find it interesting. \nThe basic idea is to make the access &hellip;",
  "truncated": true,
  "post_url": "/t/a-simple-backup-scheme-for-wallet-accounts/1607/13",
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false
}