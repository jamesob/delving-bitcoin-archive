{
  "id": 5140,
  "name": "/dev/fd0",
  "username": "1440000bytes",
  "avatar_template": "/user_avatar/delvingbitcoin.org/1440000bytes/{size}/301_2.png",
  "created_at": "2025-05-27T20:02:03.504Z",
  "cooked": "<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://delvingbitcoin.org/uploads/default/original/2X/c/c9e77ec2fc8325d8504634a0912de5129c7c8d3a.jpeg\" data-download-href=\"https://delvingbitcoin.org/uploads/default/c9e77ec2fc8325d8504634a0912de5129c7c8d3a\" title=\"20250528_0131_Spotless Brown Egg_remix_01jw9n7r2pff5rywp9v1ngveh5\"><img src=\"https://delvingbitcoin.org/uploads/default/optimized/2X/c/c9e77ec2fc8325d8504634a0912de5129c7c8d3a_2_690x460.jpeg\" alt=\"20250528_0131_Spotless Brown Egg_remix_01jw9n7r2pff5rywp9v1ngveh5\" data-base62-sha1=\"sO7WKNGuACXNa0u93tHrRWP7xy2\" width=\"690\" height=\"460\" srcset=\"https://delvingbitcoin.org/uploads/default/optimized/2X/c/c9e77ec2fc8325d8504634a0912de5129c7c8d3a_2_690x460.jpeg, https://delvingbitcoin.org/uploads/default/optimized/2X/c/c9e77ec2fc8325d8504634a0912de5129c7c8d3a_2_1035x690.jpeg 1.5x, https://delvingbitcoin.org/uploads/default/optimized/2X/c/c9e77ec2fc8325d8504634a0912de5129c7c8d3a_2_1380x920.jpeg 2x\" data-dominant-color=\"EAB466\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">20250528_0131_Spotless Brown Egg_remix_01jw9n7r2pff5rywp9v1ngveh5</span><span class=\"informations\">1536\u00d71024 45.9 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<blockquote>\n<p>Sybil attacks are an inherent threat to privacy in mixing schemes because a transaction between n apparent participants n \u2212 1 of which are controlled by an attacker will fully link the victim\u2019s coins on both sides of the coinjoin while giving the impression that the victim\u2019s privacy has been improved.</p>\n</blockquote>\n<h2><a name=\"p-5140-wabisabi-1\" class=\"anchor\" href=\"#p-5140-wabisabi-1\"></a>Wabisabi</h2>\n<p>Section 7.2.2 in <a href=\"https://eprint.iacr.org/2021/206.pdf\" rel=\"noopener nofollow ugc\">Wabisabi paper</a> describes sybil attacks although the implementation does not provide resistance to these attacks. The attacker would need enough inputs in a coinjoin transactions and pay fees.</p>\n<p>The <a href=\"https://kruw.io/\" rel=\"noopener nofollow ugc\">coordinator</a> with the highest liquidity currently does not charge a coordinator fee.</p>\n<p>Since WabiSabi is a coinjoin implementation based on centralized coordinator, a user must also trust the coordinator not to link inputs and outputs.</p>\n<h2><a name=\"p-5140-joinmarket-2\" class=\"anchor\" href=\"#p-5140-joinmarket-2\"></a>Joinmarket</h2>\n<p>Joinmarket uses <a href=\"https://joinmarket.sgn.space/fidelitybonds\" rel=\"noopener nofollow ugc\">fidelity bonds</a> for sybil resistance. This requires market makers to lock some bitcoin hence it increases the <a href=\"https://joinmarket.sgn.space/sybilresistance\" rel=\"noopener nofollow ugc\">cost of sybil attack</a>.</p>\n<p><a href=\"https://en.bitcoin.it/wiki/Fidelity_bonds\" rel=\"noopener nofollow ugc\">Fidelity bonds</a> were proposed as a <a href=\"https://gist.github.com/chris-belcher/18ea0e6acdb885a2bfbdee43dcd6b5af\" rel=\"noopener nofollow ugc\">solution</a> to sybil attacks by <a href=\"https://x.com/chris_belcher_/status/1496577077751001093\" rel=\"noopener nofollow ugc\">Chris Belcher</a>.</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://delvingbitcoin.org/uploads/default/original/2X/6/6da26f65e09aa4a31115e8f76a849b53c10a111d.jpeg\" data-download-href=\"https://delvingbitcoin.org/uploads/default/6da26f65e09aa4a31115e8f76a849b53c10a111d\" title=\"image\"><img src=\"https://delvingbitcoin.org/uploads/default/original/2X/6/6da26f65e09aa4a31115e8f76a849b53c10a111d.jpeg\" alt=\"image\" data-base62-sha1=\"fDS3IyHgdYoU9zXM7o0t6hlgBMV\" width=\"505\" height=\"492\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">505\u00d7492 48 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<h2><a name=\"p-5140-joinstr-3\" class=\"anchor\" href=\"#p-5140-joinstr-3\"></a>Joinstr</h2>\n<p>Joinstr uses <a href=\"https://github.com/AdamISZ/aut-ct\" rel=\"noopener nofollow ugc\">aut-ct</a> as the primary mechanism for sybil resistance, however fidelity bonds can also be used with aut-ct. There is an initiator who creates the pool and adds sybil requirements to join the pool. Everyone (maker and takers) needs to provide the proof for a successful coinjoin.</p>\n<p>There is enough freedom for initiators to add different conditions for aut-ct. Example: Prove ownership of a UTXO with certain amount, age etc. This isn\u2019t the UTXO which will be used for coinjoin. It isn\u2019t possible in joinmarket with the protocol used right now. Another thing that makes it easier to provide liquidity while still resisting sybil attacks is that nobody needs to lock bitcoin.</p>\n<p>Members need to pay a fee before joining a pool that uses paid nostr relay in joinstr. This isn\u2019t the case with other coinjoin implementations.</p>\n<p>Example:</p>\n<ul>\n<li>Alice creates a pool with <code>JM=True</code> because she already has a fidelity bond and using it for Joinmarket</li>\n<li>Bob and Carol join the pool</li>\n<li>Everyone shares aut-ct proof that proves they own a P2TR UTXO worth 0.1-0.2 BTC that is unspent until last block and aged more than 2016 blocks</li>\n</ul>\n<p>I have shared other details in an earlier post: <a href=\"https://uncensoredtech.substack.com/p/market-makers-in-joinstr\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Market makers in joinstr - floppy\u2019s Substack</a></p>\n<h2><a name=\"p-5140-conclusion-4\" class=\"anchor\" href=\"#p-5140-conclusion-4\"></a>Conclusion</h2>\n<p>Wabisabi is vulnerable to sybil attacks. Sybil resistance in joinmarket is good enough as it increases the cost of the attack. However, joinstr provides the best sybil resistance among all the coinjoin implementations.</p>",
  "post_number": 1,
  "post_type": 1,
  "posts_count": 2,
  "updated_at": "2025-05-27T22:05:11.209Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 2,
  "reads": 23,
  "readers_count": 22,
  "score": 14.6,
  "yours": false,
  "topic_id": 1728,
  "topic_slug": "sybil-resistance-in-coinjoin-implementations",
  "topic_title": "Sybil resistance in coinjoin implementations",
  "topic_html_title": "Sybil resistance in coinjoin implementations",
  "category_id": 8,
  "display_username": "/dev/fd0",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "![20250528_0131_Spotless Brown Egg_remix_01jw9n7r2pff5rywp9v1ngveh5|690x460, 100%](upload://sO7WKNGuACXNa0u93tHrRWP7xy2.jpeg)\n\n> Sybil attacks are an inherent threat to privacy in mixing schemes because a transaction between n apparent participants n \u2212 1 of which are controlled by an attacker will fully link the victim\u2019s coins on both sides of the coinjoin while giving the impression that the victim\u2019s privacy has been improved.\n\n## Wabisabi\n\nSection 7.2.2 in [Wabisabi paper](https://eprint.iacr.org/2021/206.pdf) describes sybil attacks although the implementation does not provide resistance to these attacks. The attacker would need enough inputs in a coinjoin transactions and pay fees.\n\nThe [coordinator](https://kruw.io/) with the highest liquidity currently does not charge a coordinator fee.\n\nSince WabiSabi is a coinjoin implementation based on centralized coordinator, a user must also trust the coordinator not to link inputs and outputs.\n\n## Joinmarket\n\nJoinmarket uses [fidelity bonds](https://joinmarket.sgn.space/fidelitybonds) for sybil resistance. This requires market makers to lock some bitcoin hence it increases the [cost of sybil attack](https://joinmarket.sgn.space/sybilresistance).\n\n[Fidelity bonds](https://en.bitcoin.it/wiki/Fidelity_bonds) were proposed as a [solution](https://gist.github.com/chris-belcher/18ea0e6acdb885a2bfbdee43dcd6b5af) to sybil attacks by [Chris Belcher](https://x.com/chris_belcher_/status/1496577077751001093).\n\n![image|505x492](upload://fDS3IyHgdYoU9zXM7o0t6hlgBMV.jpeg)\n\n## Joinstr\n\nJoinstr uses [aut-ct](https://github.com/AdamISZ/aut-ct) as the primary mechanism for sybil resistance, however fidelity bonds can also be used with aut-ct. There is an initiator who creates the pool and adds sybil requirements to join the pool. Everyone (maker and takers) needs to provide the proof for a successful coinjoin.\n\nThere is enough freedom for initiators to add different conditions for aut-ct. Example: Prove ownership of a UTXO with certain amount, age etc. This isn\u2019t the UTXO which will be used for coinjoin. It isn\u2019t possible in joinmarket with the protocol used right now. Another thing that makes it easier to provide liquidity while still resisting sybil attacks is that nobody needs to lock bitcoin.\n\nMembers need to pay a fee before joining a pool that uses paid nostr relay in joinstr. This isn\u2019t the case with other coinjoin implementations.\n\nExample:\n- Alice creates a pool with `JM=True` because she already has a fidelity bond and using it for Joinmarket\n- Bob and Carol join the pool\n- Everyone shares aut-ct proof that proves they own a P2TR UTXO worth 0.1-0.2 BTC that is unspent until last block and aged more than 2016 blocks\n\nI have shared other details in an earlier post: https://uncensoredtech.substack.com/p/market-makers-in-joinstr\n\n## Conclusion\n\nWabisabi is vulnerable to sybil attacks. Sybil resistance in joinmarket is good enough as it increases the cost of the attack. However, joinstr provides the best sybil resistance among all the coinjoin implementations.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 247,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "<a class=\"lightbox\" href=\"https://delvingbitcoin.org/uploads/default/original/2X/c/c9e77ec2fc8325d8504634a0912de5129c7c8d3a.jpeg\" data-download-href=\"https://delvingbitcoin.org/uploads/default/c9e77ec2fc8325d8504634a0912de5129c7c8d3a\" title=\"20250528_0131_Spotless Brown Egg_remix_01jw9n7r2pff5rywp9v1ngveh5\">[20250528_0131_Spotless Brown Egg_remix_01jw9n7r2pff5rywp9v1ngveh5]</a> \n\nSybil attacks are an inherent threat to privacy in mixing schemes because a transaction between n apparent participants n \u2212 1 of which are controlled by an attacker will fully link the victim\u2019s coins on both sides of the coinjoin&hellip;",
  "truncated": true,
  "post_url": "/t/sybil-resistance-in-coinjoin-implementations/1728/1",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}