{
  "id": 5016,
  "name": "salvatoshi",
  "username": "salvatoshi",
  "avatar_template": "/user_avatar/delvingbitcoin.org/salvatoshi/{size}/72_2.png",
  "created_at": "2025-05-15T09:14:49.252Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"sjors\" data-post=\"2\" data-topic=\"1670\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/sjors/48/59_2.png\" class=\"avatar\"> sjors:</div>\n<blockquote>\n<p>What\u2019s the latest thinking with regards to the MEvil potential of <code>OP_VAULT</code>? Not having such potential could be another selling point for an application specific opcode.</p>\n</blockquote>\n</aside>\n<p>I think you can make a strong case that the MEVil concerns are identical, in that there is virtually nothing you can build with one opcode, and not with the other. Constructions might vary in ergonomics/costs, but not enough to justify different MEVil categories.</p>\n<p>A feature that VAULT has and CCV leaves to a separate opcode for vector commitments (CAT/PAIRCOMMIT/VECTORCOMMIT) is to propagate <em>multiple pieces of data</em> to the output - OP_VAULT prepends them as push opcodes for the next script. However, there are tricks to partially (= non-economically and non-ergonomically) simulate this with CCV.  Further exploring this is however not very interesting to me because I would not advocate activating CCV alone.</p>\n<aside class=\"quote no-group\" data-username=\"sjors\" data-post=\"2\" data-topic=\"1670\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/sjors/48/59_2.png\" class=\"avatar\"> sjors:</div>\n<blockquote>\n<p>and the missing features don\u2019t justify a dedicated op code (yet).</p>\n</blockquote>\n</aside>\n<p>I don\u2019t think OP_CCV is missing any OP_VAULT feature, except (<em>only if merged on its own</em>) the fact that you can pass multiple pieces of data instead of a single one as mentioned above. However, in the context of natural vaults and vault-like scripts, this doesn\u2019t really seem to be a necessary feature, to the best of my knowledge.</p>\n<p>In practice, CCV is more generic for vaults thanks to the complete freedom of choosing the next taptree (instead of replacing a single leaf). One notable place where this is relevant is when using <a href=\"https://delvingbitcoin.org/t/using-op-vault-for-recovery/150\">vault-like spending conditions for recovery</a>: if you have multiple vault-like leaves, you probably want to drop <em>all of them</em> for the next output if <em>any of them</em> is triggered; with OP_VAULT, the only way to obtain this effect is to put all the vault-like spending paths in a single leaf with several IF/ELSE branches).</p>",
  "post_number": 4,
  "post_type": 1,
  "posts_count": 4,
  "updated_at": "2025-05-15T09:14:49.252Z",
  "reply_count": 0,
  "reply_to_post_number": 2,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 14,
  "readers_count": 13,
  "score": 17.6,
  "yours": false,
  "topic_id": 1670,
  "topic_slug": "withdrawing-op-vault-bip-345",
  "topic_title": "Withdrawing OP_VAULT (BIP-345)",
  "topic_html_title": "Withdrawing OP_VAULT (BIP-345)",
  "category_id": 7,
  "display_username": "salvatoshi",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"sjors, post:2, topic:1670, full:true\"]\nWhat\u2019s the latest thinking with regards to the MEvil potential of `OP_VAULT`? Not having such potential could be another selling point for an application specific opcode.\n[/quote]\n\nI think you can make a strong case that the MEVil concerns are identical, in that there is virtually nothing you can build with one opcode, and not with the other. Constructions might vary in ergonomics/costs, but not enough to justify different MEVil categories.\n\nA feature that VAULT has and CCV leaves to a separate opcode for vector commitments (CAT/PAIRCOMMIT/VECTORCOMMIT) is to propagate *multiple pieces of data* to the output - OP_VAULT prepends them as push opcodes for the next script. However, there are tricks to partially (= non-economically and non-ergonomically) simulate this with CCV.  Further exploring this is however not very interesting to me because I would not advocate activating CCV alone.\n\n[quote=\"sjors, post:2, topic:1670, full:true\"]\nand the missing features don\u2019t justify a dedicated op code (yet).\n[/quote]\nI don't think OP_CCV is missing any OP_VAULT feature, except (*only if merged on its own*) the fact that you can pass multiple pieces of data instead of a single one as mentioned above. However, in the context of natural vaults and vault-like scripts, this doesn't really seem to be a necessary feature, to the best of my knowledge.\n\nIn practice, CCV is more generic for vaults thanks to the complete freedom of choosing the next taptree (instead of replacing a single leaf). One notable place where this is relevant is when using [vault-like spending conditions for recovery](https://delvingbitcoin.org/t/using-op-vault-for-recovery/150): if you have multiple vault-like leaves, you probably want to drop *all of them* for the next output if *any of them* is triggered; with OP_VAULT, the only way to obtain this effect is to put all the vault-like spending paths in a single leaf with several IF/ELSE branches).",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 81,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "I think you can make a strong case that the MEVil concerns are identical, in that there is virtually nothing you can build with one opcode, and not with the other. Constructions might vary in ergonomics/costs, but not enough to justify different MEVil categories. \nA feature that VAULT has and CCV l&hellip;",
  "truncated": true,
  "post_url": "/t/withdrawing-op-vault-bip-345/1670/4",
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false
}