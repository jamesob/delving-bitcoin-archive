{
  "id": 5071,
  "name": "",
  "username": "gmaxwell",
  "avatar_template": "/letter_avatar_proxy/v4/letter/g/fbc32d/{size}.png",
  "created_at": "2025-05-21T08:21:23.509Z",
  "cooked": "<p>Prefilling is just a flawed part of the design, it was kinda tossed in because it was very easy to add and harmless if not used. After compact blocks were deployed I did a bunch of testing and was unable to make it do anything but harm.</p>\n<p>The issues it has are several fold:  it\u2019s part of the compact block message so it blocks reception of the compact block in cases where it wasn\u2019t needed.   Peers also get compact blocks from multiple sources and so if they all use prefill then you waste N fold the bandwidth (or N-1 if one was indeed helpful).  And then of course the extra data stuffs you further back into needing RTTs, thanks to window issues.</p>\n<p>Then of course you have the issue that many missed transactions are missed because they were too large, which makes all the above issues much worse.</p>\n<p>Fiber being AGPL is a non-issue, parts could be re-licensed if needed. It has in it solutions to every one of the issues raised above-- including the ability for extra data to be sent that helps even if the prediction of what was missed wasn\u2019t accurate, allowing data from multiple peers to all contribute, and so on.</p>\n<p>The use of UDP however, needed get around the TCP window issues, would probably be challenging for widespread deployment due to the need for hole punching.</p>\n<p>A lot of thing have happened since then, core has minisketch merged (though unused),  and using that kind of tool I was able to get blocks in consistently 800-ish bytes before.  A big reduction in compact block size would leave a lot of room for data to fill in missing transactions.</p>\n<p>But if miners are regularly including hundreds of kilobytes that were never relayed I\u2019m a bit dubious that any scheme is going to result in particularly good performance except between peers with extremely high dedicated bandwidth that can do manual congestion management (e.g. a fiber like deployment of geographically dispersed data center nodes).  Though the fact that it can help even if just some nodes run something faster is helpful-- it makes development of stuff more interesting even if there isn\u2019t a serious deployment story.</p>",
  "post_number": 30,
  "post_type": 1,
  "posts_count": 42,
  "updated_at": "2025-05-21T08:29:08.649Z",
  "reply_count": 2,
  "reply_to_post_number": 29,
  "quote_count": 0,
  "incoming_link_count": 3,
  "reads": 51,
  "readers_count": 50,
  "score": 35.2,
  "yours": false,
  "topic_id": 1052,
  "topic_slug": "stats-on-compact-block-reconstructions",
  "topic_title": "Stats on compact block reconstructions",
  "topic_html_title": "Stats on compact block reconstructions",
  "category_id": 7,
  "display_username": "",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "id": 315,
    "username": "davidgumberg",
    "name": "David Gumberg",
    "avatar_template": "/user_avatar/delvingbitcoin.org/davidgumberg/{size}/378_2.png"
  },
  "bookmarked": false,
  "raw": "Prefilling is just a flawed part of the design, it was kinda tossed in because it was very easy to add and harmless if not used. After compact blocks were deployed I did a bunch of testing and was unable to make it do anything but harm.\n\nThe issues it has are several fold:  it's part of the compact block message so it blocks reception of the compact block in cases where it wasn't needed.   Peers also get compact blocks from multiple sources and so if they all use prefill then you waste N fold the bandwidth (or N-1 if one was indeed helpful).  And then of course the extra data stuffs you further back into needing RTTs, thanks to window issues.\n\nThen of course you have the issue that many missed transactions are missed because they were too large, which makes all the above issues much worse.\n\nFiber being AGPL is a non-issue, parts could be re-licensed if needed. It has in it solutions to every one of the issues raised above-- including the ability for extra data to be sent that helps even if the prediction of what was missed wasn't accurate, allowing data from multiple peers to all contribute, and so on.\n\nThe use of UDP however, needed get around the TCP window issues, would probably be challenging for widespread deployment due to the need for hole punching.\n\nA lot of thing have happened since then, core has minisketch merged (though unused),  and using that kind of tool I was able to get blocks in consistently 800-ish bytes before.  A big reduction in compact block size would leave a lot of room for data to fill in missing transactions.\n\nBut if miners are regularly including hundreds of kilobytes that were never relayed I'm a bit dubious that any scheme is going to result in particularly good performance except between peers with extremely high dedicated bandwidth that can do manual congestion management (e.g. a fiber like deployment of geographically dispersed data center nodes).  Though the fact that it can help even if just some nodes run something faster is helpful-- it makes development of stuff more interesting even if there isn't a serious deployment story.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 699,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Prefilling is just a flawed part of the design, it was kinda tossed in because it was very easy to add and harmless if not used. After compact blocks were deployed I did a bunch of testing and was unable to make it do anything but harm. \nThe issues it has are several fold:  it\u2019s part of the compact &hellip;",
  "truncated": true,
  "post_url": "/t/stats-on-compact-block-reconstructions/1052/30",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}