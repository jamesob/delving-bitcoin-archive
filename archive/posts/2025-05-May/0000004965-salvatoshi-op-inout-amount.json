{
  "id": 4965,
  "name": "salvatoshi",
  "username": "salvatoshi",
  "avatar_template": "/user_avatar/delvingbitcoin.org/salvatoshi/{size}/72_2.png",
  "created_at": "2025-05-08T19:41:45.428Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"Chris_Stewart_5\" data-post=\"7\" data-topic=\"549\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/chris_stewart_5/48/296_2.png\" class=\"avatar\"> Chris_Stewart_5:</div>\n<blockquote>\n<p>Why? By \u201cit\u201d I assume you are referring to <code>OP_CCV</code>/<code>OP_VAULT</code>. Is there some security consideration I am missing?</p>\n</blockquote>\n</aside>\n<p>By \u201cit\u201d I meant  \u201ca separate amount logic enforced with OP_{IN,OUT}_AMOUNT or similar opcodes\u201d.</p>\n<aside class=\"quote no-group\" data-username=\"Chris_Stewart_5\" data-post=\"7\" data-topic=\"549\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/chris_stewart_5/48/296_2.png\" class=\"avatar\"> Chris_Stewart_5:</div>\n<blockquote>\n<p>This is tested in the <a href=\"https://delvingbitcoin.org/t/op-inout-amount/549/4\">BIP345</a> case study. I didn\u2019t have this issue you are talking about. Both <a href=\"https://github.com/Christewart/bitcoin/blob/4c6c2ecb59a132eeac43d5608a1a1c081940b0e0/test/functional/feature_vaults.py#L362\" rel=\"noopener nofollow ugc\"><code>test_batch_unvault</code></a> and <a href=\"https://github.com/Christewart/bitcoin/blob/4c6c2ecb59a132eeac43d5608a1a1c081940b0e0/test/functional/feature_vaults.py#L251\" rel=\"noopener nofollow ugc\"><code>test_batch_recovery</code></a> test cases work with <code>OP_{IN,OUT}_AMOUNT</code>.</p>\n</blockquote>\n</aside>\n<p>Perhaps I\u2019m misunderstanding something, but here\u2019s the scenario I have in mind.</p>\n<p>If you trigger two Vault UTXOs A and B of 1 \u20bf each and spend A, B ==&gt; U (where U is the \u201cstaging\u201d or unvaulting output), you want the Script to enforce that U has amount at least 2 \u20bf.\nIf the input Script receive the input indices via the witness stack, what prevents \u201clying\u201d to the inputs, by claiming that the input indices are the set <span class=\"math\">\\{0\\}</span> in the witness stack of A, and the set <span class=\"math\">\\{1\\}</span> in the witness stack of B? It seems to me that such transaction would be valid and allow stealing 1 \u20bf.</p>\n<p>You can only prevent this kind of issues if you have some form of \u201csynchronization\u201d among the different input Scripts, that makes sure that the involved indices are the same for all the related inputs.</p>",
  "post_number": 8,
  "post_type": 1,
  "posts_count": 8,
  "updated_at": "2025-05-08T19:41:45.428Z",
  "reply_count": 0,
  "reply_to_post_number": 7,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 4,
  "readers_count": 3,
  "score": 0.6,
  "yours": false,
  "topic_id": 549,
  "topic_slug": "op-inout-amount",
  "topic_title": "Op_inout_amount",
  "topic_html_title": "Op_inout_amount",
  "category_id": 7,
  "display_username": "salvatoshi",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"Chris_Stewart_5, post:7, topic:549\"]\nWhy? By \u201cit\u201d I assume you are referring to `OP_CCV`/`OP_VAULT`. Is there some security consideration I am missing?\n[/quote]\n\nBy \"it\" I meant  \"a separate amount logic enforced with OP_{IN,OUT}_AMOUNT or similar opcodes\".\n\n[quote=\"Chris_Stewart_5, post:7, topic:549\"]\nThis is tested in the [BIP345](https://delvingbitcoin.org/t/op-inout-amount/549/4) case study. I didn\u2019t have this issue you are talking about. Both [`test_batch_unvault`](https://github.com/Christewart/bitcoin/blob/4c6c2ecb59a132eeac43d5608a1a1c081940b0e0/test/functional/feature_vaults.py#L362) and [`test_batch_recovery`](https://github.com/Christewart/bitcoin/blob/4c6c2ecb59a132eeac43d5608a1a1c081940b0e0/test/functional/feature_vaults.py#L251) test cases work with `OP_{IN,OUT}_AMOUNT`.\n[/quote]\n\nPerhaps I'm misunderstanding something, but here's the scenario I have in mind.\n\nIf you trigger two Vault UTXOs A and B of 1 \u20bf each and spend A, B ==> U (where U is the \"staging\" or unvaulting output), you want the Script to enforce that U has amount at least 2 \u20bf.\nIf the input Script receive the input indices via the witness stack, what prevents \"lying\" to the inputs, by claiming that the input indices are the set $\\{0\\}$ in the witness stack of A, and the set $\\{1\\}$ in the witness stack of B? It seems to me that such transaction would be valid and allow stealing 1 \u20bf.\n\nYou can only prevent this kind of issues if you have some form of \"synchronization\" among the different input Scripts, that makes sure that the involved indices are the same for all the related inputs.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 81,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "By \u201cit\u201d I meant  \u201ca separate amount logic enforced with OP_{IN,OUT}_AMOUNT or similar opcodes\u201d. \n\nPerhaps I\u2019m misunderstanding something, but here\u2019s the scenario I have in mind. \nIf you trigger two Vault UTXOs A and B of 1 \u20bf each and spend A, B ==&gt; U (where U is the \u201cstaging\u201d or unvaulting output),&hellip;",
  "truncated": true,
  "post_url": "/t/op-inout-amount/549/8",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}