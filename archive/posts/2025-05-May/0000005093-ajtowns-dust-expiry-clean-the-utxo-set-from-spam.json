{
  "id": 5093,
  "name": "Anthony Towns",
  "username": "ajtowns",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/417_2.png",
  "created_at": "2025-05-23T08:34:53.145Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"gmaxwell\" data-post=\"25\" data-topic=\"1707\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/g/fbc32d/48.png\" class=\"avatar\"> gmaxwell:</div>\n<blockquote>\n<p>That\u2019s why I was favoring a simple absolute limit: if your coins are above this value they\u2019ll won\u2019t get subjected to the accumulator. Also the non accumulated utxo set size has a fixed upper limit when you do that, \u2013 number of coins divided by that limit.</p>\n</blockquote>\n</aside>\n<p>Yeah, simple might be fine, though that becomes a different sort of dust limit, and maybe wallets will just decide \u201coh, I\u2019ll ignore the complexity by just pretending values below that amount are unspendable / don\u2019t exist at all\u201d, making it more confiscatory in practice than in theory.</p>\n<p>I don\u2019t think it actually gives a very nice fixed upper limit; sending utxos at 20,000 sats ($20) or below straight to the accumulator still lets you potentially have 105 billion utxos at 20,001 sats each, using up about 7 terabytes of disk, assuming the entire 21M BTC is used for the attack. Of course, applying a budget constraint to the attack might fix that; if you\u2019re discarding anything under as little as 4000 sats, then every additional 10GB added to the utxo set implies that ~5714 BTC ($570M) has been reserved by the attacker, and at 1sat/vb, I think recovering those funds would cost ~81 BTC ($8M, ~1.4% of the funds used).</p>\n<p>Adding the time factor in doesn\u2019t really help here though, because if the entire network is conspiring to fill your disk, they can just create too many new utxos in each block and hit pretty high numbers before any time factor comes into play. So perhaps that also argues in favour of simplicity\u2026</p>\n<p>One thing maybe worth worrying about is if low-value utxos are used briefly as part of L2 systems (eg <a href=\"https://bitcoinops.org/en/newsletters/2023/03/29/#preventing-stranded-capital-with-multiparty-channels-and-channel-factories\">John Law\u2019s systems</a>, perhaps some of the Ark designs); being able to create a dust utxo then spend it quickly without having an extra layer of complexity thrust upon you is probably nice, and also fairly benign as far as everyone else is concerned.</p>\n<p>Perhaps that just means that you should move things to the accumulator if it\u2019s below 4000 sats and older than 1008 blocks, or similar though.</p>\n<p>In the worst case, over ~1000 blocks, I think you could create somewhere around either 10M utxos (normal-ish transactions), 30M utxos (as many outputs as possible), or 100M utxos (dummy utxos that are either unspendable or anyone-can-spend, and probably use up less space individually in the utxo set), using up between 700MB to 7GB on disk.</p>\n<aside class=\"quote no-group\" data-username=\"gmaxwell\" data-post=\"25\" data-topic=\"1707\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/g/fbc32d/48.png\" class=\"avatar\"> gmaxwell:</div>\n<blockquote>\n<p>I wonder if it would be at all interesting to hybridize.. E.g. use a txout style proof that never changes for the coins identity and use a utxotree style proof for just the spentness bit.</p>\n</blockquote>\n</aside>\n<p>I guess you could probably also do something like \u201cfor the first 1000 blocks (1 week), you just need a txid/vout; after that, for the next 100,000 blocks (2 years), you need the txid/vout/block-hash/position-within-block to spend; and after that, you need to maintain/reconstruct a utreexo-style proof as well\u201d could work.</p>\n<aside class=\"quote no-group\" data-username=\"RobinLinus\" data-post=\"26\" data-topic=\"1707\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/robinlinus/48/130_2.png\" class=\"avatar\"> RobinLinus:</div>\n<blockquote>\n<p>And since this cleanup mechanism disincentivizes UTXO spam attacks, the set likely stops growing so rapidly.</p>\n</blockquote>\n</aside>\n<p>Honestly I think it would be the reverse \u2013 if the UTXO set could grow without placing a burden on nodes, there\u2019s no longer the same argument for preventing dust outputs, so probably not really a reason to reject them from mining/relay, which in turn would invite them to be used more frequently in L2 designs (\u201cthis output\u2019s available if we need it, for unusual paths when participants disappear or try to cheat or something else weird happens, but normally we\u2019ll just ignore it and let it expire into the accumulator forever\u201d), creating significantly more of them.</p>",
  "post_number": 28,
  "post_type": 1,
  "posts_count": 32,
  "updated_at": "2025-05-23T08:34:53.145Z",
  "reply_count": 1,
  "reply_to_post_number": 25,
  "quote_count": 2,
  "incoming_link_count": 0,
  "reads": 33,
  "readers_count": 32,
  "score": 11.6,
  "yours": false,
  "topic_id": 1707,
  "topic_slug": "dust-expiry-clean-the-utxo-set-from-spam",
  "topic_title": "Dust Expiry: Clean the UTXO set from spam",
  "topic_html_title": "Dust Expiry: Clean the UTXO set from spam",
  "category_id": 7,
  "display_username": "Anthony Towns",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"gmaxwell, post:25, topic:1707\"]\nThat\u2019s why I was favoring a simple absolute limit: if your coins are above this value they\u2019ll won\u2019t get subjected to the accumulator. Also the non accumulated utxo set size has a fixed upper limit when you do that, \u2013 number of coins divided by that limit.\n[/quote]\n\nYeah, simple might be fine, though that becomes a different sort of dust limit, and maybe wallets will just decide \"oh, I'll ignore the complexity by just pretending values below that amount are unspendable / don't exist at all\", making it more confiscatory in practice than in theory.\n\nI don't think it actually gives a very nice fixed upper limit; sending utxos at 20,000 sats ($20) or below straight to the accumulator still lets you potentially have 105 billion utxos at 20,001 sats each, using up about 7 terabytes of disk, assuming the entire 21M BTC is used for the attack. Of course, applying a budget constraint to the attack might fix that; if you're discarding anything under as little as 4000 sats, then every additional 10GB added to the utxo set implies that ~5714 BTC ($570M) has been reserved by the attacker, and at 1sat/vb, I think recovering those funds would cost ~81 BTC ($8M, ~1.4% of the funds used).\n\nAdding the time factor in doesn't really help here though, because if the entire network is conspiring to fill your disk, they can just create too many new utxos in each block and hit pretty high numbers before any time factor comes into play. So perhaps that also argues in favour of simplicity...\n\nOne thing maybe worth worrying about is if low-value utxos are used briefly as part of L2 systems (eg [John Law's systems](https://bitcoinops.org/en/newsletters/2023/03/29/#preventing-stranded-capital-with-multiparty-channels-and-channel-factories), perhaps some of the Ark designs); being able to create a dust utxo then spend it quickly without having an extra layer of complexity thrust upon you is probably nice, and also fairly benign as far as everyone else is concerned.\n\nPerhaps that just means that you should move things to the accumulator if it's below 4000 sats and older than 1008 blocks, or similar though.\n\nIn the worst case, over ~1000 blocks, I think you could create somewhere around either 10M utxos (normal-ish transactions), 30M utxos (as many outputs as possible), or 100M utxos (dummy utxos that are either unspendable or anyone-can-spend, and probably use up less space individually in the utxo set), using up between 700MB to 7GB on disk. \n\n[quote=\"gmaxwell, post:25, topic:1707\"]\nI wonder if it would be at all interesting to hybridize.. E.g. use a txout style proof that never changes for the coins identity and use a utxotree style proof for just the spentness bit.\n[/quote]\n\nI guess you could probably also do something like \"for the first 1000 blocks (1 week), you just need a txid/vout; after that, for the next 100,000 blocks (2 years), you need the txid/vout/block-hash/position-within-block to spend; and after that, you need to maintain/reconstruct a utreexo-style proof as well\" could work.\n\n[quote=\"RobinLinus, post:26, topic:1707\"]\nAnd since this cleanup mechanism disincentivizes UTXO spam attacks, the set likely stops growing so rapidly.\n[/quote]\n\nHonestly I think it would be the reverse -- if the UTXO set could grow without placing a burden on nodes, there's no longer the same argument for preventing dust outputs, so probably not really a reason to reject them from mining/relay, which in turn would invite them to be used more frequently in L2 designs (\"this output's available if we need it, for unusual paths when participants disappear or try to cheat or something else weird happens, but normally we'll just ignore it and let it expire into the accumulator forever\"), creating significantly more of them.",
  "actions_summary": [],
  "moderator": true,
  "admin": true,
  "staff": true,
  "user_id": 3,
  "hidden": false,
  "trust_level": 4,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Yeah, simple might be fine, though that becomes a different sort of dust limit, and maybe wallets will just decide \u201coh, I\u2019ll ignore the complexity by just pretending values below that amount are unspendable / don\u2019t exist at all\u201d, making it more confiscatory in practice than in theory. \nI don\u2019t thin&hellip;",
  "truncated": true,
  "post_url": "/t/dust-expiry-clean-the-utxo-set-from-spam/1707/28",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}