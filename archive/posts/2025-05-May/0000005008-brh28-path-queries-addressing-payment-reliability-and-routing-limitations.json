{
  "id": 5008,
  "name": "Brh28",
  "username": "brh28",
  "avatar_template": "/user_avatar/delvingbitcoin.org/brh28/{size}/836_2.png",
  "created_at": "2025-05-14T17:25:28.462Z",
  "cooked": "<p>Hey Rene, I really appreciate your feedback!</p>\n<aside class=\"quote no-group\" data-username=\"renepickhardt\" data-post=\"3\" data-topic=\"1672\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/renepickhardt/48/7_2.png\" class=\"avatar\"> renepickhardt:</div>\n<blockquote>\n<p>I was wondering weather it could lead to eventually probe the entire network and thus quite some communication overhead - which would have to be redone all the time as the liquidity state of the network should be rather dynamic.</p>\n</blockquote>\n</aside>\n<p>Quite the opposite, the purpose of the proposal is to allow nodes to find a reliable path <em>without</em> prior knowledge of the graph, meaning that continuously monitoring the network via probes is not necessary for successful payments. At the peer level, a <code>path_query</code> &amp; <code>path_reply</code> only requires one round-trip vs the 3 round trips required to set up and tear down an HTLC (1.5 roundtrips per commit x 2 commits).</p>\n<aside class=\"quote no-group\" data-username=\"renepickhardt\" data-post=\"3\" data-topic=\"1672\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/renepickhardt/48/7_2.png\" class=\"avatar\"> renepickhardt:</div>\n<blockquote>\n<p>Generally <a href=\"https://delvingbitcoin.org/t/estimating-likelihood-for-lightning-payments-to-be-in-feasible/973\">we have an issue with payments being infeasible</a> - even if full information about liquidity was known</p>\n</blockquote>\n</aside>\n<p>Agree, the proposal does not intend to create feasible paths, but rather, to quickly find them.</p>\n<aside class=\"quote no-group\" data-username=\"renepickhardt\" data-post=\"3\" data-topic=\"1672\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/renepickhardt/48/7_2.png\" class=\"avatar\"> renepickhardt:</div>\n<blockquote>\n<p>A counterargument may be: Routing nodes may - given more knowledge about the liquidity - increase the fees of their channels if they see that their liquidity is desirable.</p>\n</blockquote>\n</aside>\n<p>Alluding to <em>Privacy of channel balances</em> above, queries give routing nodes better control of their routing information, including liquidity; they can choose <em>who</em> to reveal information to and <em>how much</em> information they want to provide. Generally speaking, the more channels a node has, the harder it is to make inferences about their liquidity state from an offered path.</p>\n<aside class=\"quote no-group\" data-username=\"renepickhardt\" data-post=\"3\" data-topic=\"1672\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/renepickhardt/48/7_2.png\" class=\"avatar\"> renepickhardt:</div>\n<blockquote>\n<p>As with trampoline routing which we already have.</p>\n</blockquote>\n</aside>\n<p>Trampoline adds much more complexity at the protocol level. Additionally, it does not completely eliminate syncing as the node still needs a feasible path to the first trampoline hop.</p>\n<aside class=\"quote no-group\" data-username=\"renepickhardt\" data-post=\"3\" data-topic=\"1672\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/renepickhardt/48/7_2.png\" class=\"avatar\"> renepickhardt:</div>\n<blockquote>\n<p>I expect this will more quickly lead to deplete channels.</p>\n</blockquote>\n</aside>\n<p>I disagree, dynamic policy can actually be used to help balance channels, as nodes are able to change their routing fee in each direction based on their current liquidity state. This is conceptually similar to rate cards, but offers routing nodes more flexibility and payment senders do not need to guess the rate.</p>\n<aside class=\"quote no-group\" data-username=\"renepickhardt\" data-post=\"3\" data-topic=\"1672\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/renepickhardt/48/7_2.png\" class=\"avatar\"> renepickhardt:</div>\n<blockquote>\n<p>Also it is not clear how many nodes will be queried and asked for one routing / payment request.</p>\n</blockquote>\n</aside>\n<p>Could you elaborate on your concern here? Request and response strategies are freely determined by the node.</p>\n<aside class=\"quote no-group\" data-username=\"renepickhardt\" data-post=\"3\" data-topic=\"1672\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/renepickhardt/48/7_2.png\" class=\"avatar\"> renepickhardt:</div>\n<blockquote>\n<p>How so? The fact that payment amounts become infeasible is positively corelated with the number of participants (and negatively corelated with the amount of coins on the network). In particular network growth is limited by onchain constraints anyway. So I doubt that this is a benefit of your proposal.</p>\n</blockquote>\n</aside>\n<p>Apologies, I should have been more specific here; I\u2019m referring to growth of the network <em>diameter</em> here. As the network grows outwards, there must be a way to reliably find longer paths (when feasible). Conversely, if the network converged on a hub-and-spoke model, that would improve payment reliability, but it\u2019s not a desired outcome.</p>\n<p>As you mention, onchain constraints (block size) is a limiting factor to the <em>growth rate</em> of the network - not the maximum size. Over time, the network should still support an indefinite number of nodes and channels. Furthermore, payment channels could theoretically be constructed on different settlement layers (or \u2018realms\u2019), so I don\u2019t think we should assume that growth is bounded by block size.</p>\n<hr>\n<p>I believe this response is already long enough, so I\u2019ll leave it here. Let me know if you want me to go more into anything I missed, including comparisons to other approaches such as FofF or liquidity indications.</p>",
  "post_number": 4,
  "post_type": 1,
  "posts_count": 4,
  "updated_at": "2025-05-14T17:25:28.462Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 6,
  "readers_count": 5,
  "score": 1.2,
  "yours": false,
  "topic_id": 1672,
  "topic_slug": "path-queries-addressing-payment-reliability-and-routing-limitations",
  "topic_title": "Path Queries: Addressing Payment Reliability and Routing limitations",
  "topic_html_title": "Path Queries: Addressing Payment Reliability and Routing limitations",
  "category_id": 7,
  "display_username": "Brh28",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Hey Rene, I really appreciate your feedback!  \n\n[quote=\"renepickhardt, post:3, topic:1672\"]\nI was wondering weather it could lead to eventually probe the entire network and thus quite some communication overhead - which would have to be redone all the time as the liquidity state of the network should be rather dynamic.\n[/quote]\n\nQuite the opposite, the purpose of the proposal is to allow nodes to find a reliable path *without* prior knowledge of the graph, meaning that continuously monitoring the network via probes is not necessary for successful payments. At the peer level, a `path_query` & `path_reply` only requires one round-trip vs the 3 round trips required to set up and tear down an HTLC (1.5 roundtrips per commit x 2 commits).\n\n[quote=\"renepickhardt, post:3, topic:1672\"]\nGenerally [we have an issue with payments being infeasible](https://delvingbitcoin.org/t/estimating-likelihood-for-lightning-payments-to-be-in-feasible/973) - even if full information about liquidity was known\n[/quote]\n\nAgree, the proposal does not intend to create feasible paths, but rather, to quickly find them.  \n\n[quote=\"renepickhardt, post:3, topic:1672\"]\nA counterargument may be: Routing nodes may - given more knowledge about the liquidity - increase the fees of their channels if they see that their liquidity is desirable.\n[/quote]\n\nAlluding to *Privacy of channel balances* above, queries give routing nodes better control of their routing information, including liquidity; they can choose *who* to reveal information to and *how much* information they want to provide. Generally speaking, the more channels a node has, the harder it is to make inferences about their liquidity state from an offered path. \n\n[quote=\"renepickhardt, post:3, topic:1672\"]\nAs with trampoline routing which we already have.\n[/quote]\n\nTrampoline adds much more complexity at the protocol level. Additionally, it does not completely eliminate syncing as the node still needs a feasible path to the first trampoline hop. \n[quote=\"renepickhardt, post:3, topic:1672\"]\nI expect this will more quickly lead to deplete channels.\n[/quote]\n\nI disagree, dynamic policy can actually be used to help balance channels, as nodes are able to change their routing fee in each direction based on their current liquidity state. This is conceptually similar to rate cards, but offers routing nodes more flexibility and payment senders do not need to guess the rate.    \n\n[quote=\"renepickhardt, post:3, topic:1672\"]\nAlso it is not clear how many nodes will be queried and asked for one routing / payment request.\n[/quote]\n\nCould you elaborate on your concern here? Request and response strategies are freely determined by the node.\n\n\n[quote=\"renepickhardt, post:3, topic:1672\"]\nHow so? The fact that payment amounts become infeasible is positively corelated with the number of participants (and negatively corelated with the amount of coins on the network). In particular network growth is limited by onchain constraints anyway. So I doubt that this is a benefit of your proposal.\n[/quote]\n\nApologies, I should have been more specific here; I'm referring to growth of the network *diameter* here. As the network grows outwards, there must be a way to reliably find longer paths (when feasible). Conversely, if the network converged on a hub-and-spoke model, that would improve payment reliability, but it's not a desired outcome. \n\nAs you mention, onchain constraints (block size) is a limiting factor to the *growth rate* of the network - not the maximum size. Over time, the network should still support an indefinite number of nodes and channels. Furthermore, payment channels could theoretically be constructed on different settlement layers (or 'realms'), so I don't think we should assume that growth is bounded by block size.  \n\n***\n\nI believe this response is already long enough, so I'll leave it here. Let me know if you want me to go more into anything I missed, including comparisons to other approaches such as FofF or liquidity indications.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 558,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Hey Rene, I really appreciate your feedback! \n\nQuite the opposite, the purpose of the proposal is to allow nodes to find a reliable path without prior knowledge of the graph, meaning that continuously monitoring the network via probes is not necessary for successful payments. At the peer level, a pa&hellip;",
  "truncated": true,
  "post_url": "/t/path-queries-addressing-payment-reliability-and-routing-limitations/1672/4",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}