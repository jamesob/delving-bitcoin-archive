{
  "id": 5003,
  "name": "Rene Pickhardt",
  "username": "renepickhardt",
  "avatar_template": "/user_avatar/delvingbitcoin.org/renepickhardt/{size}/7_2.png",
  "created_at": "2025-05-14T09:31:14.096Z",
  "cooked": "<p>Thank you for your proposal and thoughts. I think most people will agree with the problem setting that you are describing. I also agree that there is a relation to trampoline routing. I was missing a bit the comparison to the proposal to <a href=\"https://github.com/lightning/bolts/pull/780\" rel=\"noopener nofollow ugc\">share liquidity information within the local neighborhood as proposed here</a>. I wonder about the trade offs between those two ideas? For that keep in mind that the recipient of a payment could potentially share its local view of the network in the invoice.</p>\n<p>While I agree that the ability for nodes to cascade path queries seems interesting and useful I was wondering weather it could lead to eventually probe the entire network and thus quite some communication overhead - which would have to be redone all the time as the liquidity state of the network should be rather dynamic.</p>\n<p>Please allow me my concerns that the benefits of your proposal may not be as high as one could think:</p>\n<p>Generally <a href=\"https://delvingbitcoin.org/t/estimating-likelihood-for-lightning-payments-to-be-in-feasible/973\">we have an issue with payments being infeasible</a> - even if full information about liquidity was known. The uncertainty about liquidity can be <a href=\"https://arxiv.org/abs/2103.08576\" rel=\"noopener nofollow ugc\">addressed  by implementing probabilistic models</a> (which all implementations do). Of course removing the uncertainty is better than handling the uncertainty.</p>\n<aside class=\"quote no-group\" data-username=\"brh28\" data-post=\"1\" data-topic=\"1672\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/brh28/48/836_2.png\" class=\"avatar\"> brh28:</div>\n<blockquote>\n<h4>Benefits</h4>\n<p>As a simple set of flexible messages, it\u2019s impossible to define all potential use cases. However, benefits can be broadly outlined as follows:</p>\n<ol>\n<li>Improves routes for larger payments, including lower fees, lower expected payment delivery times, and better fee estimation.</li>\n</ol>\n</blockquote>\n</aside>\n<p>The supported size of the payment depends on the liquidity state and at most to a small degree on the uncertainty. In particular as mentioned before the fact that payments of certain sizes are expected to be infeasible has nothing to do with the uncertainty about the liquidity. In particular <a href=\"https://github.com/renepickhardt/Lightning-Network-Limitations/blob/eec0945424289915d02868f2a691f160df5fead1/likelihood-of-payment-possability/An%20upper%20Bound%20for%20the%20Probability%20to%20be%20able%20to%20successfully%20conduct%20a%20Payment%20on%20the%20Lightning%20Network.ipynb\" rel=\"noopener nofollow ugc\">I encourage you to look at this study</a> which <a href=\"https://stacker.news/items/ir412708\" rel=\"noopener nofollow ugc\">has been independently verified</a>. From that research you can find this diagram:</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://delvingbitcoin.org/uploads/default/original/2X/f/f921876c8cd82b5fd8bcf4329766a303c1b2f45e.png\" data-download-href=\"https://delvingbitcoin.org/uploads/default/f921876c8cd82b5fd8bcf4329766a303c1b2f45e\" title=\"image\"><img src=\"https://delvingbitcoin.org/uploads/default/original/2X/f/f921876c8cd82b5fd8bcf4329766a303c1b2f45e.png\" alt=\"image\" data-base62-sha1=\"zxUIZz0LhEj3tFarfCI40ReZbEG\" width=\"562\" height=\"391\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">562\u00d7391 28.5 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>It indicates that we expect that 2.5% of all payments cannot exceed the size of 766 sats. Yes the uncertainty makes it harder to find those channels that allow to transport those 766 sats but removing the uncertainty does not increase that size at all. in particular <a href=\"https://arxiv.org/abs/2107.05322\" rel=\"noopener nofollow ugc\">it was shown that the bottlekneck is in 95% of all cases within the outbound liquidity of the sender and the inbound liquidity of the recipient.</a></p>\n<p>Similarly I doubt that it is obvious that the removal of the uncertainty will yield lower fees. A counterargument may be: Routing nodes may - given more knowledge about the liquidity - increase the fees of their channels if they see that their liquidity is desirable.</p>\n<aside class=\"quote no-group\" data-username=\"brh28\" data-post=\"1\" data-topic=\"1672\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/brh28/48/836_2.png\" class=\"avatar\"> brh28:</div>\n<blockquote>\n<ol start=\"2\">\n<li>Eliminates reliance of a fully synced channel graph. This is especially useful for mobile nodes who are not always available to receive updates and may prefer a relationship with an LSP.</li>\n</ol>\n</blockquote>\n</aside>\n<p>As with trampoline routing which we already have.</p>\n<aside class=\"quote no-group\" data-username=\"brh28\" data-post=\"1\" data-topic=\"1672\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/brh28/48/836_2.png\" class=\"avatar\"> brh28:</div>\n<blockquote>\n<ol start=\"3\">\n<li>Enables more dynamic routing policy, whereby nodes can share updates without globally enforced rate limits.</li>\n</ol>\n</blockquote>\n</aside>\n<p>I expect this will more quickly lead to deplete channels. Also it is not clear how many nodes will be queried and asked for one routing / payment request. In your proposal you already suggested that a sender can send many of those queries in parallel.</p>\n<aside class=\"quote no-group\" data-username=\"brh28\" data-post=\"1\" data-topic=\"1672\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/brh28/48/836_2.png\" class=\"avatar\"> brh28:</div>\n<blockquote>\n<ol start=\"4\">\n<li>Distributes routing more evenly across the network, making smaller routing nodes more competitive</li>\n</ol>\n</blockquote>\n</aside>\n<p>see above. Cheap channels will drain more quickly. If at all the fact that nodes have knowledge will decrease loead balancing and not increase it.</p>\n<aside class=\"quote no-group\" data-username=\"brh28\" data-post=\"1\" data-topic=\"1672\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/brh28/48/836_2.png\" class=\"avatar\"> brh28:</div>\n<blockquote>\n<ol start=\"5\">\n<li>Allow for network growth</li>\n</ol>\n</blockquote>\n</aside>\n<p>How so? The fact that payment amounts become infeasible is positively corelated with the number of participants (and negatively corelated with the amount of coins on the network). In particular network growth is limited by onchain constraints anyway. So I doubt that this is a benefit of your proposal.</p>\n<h2><a name=\"p-5003-summary-1\" class=\"anchor\" href=\"#p-5003-summary-1\"></a>Summary</h2>\n<p>While I attacked your benefits I like the proposal as I think it is in some sense more elegant and cleaner than asking within the friend of a friend network. However I am not convinced that both of those ideas will really improve the reliability situation drastically - though I agree it would be nice to have some uncertainty removal.</p>\n<p>What for example about a simple flag in channel updates that indicates on which side the liquidity is currently located? Given that channels are expected to deplete this information would be most useful anyway. Nodes could quickly share it - potentially even network wide - with a single message for all their channels.</p>\n<p>Thus I think if the community is willing to think about protocols to reduce uncertainty of liquidity we should think about which of the ideas is the best way forward by comparing those ideas to each other</p>",
  "post_number": 3,
  "post_type": 1,
  "posts_count": 4,
  "updated_at": "2025-05-14T09:36:17.544Z",
  "reply_count": 1,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 9,
  "readers_count": 8,
  "score": 6.8,
  "yours": false,
  "topic_id": 1672,
  "topic_slug": "path-queries-addressing-payment-reliability-and-routing-limitations",
  "topic_title": "Path Queries: Addressing Payment Reliability and Routing limitations",
  "topic_html_title": "Path Queries: Addressing Payment Reliability and Routing limitations",
  "category_id": 7,
  "display_username": "Rene Pickhardt",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Thank you for your proposal and thoughts. I think most people will agree with the problem setting that you are describing. I also agree that there is a relation to trampoline routing. I was missing a bit the comparison to the proposal to [share liquidity information within the local neighborhood as proposed here](https://github.com/lightning/bolts/pull/780). I wonder about the trade offs between those two ideas? For that keep in mind that the recipient of a payment could potentially share its local view of the network in the invoice. \n\nWhile I agree that the ability for nodes to cascade path queries seems interesting and useful I was wondering weather it could lead to eventually probe the entire network and thus quite some communication overhead - which would have to be redone all the time as the liquidity state of the network should be rather dynamic. \n\n\nPlease allow me my concerns that the benefits of your proposal may not be as high as one could think:\n\nGenerally [we have an issue with payments being infeasible](https://delvingbitcoin.org/t/estimating-likelihood-for-lightning-payments-to-be-in-feasible/973) - even if full information about liquidity was known. The uncertainty about liquidity can be [addressed  by implementing probabilistic models](https://arxiv.org/abs/2103.08576) (which all implementations do). Of course removing the uncertainty is better than handling the uncertainty. \n\n[quote=\"brh28, post:1, topic:1672\"]\n#### Benefits\n\nAs a simple set of flexible messages, it\u2019s impossible to define all potential use cases. However, benefits can be broadly outlined as follows:\n\n1. Improves routes for larger payments, including lower fees, lower expected payment delivery times, and better fee estimation.\n[/quote]\n\nThe supported size of the payment depends on the liquidity state and at most to a small degree on the uncertainty. In particular as mentioned before the fact that payments of certain sizes are expected to be infeasible has nothing to do with the uncertainty about the liquidity. In particular [I encourage you to look at this study](https://github.com/renepickhardt/Lightning-Network-Limitations/blob/eec0945424289915d02868f2a691f160df5fead1/likelihood-of-payment-possability/An%20upper%20Bound%20for%20the%20Probability%20to%20be%20able%20to%20successfully%20conduct%20a%20Payment%20on%20the%20Lightning%20Network.ipynb) which [has been independently verified](https://stacker.news/items/ir412708). From that research you can find this diagram: \n\n![image|562x391](upload://zxUIZz0LhEj3tFarfCI40ReZbEG.png)\n\nIt indicates that we expect that 2.5% of all payments cannot exceed the size of 766 sats. Yes the uncertainty makes it harder to find those channels that allow to transport those 766 sats but removing the uncertainty does not increase that size at all. in particular [it was shown that the bottlekneck is in 95% of all cases within the outbound liquidity of the sender and the inbound liquidity of the recipient.](https://arxiv.org/abs/2107.05322) \n\nSimilarly I doubt that it is obvious that the removal of the uncertainty will yield lower fees. A counterargument may be: Routing nodes may - given more knowledge about the liquidity - increase the fees of their channels if they see that their liquidity is desirable. \n\n[quote=\"brh28, post:1, topic:1672\"]\n2. Eliminates reliance of a fully synced channel graph. This is especially useful for mobile nodes who are not always available to receive updates and may prefer a relationship with an LSP.\n[/quote]\n\nAs with trampoline routing which we already have.\n\n[quote=\"brh28, post:1, topic:1672\"]\n3. Enables more dynamic routing policy, whereby nodes can share updates without globally enforced rate limits.\n[/quote]\n\nI expect this will more quickly lead to deplete channels. Also it is not clear how many nodes will be queried and asked for one routing / payment request. In your proposal you already suggested that a sender can send many of those queries in parallel.\n\n[quote=\"brh28, post:1, topic:1672\"]\n4. Distributes routing more evenly across the network, making smaller routing nodes more competitive\n[/quote]\n\nsee above. Cheap channels will drain more quickly. If at all the fact that nodes have knowledge will decrease loead balancing and not increase it.\n\n[quote=\"brh28, post:1, topic:1672\"]\n5. Allow for network growth\n[/quote]\n\nHow so? The fact that payment amounts become infeasible is positively corelated with the number of participants (and negatively corelated with the amount of coins on the network). In particular network growth is limited by onchain constraints anyway. So I doubt that this is a benefit of your proposal.\n\n## Summary \n\nWhile I attacked your benefits I like the proposal as I think it is in some sense more elegant and cleaner than asking within the friend of a friend network. However I am not convinced that both of those ideas will really improve the reliability situation drastically - though I agree it would be nice to have some uncertainty removal. \n\nWhat for example about a simple flag in channel updates that indicates on which side the liquidity is currently located? Given that channels are expected to deplete this information would be most useful anyway. Nodes could quickly share it - potentially even network wide - with a single message for all their channels. \n\nThus I think if the community is willing to think about protocols to reduce uncertainty of liquidity we should think about which of the ideas is the best way forward by comparing those ideas to each other",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 8,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": "Github link was replaced with a permanent link",
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Thank you for your proposal and thoughts. I think most people will agree with the problem setting that you are describing. I also agree that there is a relation to trampoline routing. I was missing a bit the comparison to the proposal to <a href=\"https://github.com/lightning/bolts/pull/780\" rel=\"noopener nofollow ugc\">share liquidity information within the local neighborhood as p&hellip;</a>",
  "truncated": true,
  "post_url": "/t/path-queries-addressing-payment-reliability-and-routing-limitations/1672/3",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}