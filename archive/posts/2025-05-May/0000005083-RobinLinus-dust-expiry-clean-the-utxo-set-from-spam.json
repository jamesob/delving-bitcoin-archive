{
  "id": 5083,
  "name": "Robin Linus",
  "username": "RobinLinus",
  "avatar_template": "/user_avatar/delvingbitcoin.org/robinlinus/{size}/130_2.png",
  "created_at": "2025-05-22T02:01:33.916Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"gmaxwell\" data-post=\"25\" data-topic=\"1707\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/g/fbc32d/48.png\" class=\"avatar\"> gmaxwell:</div>\n<blockquote>\n<p>if your coins are above this value they\u2019ll won\u2019t get subjected to the accumulator</p>\n</blockquote>\n</aside>\n<p>I think that\u2019s a good idea. Dust Expiry should reflect a balanced principle: while every UTXO imposes a cost on the system, non-dust UTXOs also provide value\u2014since the holder\u2019s conviction contributes to Bitcoin\u2019s overall worth. The mechanism should penalize only those UTXOs so small that their cost clearly outweighs their contribution.</p>\n<aside class=\"quote no-group\" data-username=\"gmaxwell\" data-post=\"25\" data-topic=\"1707\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/g/fbc32d/48.png\" class=\"avatar\"> gmaxwell:</div>\n<blockquote>\n<p>utxotree style proof for just the spentness bit</p>\n</blockquote>\n</aside>\n<p>Do you mean an accumulator scheme that allows state updates using an inclusion proof? Otherwise, if updating requires knowledge of the entire set, the accumulator introduces unnecessary overhead.</p>\n<p>Also, the set of unspent expired UTXOs isn\u2019t actually that large: location pointers of the form</p>\n<p><code>pointer = (block_height, tx_index, output_index)</code></p>\n<p>can be naively encoded in under 8 bytes. That amounts to roughly 800 MB for the ~100 million spam UTXOs created in recent years.</p>\n<p>Moreover, the set can be compressed significantly. First, since the order doesn\u2019t matter, you can sort the entries to reduce entropy. Second, both <code>block_height</code> and <code>output_index</code> have quite low entropy and can be compressed efficiently. So you can likely get away with 4 bytes per entry. Perhaps even less than 2 bytes.</p>\n<p>And since this cleanup mechanism disincentivizes UTXO spam attacks, the set likely stops growing so rapidly.</p>",
  "post_number": 26,
  "post_type": 1,
  "posts_count": 33,
  "updated_at": "2025-05-22T02:37:27.496Z",
  "reply_count": 2,
  "reply_to_post_number": 25,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 49,
  "readers_count": 48,
  "score": 19.6,
  "yours": false,
  "topic_id": 1707,
  "topic_slug": "dust-expiry-clean-the-utxo-set-from-spam",
  "topic_title": "Dust Expiry: Clean the UTXO set from spam",
  "topic_html_title": "Dust Expiry: Clean the UTXO set from spam",
  "category_id": 7,
  "display_username": "Robin Linus",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 3,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"gmaxwell, post:25, topic:1707\"]\nif your coins are above this value they\u2019ll won\u2019t get subjected to the accumulator\n[/quote]\n\nI think that's a good idea. Dust Expiry should reflect a balanced principle: while every UTXO imposes a cost on the system, non-dust UTXOs also provide value\u2014since the holder\u2019s conviction contributes to Bitcoin's overall worth. The mechanism should penalize only those UTXOs so small that their cost clearly outweighs their contribution.\n\n\n[quote=\"gmaxwell, post:25, topic:1707\"]\nutxotree style proof for just the spentness bit\n[/quote]\n\nDo you mean an accumulator scheme that allows state updates using an inclusion proof? Otherwise, if updating requires knowledge of the entire set, the accumulator introduces unnecessary overhead.\n\nAlso, the set of unspent expired UTXOs isn\u2019t actually that large: location pointers of the form\n\n`pointer = (block_height, tx_index, output_index)`\n\ncan be naively encoded in under 8 bytes. That amounts to roughly 800 MB for the ~100 million spam UTXOs created in recent years.\n\nMoreover, the set can be compressed significantly. First, since the order doesn\u2019t matter, you can sort the entries to reduce entropy. Second, both `block_height` and `output_index` have quite low entropy and can be compressed efficiently. So you can likely get away with 4 bytes per entry. Perhaps even less than 2 bytes.\n\nAnd since this cleanup mechanism disincentivizes UTXO spam attacks, the set likely stops growing so rapidly.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 131,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "I think that\u2019s a good idea. Dust Expiry should reflect a balanced principle: while every UTXO imposes a cost on the system, non-dust UTXOs also provide value\u2014since the holder\u2019s conviction contributes to Bitcoin\u2019s overall worth. The mechanism should penalize only those UTXOs so small that their cost&hellip;",
  "truncated": true,
  "post_url": "/t/dust-expiry-clean-the-utxo-set-from-spam/1707/26",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}