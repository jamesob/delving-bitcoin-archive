{
  "id": 4969,
  "name": "Brh28",
  "username": "brh28",
  "avatar_template": "/user_avatar/delvingbitcoin.org/brh28/{size}/836_2.png",
  "created_at": "2025-05-09T17:39:59.409Z",
  "cooked": "<p>Expanding on privacy implications\u2026</p>\n<p>Naturally, any time information is shared, there is a privacy implication. A <code>path_query</code> reveals a downstream node - either a hop or the destination - to the prospective routing node. When iterated upon, each node in the path becomes aware of the <em>queried</em> destination. Meanwhile, a <code>path_reply</code> implicitly reveals information about channel balances. As so, let\u2019s consider sender/receiver anonymity and channel balance privacy:</p>\n<p><em>Sender Anonymity</em></p>\n<p>While a single query does not tell a routing node about the source of a payment, the number of queries a routing node receives and whom they come from may reduce the anonymity set of the <em>query origin</em>. Depending on the nature of the payment, the sender may consider anonymity in it\u2019s path construction process, including adding trampoline hops or opting out of queries altogether.</p>\n<p><em>Receiver Anonymity</em></p>\n<p>While the receiver does not have a choice in how a payment gets routed to them, they do get to choose the entry point of the payment via blinded routes. Using path queries, a receiver can construct more reliable paths to itself; the longer the path, the more anonymity from the sender and it\u2019s gang of routing nodes. The receiver may also choose to construct their sub-path using trampolines to prevent routing nodes from discovering full paths.</p>\n<p><em>Privacy of channel balances</em></p>\n<p>First, it\u2019s important to note  the following:</p>\n<ol>\n<li>In source-based routing, payment reliability and channel balance privacy are fundamentally at odds with one another. If a path is constructed with zero knowledge of channel balances, payment success probabilities are low, and vice-versa, perfect knowledge leads to optimal routing.</li>\n<li>Channel balance is shared between channel peers, which means nodes already have a trust relationship with their peers regarding privacy.</li>\n<li>Channel balance information can already be obtained by other nodes via probing.</li>\n</ol>\n<p>With that in mind, path queries differ from trial-and-error (including probing) in the manner that liquidity uncertainty is reduced. Trial-and-error informs the <em>sender</em> about liquidity on the path, while path queries informs the <em>requester</em> about liquidity on the path. In our PEER_ONLY strategy described above, the sender (S) gained no information about liquidity on the network other than what was used for the final path. While probing remains an unsolved problem, path queries enable better information control as nodes can choose <em>who</em> they want to reveal liquidity information with.</p>",
  "post_number": 2,
  "post_type": 1,
  "posts_count": 2,
  "updated_at": "2025-05-09T17:39:59.409Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 6,
  "readers_count": 5,
  "score": 1.2,
  "yours": false,
  "topic_id": 1672,
  "topic_slug": "path-queries-addressing-payment-reliability-and-routing-limitations",
  "topic_title": "Path Queries: Addressing Payment Reliability and Routing limitations",
  "topic_html_title": "Path Queries: Addressing Payment Reliability and Routing limitations",
  "category_id": 7,
  "display_username": "Brh28",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Expanding on privacy implications...\n\nNaturally, any time information is shared, there is a privacy implication. A `path_query` reveals a downstream node - either a hop or the destination - to the prospective routing node. When iterated upon, each node in the path becomes aware of the *queried* destination. Meanwhile, a `path_reply` implicitly reveals information about channel balances. As so, let's consider sender/receiver anonymity and channel balance privacy:\n\n*Sender Anonymity*\n\nWhile a single query does not tell a routing node about the source of a payment, the number of queries a routing node receives and whom they come from may reduce the anonymity set of the *query origin*. Depending on the nature of the payment, the sender may consider anonymity in it's path construction process, including adding trampoline hops or opting out of queries altogether.\n\n*Receiver Anonymity*\n\nWhile the receiver does not have a choice in how a payment gets routed to them, they do get to choose the entry point of the payment via blinded routes. Using path queries, a receiver can construct more reliable paths to itself; the longer the path, the more anonymity from the sender and it's gang of routing nodes. The receiver may also choose to construct their sub-path using trampolines to prevent routing nodes from discovering full paths.\n\n*Privacy of channel balances*\n\nFirst, it's important to note  the following:\n\n1. In source-based routing, payment reliability and channel balance privacy are fundamentally at odds with one another. If a path is constructed with zero knowledge of channel balances, payment success probabilities are low, and vice-versa, perfect knowledge leads to optimal routing. \n2. Channel balance is shared between channel peers, which means nodes already have a trust relationship with their peers regarding privacy.\n3. Channel balance information can already be obtained by other nodes via probing. \n\nWith that in mind, path queries differ from trial-and-error (including probing) in the manner that liquidity uncertainty is reduced. Trial-and-error informs the *sender* about liquidity on the path, while path queries informs the *requester* about liquidity on the path. In our PEER_ONLY strategy described above, the sender (S) gained no information about liquidity on the network other than what was used for the final path. While probing remains an unsolved problem, path queries enable better information control as nodes can choose *who* they want to reveal liquidity information with.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 558,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Expanding on privacy implications\u2026 \nNaturally, any time information is shared, there is a privacy implication. A path_query reveals a downstream node - either a hop or the destination - to the prospective routing node. When iterated upon, each node in the path becomes aware of the queried destinatio&hellip;",
  "truncated": true,
  "post_url": "/t/path-queries-addressing-payment-reliability-and-routing-limitations/1672/2",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}