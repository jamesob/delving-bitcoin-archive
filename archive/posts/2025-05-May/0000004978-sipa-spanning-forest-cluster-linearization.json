{
  "id": 4978,
  "name": "Pieter Wuille",
  "username": "sipa",
  "avatar_template": "/user_avatar/delvingbitcoin.org/sipa/{size}/1100_2.png",
  "created_at": "2025-05-11T22:32:16.453Z",
  "cooked": "<p>It seems that even when restricting splits to maximum-<span class=\"math\">q</span>, it is possible that SFL repeats the same state.</p>\n<p>This 15-transaction cluster, with 30 dependencies, allows for a cycle of 24 splits + merges that returns to the same state:</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://delvingbitcoin.org/uploads/default/original/2X/1/10064a213d8b96896cdaa4ee29c1b5628bad80b4.png\" data-download-href=\"https://delvingbitcoin.org/uploads/default/10064a213d8b96896cdaa4ee29c1b5628bad80b4\" title=\"out\"><img src=\"https://delvingbitcoin.org/uploads/default/optimized/2X/1/10064a213d8b96896cdaa4ee29c1b5628bad80b4_2_690x100.png\" alt=\"out\" data-base62-sha1=\"2hL77yic98KiusXGyjX7aWAowF6\" width=\"690\" height=\"100\" srcset=\"https://delvingbitcoin.org/uploads/default/optimized/2X/1/10064a213d8b96896cdaa4ee29c1b5628bad80b4_2_690x100.png, https://delvingbitcoin.org/uploads/default/optimized/2X/1/10064a213d8b96896cdaa4ee29c1b5628bad80b4_2_1035x150.png 1.5x, https://delvingbitcoin.org/uploads/default/optimized/2X/1/10064a213d8b96896cdaa4ee29c1b5628bad80b4_2_1380x200.png 2x\" data-dominant-color=\"F1F1F1\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">out</span><span class=\"informations\">1721\u00d7251 48.5 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>The black edges form the initial spanning tree (T1T0, T6T0, T12T0, T2T1, T3T1, T7T4, T7T5, T12T5, T14T5, T10T7, T2T8, T2T9, T13T11, T2T13). From there, a sequence of 24 steps are possible that each deactivate one dependency, and active another one (possibly an initially grey one). Those steps are -T12T0+T13T4, -T7T4+T13T5, -T2T1+T3T8, -T2T8+T3T9, -T2T9+T6T5, -T6T0+T3T7, -T13T5+T14T11, -T14T5+T12T11, -T12T5+T1T4, -T13T4+T3T13, -T3T7+T10T8, -T3T8+T10T9, -T3T9+T6T11, -T6T5+T7T11, -T3T13+T14T0, -T14T11+T12T0, -T12T11+T7T4, -T1T4+T7T0, -T7T11+T2T9, -T10T9+T2T8, -T10T8+T6T0, -T6T11+T2T1, -T7T0+T14T5, -T14T0+T12T5.</p>\n<p>This was found by building a graph whose nodes are the <em>states</em> of SFL (i.e., set of active dependencies in the cluster above), and whose edges represent steps SFL can take (splits + self-merges that can follow, if any), and then exploring random parts of this state diagram. This approach was suggested and first implemented by <a class=\"mention\" href=\"/u/ajtowns\">@ajtowns</a>, and the example above was found thanks to <a class=\"mention\" href=\"/u/gmaxwell\">@gmaxwell</a> running it on 832 CPU cores worth of hardware.</p>\n<hr>\n<p>Overall, this means that SFL really does not have a termination guarantee. That\u2019s unfortunate, because it means there is no amount of \u201cguaranteed progress\u201d it\u2019ll make over time. Practically however, these repeatable states seem hard to find, and even in clusters that admit them, they have some 50%-80% chance of being escaped from in every step, when randomization is involved. The only real concern would be the existence of a cluster which <em>inescapable</em> repeating states.</p>",
  "post_number": 6,
  "post_type": 1,
  "posts_count": 6,
  "updated_at": "2025-05-11T22:39:54.807Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 11,
  "readers_count": 10,
  "score": 2.0,
  "yours": false,
  "topic_id": 1419,
  "topic_slug": "spanning-forest-cluster-linearization",
  "topic_title": "Spanning-forest cluster linearization",
  "topic_html_title": "Spanning-forest cluster linearization",
  "category_id": 8,
  "display_username": "Pieter Wuille",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "It seems that even when restricting splits to maximum-$q$, it is possible that SFL repeats the same state.\n\nThis 15-transaction cluster, with 30 dependencies, allows for a cycle of 24 splits + merges that returns to the same state:\n\n![out|690x100](upload://2hL77yic98KiusXGyjX7aWAowF6.png)\n\nThe black edges form the initial spanning tree (T1T0, T6T0, T12T0, T2T1, T3T1, T7T4, T7T5, T12T5, T14T5, T10T7, T2T8, T2T9, T13T11, T2T13). From there, a sequence of 24 steps are possible that each deactivate one dependency, and active another one (possibly an initially grey one). Those steps are -T12T0+T13T4, -T7T4+T13T5, -T2T1+T3T8, -T2T8+T3T9, -T2T9+T6T5, -T6T0+T3T7, -T13T5+T14T11, -T14T5+T12T11, -T12T5+T1T4, -T13T4+T3T13, -T3T7+T10T8, -T3T8+T10T9, -T3T9+T6T11, -T6T5+T7T11, -T3T13+T14T0, -T14T11+T12T0, -T12T11+T7T4, -T1T4+T7T0, -T7T11+T2T9, -T10T9+T2T8, -T10T8+T6T0, -T6T11+T2T1, -T7T0+T14T5, -T14T0+T12T5.\n\n\nThis was found by building a graph whose nodes are the *states* of SFL (i.e., set of active dependencies in the cluster above), and whose edges represent steps SFL can take (splits + self-merges that can follow, if any), and then exploring random parts of this state diagram. This approach was suggested and first implemented by @ajtowns, and the example above was found thanks to @gmaxwell running it on 832 CPU cores worth of hardware.\n\n---\n\nOverall, this means that SFL really does not have a termination guarantee. That's unfortunate, because it means there is no amount of \"guaranteed progress\" it'll make over time. Practically however, these repeatable states seem hard to find, and even in clusters that admit them, they have some 50%-80% chance of being escaped from in every step, when randomization is involved. The only real concern would be the existence of a cluster which *inescapable* repeating states.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 96,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "It seems that even when restricting splits to maximum-q, it is possible that SFL repeats the same state. \nThis 15-transaction cluster, with 30 dependencies, allows for a cycle of 24 splits + merges that returns to the same state: \n <a class=\"lightbox\" href=\"https://delvingbitcoin.org/uploads/default/original/2X/1/10064a213d8b96896cdaa4ee29c1b5628bad80b4.png\" data-download-href=\"https://delvingbitcoin.org/uploads/default/10064a213d8b96896cdaa4ee29c1b5628bad80b4\" title=\"out\">[out]</a> \nThe black edges form the initial spanning tree (T1T0, T6T0, T&hellip;",
  "truncated": true,
  "post_url": "/t/spanning-forest-cluster-linearization/1419/6",
  "reactions": [
    {
      "id": "sob",
      "type": "emoji",
      "count": 2
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 2,
  "current_user_used_main_reaction": false
}