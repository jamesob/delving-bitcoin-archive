{
  "id": 4966,
  "name": "Bram Cohen",
  "username": "bramcohen",
  "avatar_template": "/user_avatar/delvingbitcoin.org/bramcohen/{size}/400_2.png",
  "created_at": "2025-05-09T06:29:35.472Z",
  "cooked": "<p>The idea behind OP_ASSERT_OUTPUT is that it\u2019s a dumbing down of OP_CTV. It only makes a claim about one output rather than the entire transaction, allowing for it to be used more dynamically, have less complexity, and target specifically the thing which covenants are, which is specifying outputs. It can of course be called multiple times if you want to make multiple outputs. It\u2019s following the general pattern of OP_CHECKLOCKTIMEVERIFY in that it narrowly talks about a very specific part of the transaction rather than the whole thing.</p>\n<p>My motivation behind this design is to enable playing games over state channels. I am happy to report that it does, in fact, enable that with no further enhancements necessary. This is a bit non-tangible at the moment because state channel gaming isn\u2019t out at all yet but I\u2019m near completion on a proof of concept of it and having spent a few years on the project have a deep understanding of what\u2019s needed to enable it.</p>",
  "post_number": 6,
  "post_type": 1,
  "posts_count": 5,
  "updated_at": "2025-05-09T06:29:35.472Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 3,
  "readers_count": 2,
  "score": 0.6,
  "yours": false,
  "topic_id": 1655,
  "topic_slug": "a-simple-approach-to-allowing-recursive-covenants-by-enabling-quines",
  "topic_title": "A simple approach to allowing recursive covenants by enabling quines",
  "topic_html_title": "A simple approach to allowing recursive covenants by enabling quines",
  "category_id": 7,
  "display_username": "Bram Cohen",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "The idea behind OP_ASSERT_OUTPUT is that it's a dumbing down of OP_CTV. It only makes a claim about one output rather than the entire transaction, allowing for it to be used more dynamically, have less complexity, and target specifically the thing which covenants are, which is specifying outputs. It can of course be called multiple times if you want to make multiple outputs. It's following the general pattern of OP_CHECKLOCKTIMEVERIFY in that it narrowly talks about a very specific part of the transaction rather than the whole thing.\n\nMy motivation behind this design is to enable playing games over state channels. I am happy to report that it does, in fact, enable that with no further enhancements necessary. This is a bit non-tangible at the moment because state channel gaming isn't out at all yet but I'm near completion on a proof of concept of it and having spent a few years on the project have a deep understanding of what's needed to enable it.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 331,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "The idea behind OP_ASSERT_OUTPUT is that it\u2019s a dumbing down of OP_CTV. It only makes a claim about one output rather than the entire transaction, allowing for it to be used more dynamically, have less complexity, and target specifically the thing which covenants are, which is specifying outputs. It&hellip;",
  "truncated": true,
  "post_url": "/t/a-simple-approach-to-allowing-recursive-covenants-by-enabling-quines/1655/6",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}