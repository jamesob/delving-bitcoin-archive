{
  "id": 5024,
  "name": "",
  "username": "light",
  "avatar_template": "/user_avatar/delvingbitcoin.org/light/{size}/350_2.png",
  "created_at": "2025-05-17T20:50:31.538Z",
  "cooked": "<p>I have been thinking about this topic and have a random collection of thoughts to share here.</p>\n<hr>\n<p>Regarding the features of the KYC covenant described in OP:</p>\n<aside class=\"quote no-group\">\n<blockquote>\n<ul>\n<li>The government does not have to use a hot key. It can sign offline using air-gapped devices</li>\n</ul>\n</blockquote>\n</aside>\n<p>This is an advantage; at the same time, a signing server can create multiple spending paths such that if the key on one path is compromised, they can switch to another key. That doesn\u2019t help in cases where the attacker has also compromised the user key, but helps recover in cases where the user key is not compromised. This might be \u201cgood enough\u201d, since the case of the covenant, if the user key is compromised, this can also lead to theft (see point below about stealing KYC\u2019d coins).</p>\n<aside class=\"quote no-group\">\n<blockquote>\n<ul>\n<li>The government can remove addresses from the whitelist every two weeks</li>\n</ul>\n</blockquote>\n</aside>\n<p>I don\u2019t think this will be acceptable in practice. If an address is found to be compromised authorities will want to be able to immediately remove it from the KYC list. Two weeks is a long time to allow an address to be abused.</p>\n<aside class=\"quote no-group\">\n<blockquote>\n<ul>\n<li>Self custody becomes much safer as attackers cannot steal KYC\u2019d coins</li>\n</ul>\n</blockquote>\n</aside>\n<p>Stealing coins is likely more difficult in the KYC covenant paradigm but we only have to look at how prevalent theft and fraud are in the actually-existing KYC banking system to see that \u201ccannot steal\u201d is far too strong a claim. Attackers have many tools at their disposal to steal KYC funds, such as money mules, account takeover, and identity theft, to name just a few. Translating these methods into the KYC covenant context, this is how an attacker could circumvent the KYC restrictions to steal coins (assuming they have already compromised the private key, of course):</p>\n<ul>\n<li>\n<p>Money mules: the attacker would hire willing agents to go through the KYC process and receive funds stolen from another account, and quickly cash them out before the theft victim can report the theft and freeze the funds.</p>\n</li>\n<li>\n<p>Account takeover: the attacker would compromise an existing KYC\u2019d account and use it to cash out stolen funds before either the theft victim or the takeover victim realizes what is happening.</p>\n</li>\n<li>\n<p>Identity theft: the attacker would create a KYC account using a stolen identity and use it to cash out stolen funds before either the theft victim or the identity theft victim realizes what is happening.</p>\n</li>\n</ul>\n<p>These methods can also be combined to create \u201cchains\u201d or \u201cfan-out\u201d structures of transfers that make the theft harder to (fully) recover from. Again this is not theoretical, this is already how attackers steal money in the KYC banking system.</p>\n<hr>\n<p>Regarding alternatives:</p>\n<p>Today we have a few comparable alternatives to point to, one that uses a signing server (<a href=\"https://docs.liquid.net/docs/blockstream-amp-overview\" rel=\"noopener nofollow ugc\">AMP</a>) and two that use smart contracts (<a href=\"https://docs.railgun.org/wiki/assurance/private-proofs-of-innocence\" rel=\"noopener nofollow ugc\">Railgun</a> and <a href=\"https://docs.privacypools.com/layers/asp\" rel=\"noopener nofollow ugc\">Privacy Pools</a>). AFAIK neither model has been adopted or mandated by any govt, so TBD which model tyrants will end up preferring.</p>\n<p>(Notably, trustless implementations of Railgun and Privacy Pools could be built on bitcoin using only <code>OP_CAT</code>, by using <code>OP_CAT</code> to create a trustless bridge to an EVM-compatible rollup and then deploying the open-source Railgun/Privacy Pools smart contracts to that rollup.)</p>",
  "post_number": 15,
  "post_type": 1,
  "posts_count": 19,
  "updated_at": "2025-05-17T20:50:31.538Z",
  "reply_count": 1,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 1,
  "reads": 35,
  "readers_count": 34,
  "score": 17.0,
  "yours": false,
  "topic_id": 556,
  "topic_slug": "perpetually-kycd-coins-using-evil-covenants",
  "topic_title": "Perpetually KYC'd Coins Using Evil Covenants",
  "topic_html_title": "Perpetually KYC&rsquo;d Coins Using Evil Covenants",
  "category_id": 7,
  "display_username": "",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "I have been thinking about this topic and have a random collection of thoughts to share here.\n\n---\n\nRegarding the features of the KYC covenant described in OP:\n\n[quote]\n* The government does not have to use a hot key. It can sign offline using air-gapped devices\n[/quote]\n\nThis is an advantage; at the same time, a signing server can create multiple spending paths such that if the key on one path is compromised, they can switch to another key. That doesn't help in cases where the attacker has also compromised the user key, but helps recover in cases where the user key is not compromised. This might be \"good enough\", since the case of the covenant, if the user key is compromised, this can also lead to theft (see point below about stealing KYC'd coins).\n\n[quote]\n* The government can remove addresses from the whitelist every two weeks\n[/quote]\n\nI don't think this will be acceptable in practice. If an address is found to be compromised authorities will want to be able to immediately remove it from the KYC list. Two weeks is a long time to allow an address to be abused.\n\n[quote]\n* Self custody becomes much safer as attackers cannot steal KYC\u2019d coins\n[/quote]\n\nStealing coins is likely more difficult in the KYC covenant paradigm but we only have to look at how prevalent theft and fraud are in the actually-existing KYC banking system to see that \"cannot steal\" is far too strong a claim. Attackers have many tools at their disposal to steal KYC funds, such as money mules, account takeover, and identity theft, to name just a few. Translating these methods into the KYC covenant context, this is how an attacker could circumvent the KYC restrictions to steal coins (assuming they have already compromised the private key, of course):\n\n- Money mules: the attacker would hire willing agents to go through the KYC process and receive funds stolen from another account, and quickly cash them out before the theft victim can report the theft and freeze the funds.\n\n- Account takeover: the attacker would compromise an existing KYC'd account and use it to cash out stolen funds before either the theft victim or the takeover victim realizes what is happening.\n\n- Identity theft: the attacker would create a KYC account using a stolen identity and use it to cash out stolen funds before either the theft victim or the identity theft victim realizes what is happening.\n\nThese methods can also be combined to create \"chains\" or \"fan-out\" structures of transfers that make the theft harder to (fully) recover from. Again this is not theoretical, this is already how attackers steal money in the KYC banking system.\n\n---\n\nRegarding alternatives:\n\nToday we have a few comparable alternatives to point to, one that uses a signing server ([AMP](https://docs.liquid.net/docs/blockstream-amp-overview)) and two that use smart contracts ([Railgun](https://docs.railgun.org/wiki/assurance/private-proofs-of-innocence) and [Privacy Pools](https://docs.privacypools.com/layers/asp)). AFAIK neither model has been adopted or mandated by any govt, so TBD which model tyrants will end up preferring.\n\n(Notably, trustless implementations of Railgun and Privacy Pools could be built on bitcoin using only `OP_CAT`, by using `OP_CAT` to create a trustless bridge to an EVM-compatible rollup and then deploying the open-source Railgun/Privacy Pools smart contracts to that rollup.)",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 289,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "I have been thinking about this topic and have a random collection of thoughts to share here. \n\nRegarding the features of the KYC covenant described in OP: \n\nThis is an advantage; at the same time, a signing server can create multiple spending paths such that if the key on one path is compromised, t&hellip;",
  "truncated": true,
  "post_url": "/t/perpetually-kycd-coins-using-evil-covenants/556/15",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}