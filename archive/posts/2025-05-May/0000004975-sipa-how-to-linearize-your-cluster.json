{
  "id": 4975,
  "name": "Pieter Wuille",
  "username": "sipa",
  "avatar_template": "/user_avatar/delvingbitcoin.org/sipa/{size}/1100_2.png",
  "created_at": "2025-05-11T11:16:34.715Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"blockchainhao\" data-post=\"75\" data-topic=\"303\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/blockchainhao/48/1246_2.png\" class=\"avatar\"> blockchainhao:</div>\n<blockquote>\n<p>Don\u2019t we already try to extend INCnew as possible as we can? why do we put it back to the W to do more iteration on it?</p>\n</blockquote>\n</aside>\n<p>This is inside the loop of <span class=\"math\">(inc_{new}, exc_{new})</span>, over the two sides of the split (one with ancestors of the split added to <span class=\"math\">inc</span>, one with descendants of the split added to <span class=\"math\">exc</span>). The logic indeed tries to extend <span class=\"math\">inc_{new}</span> after adding ancestors of the split to it as much as possible, but that cannot be guaranteed to be the end of the line for this work item.</p>\n<hr>\n<p>Aside, there is no point in analysing this algorithm anymore. The GGT min-cut based algorithm later in this thread, and the SFL algorithm in the other thread, are far more efficient.</p>",
  "post_number": 76,
  "post_type": 1,
  "posts_count": 76,
  "updated_at": "2025-05-11T11:16:34.715Z",
  "reply_count": 1,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 4,
  "readers_count": 3,
  "score": 5.8,
  "yours": false,
  "topic_id": 303,
  "topic_slug": "how-to-linearize-your-cluster",
  "topic_title": "How to linearize your cluster",
  "topic_html_title": "How to linearize your cluster",
  "category_id": 8,
  "display_username": "Pieter Wuille",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"blockchainhao, post:75, topic:303\"]\nDon\u2019t we already try to extend INCnew as possible as we can? why do we put it back to the W to do more iteration on it?\n[/quote]\n\nThis is inside the loop of $(inc_{new}, exc_{new})$, over the two sides of the split (one with ancestors of the split added to $inc$, one with descendants of the split added to $exc$). The logic indeed tries to extend $inc_{new}$ after adding ancestors of the split to it as much as possible, but that cannot be guaranteed to be the end of the line for this work item.\n\n---\n\nAside, there is no point in analysing this algorithm anymore. The GGT min-cut based algorithm later in this thread, and the SFL algorithm in the other thread, are far more efficient.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 96,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "This is inside the loop of (inc_{new}, exc_{new}), over the two sides of the split (one with ancestors of the split added to inc, one with descendants of the split added to exc). The logic indeed tries to extend inc_{new} after adding ancestors of the split to it as much as possible, but that canno&hellip;",
  "truncated": true,
  "post_url": "/t/how-to-linearize-your-cluster/303/76",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}