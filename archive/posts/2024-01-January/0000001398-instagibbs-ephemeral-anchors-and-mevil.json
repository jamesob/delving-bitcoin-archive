{
  "id": 1398,
  "name": "Gregory Sanders",
  "username": "instagibbs",
  "avatar_template": "/user_avatar/delvingbitcoin.org/instagibbs/{size}/28_2.png",
  "created_at": "2024-01-31T19:13:07.936Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"instagibbs\" data-post=\"10\" data-topic=\"383\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/instagibbs/48/28_2.png\" class=\"avatar\"> instagibbs:</div>\n<blockquote>\n<p>This was what I was thinking, I wasn\u2019t sure of this, since the proposed spend could also be replacing other in-mempool transactions. Could conflicting with other transactions somehow cause this check to be insufficient from incentives perspective?</p>\n</blockquote>\n</aside>\n<p>I think not doing a full diagram check means it would be insufficient to stop incentives to inflate the value.</p>\n<p>For math simplicity, assume an additional input to doublepend <code>TxC</code> is 65 vbytes:</p>\n<pre data-code-height=\"214\" data-code-wrap=\"mermaid\"><code class=\"lang-mermaid\">flowchart TD\n    A[TxA: fee 0\\nsize 300\\n10000 sats in anchor] --&gt; B[TxB: fee 11780\\nsize 130]\n    C[TxC: fee 10000\\nsize 384\\n conf with TxB]\n</code></pre>\n<p><code>TxA+PureBurn(10k sats)</code> package rate is 27 sat/vbyte<br>\n<code>TxA+TxB</code> package rate is the same<br>\nBut it also pays for eviction of <code>TxC</code>. In other words, a channel counterparty has additional incentives to drive it up.</p>\n<p>If we actually require a diagram check, it may be that we \u201csimulate\u201d the conflict more directly in an actual implementation and let RBF logic handle it post-cluster mempool.</p>\n<p>Pre-cluster mempool, it may be simpler to just start with 0-value outputs.</p>",
  "post_number": 13,
  "post_type": 1,
  "updated_at": "2024-01-31T19:13:07.936Z",
  "reply_count": 0,
  "reply_to_post_number": 10,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 10,
  "readers_count": 9,
  "score": 2.0,
  "yours": false,
  "topic_id": 383,
  "topic_slug": "ephemeral-anchors-and-mevil",
  "topic_title": "Ephemeral Anchors and MEVil",
  "topic_html_title": "Ephemeral Anchors and MEVil",
  "category_id": 7,
  "display_username": "Gregory Sanders",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"instagibbs, post:10, topic:383\"]\nThis was what I was thinking, I wasn\u2019t sure of this, since the proposed spend could also be replacing other in-mempool transactions. Could conflicting with other transactions somehow cause this check to be insufficient from incentives perspective?\n[/quote]\n\nI think not doing a full diagram check means it would be insufficient to stop incentives to inflate the value.\n\nFor math simplicity, assume an additional input to doublepend `TxC` is 65 vbytes:\n\n```mermaid height=214,auto\nflowchart TD\n    A[TxA: fee 0\\nsize 300\\n10000 sats in anchor] --> B[TxB: fee 11780\\nsize 130]\n    C[TxC: fee 10000\\nsize 384\\n conf with TxB]\n```\n\n`TxA+PureBurn(10k sats)` package rate is 27 sat/vbyte  \n`TxA+TxB` package rate is the same  \nBut it also pays for eviction of `TxC`. In other words, a channel counterparty has additional incentives to drive it up.\n\nIf we actually require a diagram check, it may be that we \"simulate\" the conflict more directly in an actual implementation and let RBF logic handle it post-cluster mempool.\n\nPre-cluster mempool, it may be simpler to just start with 0-value outputs.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 31,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}