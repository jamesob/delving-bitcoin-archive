{
  "id": 1282,
  "name": "Niklas G\u00f6gge",
  "username": "dergoegge",
  "avatar_template": "/user_avatar/delvingbitcoin.org/dergoegge/{size}/14_2.png",
  "created_at": "2024-01-22T14:51:41.050Z",
  "cooked": "<p>Btcd prior to version <a href=\"https://github.com/btcsuite/btcd/releases/tag/v0.24.0\">v0.24.0</a> does not correctly implement the consensus rules outlined in <a href=\"https://github.com/bitcoin/bips/blob/deae64bfd31f6938253c05392aa355bf6d7e7605/bip-0068.mediawiki\">BIP 68</a> and <a href=\"https://github.com/bitcoin/bips/blob/deae64bfd31f6938253c05392aa355bf6d7e7605/bip-0112.mediawiki\">BIP 112</a>, making it susceptible to consensus failures. Btcd users are advised to upgrade to version v0.24.0 or above.</p>\n<h1><a name=\"details-1\" class=\"anchor\" href=\"#details-1\"></a>Details</h1>\n<p>BIP 68 &amp; 112 describe two soft-forks that introduced relative time locks to Bitcoin transactions (necessary for e.g. <a href=\"https://bitcoinops.org/en/topics/htlc/\">Hash Time Locked Contracts</a>). The rules outlined in the BIPs are only active for transactions with version 2 or higher.</p>\n<p>While both Bitcoin Core and btcd store the transaction version as a <strong>signed</strong> 32-bit integer, in the context of BIP 68 &amp; 112 it is supposed to be treated as <strong>unsigned</strong> (otherwise half the range of the version would not support BIP 68 &amp; 112). Btcd however, used the signed transaction version in both the <a href=\"https://github.com/btcsuite/btcd/blob/e4c88c3a3ecb1813529bf3dddc7a865bd418a6b8/blockchain/chain.go#L383C1-L392C3\">BIP 68</a> and <a href=\"https://github.com/btcsuite/btcd/blob/e4c88c3a3ecb1813529bf3dddc7a865bd418a6b8/txscript/opcode.go#L1172C1-L1178C3\">BIP 112</a> logic without a prior cast to <code>uint32</code>. As consequence, transactions with negative versions are incorrectly treated as not enforcing the BIP 68 rules or incorrectly rejected for use of <code>OP_CHECKSEQUENCEVERIFY</code> (BIP 112).</p>\n<h1><a name=\"impact-2\" class=\"anchor\" href=\"#impact-2\"></a>Impact</h1>\n<p>If triggered, these bugs can result in btcd nodes not accepting a block that Bitcoin Core nodes would accept (or vice versa), resulting in a chain split. Chain splits can lead to e.g.:</p>\n<ul>\n<li>Lightning Nodes using btcd as their chain backend are at risk of losing funds due to not receiving updates for the canonical chain.</li>\n<li>An attacker could trigger a split and then mine on the \u201cbtcd chain\u201d (likely without competition from other miners) to trick btcd users into accepting payments that can\u2019t occur on the canonical chain.</li>\n<li>Miners that use btcd are at risk of mining on top of an invalid chain, wasting their resources.</li>\n</ul>\n<p>Transactions with negative versions are non-standard but as the recent past has shown, that would not represent a significant hurdle for an attacker.</p>\n<h1><a name=\"credits-3\" class=\"anchor\" href=\"#credits-3\"></a>Credits</h1>\n<p>Thanks to the btcd project for awarding me with a bug bounty reward of 0.023 BTC and thanks to <a href=\"https://twitter.com/GuidoVranken\">Guido Vranken</a> for suggesting differential fuzzing of btcd\u2019s and Bitcoin Core\u2019s script interpreter to me.</p>\n<h1><a name=\"timeline-4\" class=\"anchor\" href=\"#timeline-4\"></a>Timeline</h1>\n<ul>\n<li>22-05-2023 - Initial disclosure to Lightning Labs</li>\n<li>21-06-2023 - Fixed merged into btcd (<a href=\"https://github.com/btcsuite/btcd/pull/1981\">https://github.com/btcsuite/btcd/pull/1981</a>)</li>\n<li>31-12-2023 - btcd v0.24.0 released</li>\n<li>22-01-2024 - Public disclosure</li>\n</ul>\n<hr>\n<p>Support security-focused Bitcoin research and development by <a href=\"https://brink.dev/donate\">donating to Brink</a>.</p>",
  "post_number": 1,
  "post_type": 1,
  "updated_at": "2024-01-22T14:56:46.272Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 17,
  "reads": 8,
  "readers_count": 7,
  "score": 71.0,
  "yours": false,
  "topic_id": 455,
  "topic_slug": "disclosure-btcd-consensus-bugs-due-to-usage-of-signed-transaction-version",
  "topic_title": "Disclosure: Btcd consensus bugs due to usage of signed transaction version",
  "topic_html_title": "Disclosure: Btcd consensus bugs due to usage of signed transaction version",
  "category_id": 8,
  "display_username": "Niklas G\u00f6gge",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Btcd prior to version [v0.24.0](https://github.com/btcsuite/btcd/releases/tag/v0.24.0) does not correctly implement the consensus rules outlined in [BIP 68](https://github.com/bitcoin/bips/blob/deae64bfd31f6938253c05392aa355bf6d7e7605/bip-0068.mediawiki) and [BIP 112](https://github.com/bitcoin/bips/blob/deae64bfd31f6938253c05392aa355bf6d7e7605/bip-0112.mediawiki), making it susceptible to consensus failures. Btcd users are advised to upgrade to version v0.24.0 or above.\n\n# Details\n\nBIP 68 & 112 describe two soft-forks that introduced relative time locks to Bitcoin transactions (necessary for e.g. [Hash Time Locked Contracts](https://bitcoinops.org/en/topics/htlc/)). The rules outlined in the BIPs are only active for transactions with version 2 or higher.\n\nWhile both Bitcoin Core and btcd store the transaction version as a **signed** 32-bit integer, in the context of BIP 68 & 112 it is supposed to be treated as **unsigned** (otherwise half the range of the version would not support BIP 68 & 112). Btcd however, used the signed transaction version in both the [BIP 68](https://github.com/btcsuite/btcd/blob/e4c88c3a3ecb1813529bf3dddc7a865bd418a6b8/blockchain/chain.go#L383C1-L392C3) and [BIP 112](https://github.com/btcsuite/btcd/blob/e4c88c3a3ecb1813529bf3dddc7a865bd418a6b8/txscript/opcode.go#L1172C1-L1178C3) logic without a prior cast to `uint32`. As consequence, transactions with negative versions are incorrectly treated as not enforcing the BIP 68 rules or incorrectly rejected for use of `OP_CHECKSEQUENCEVERIFY` (BIP 112).\n\n# Impact\n\nIf triggered, these bugs can result in btcd nodes not accepting a block that Bitcoin Core nodes would accept (or vice versa), resulting in a chain split. Chain splits can lead to e.g.:\n\n- Lightning Nodes using btcd as their chain backend are at risk of losing funds due to not receiving updates for the canonical chain.\n- An attacker could trigger a split and then mine on the \u201cbtcd chain\u201d (likely without competition from other miners) to trick btcd users into accepting payments that can\u2019t occur on the canonical chain.\n- Miners that use btcd are at risk of mining on top of an invalid chain, wasting their resources.\n\nTransactions with negative versions are non-standard but as the recent past has shown, that would not represent a significant hurdle for an attacker.\n\n# Credits\n\nThanks to the btcd project for awarding me with a bug bounty reward of 0.023 BTC and thanks to [Guido Vranken](https://twitter.com/GuidoVranken) for suggesting differential fuzzing of btcd\u2019s and Bitcoin Core\u2019s script interpreter to me.\n\n# Timeline\n\n- 22-05-2023 - Initial disclosure to Lightning Labs\n- 21-06-2023 - Fixed merged into btcd (https://github.com/btcsuite/btcd/pull/1981)\n- 31-12-2023 - btcd v0.24.0 released\n- 22-01-2024 - Public disclosure\n\n---\n\nSupport security-focused Bitcoin research and development by [donating to Brink](https://brink.dev/donate).",
  "actions_summary": [
    {
      "id": 2,
      "count": 3
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 15,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": "Github link was replaced with a permanent link",
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 3
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 3,
  "current_user_used_main_reaction": false
}