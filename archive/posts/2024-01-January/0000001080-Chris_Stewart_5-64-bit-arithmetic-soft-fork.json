{
  "id": 1080,
  "name": "Chris Stewart",
  "username": "Chris_Stewart_5",
  "avatar_template": "/letter_avatar_proxy/v4/letter/c/da6949/{size}.png",
  "created_at": "2024-01-11T17:18:25.444Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"ProofOfKeags\" data-post=\"10\" data-topic=\"397\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/proofofkeags/48/156_2.png\" class=\"avatar\"> ProofOfKeags:</div>\n<blockquote>\n<p>Doing something like <code>OP_ENABLE64BIT</code> would introduce some third <code>VMInterpreterState</code> and I think that will dramatically increase the surface area of potential consensus issues. Correct me if I\u2019m wrong but this would be a fundamentally new structural change to the VM formalism.</p>\n</blockquote>\n</aside>\n<p>I think Scripts like this would be confusing imo</p>\n<pre><code class=\"lang-auto\">OP_ADD OP_SUB OP_ENABLE64BIT OP_ADD OP_SUB ...\n</code></pre>\n<p>So <code>ENABLE64BIT</code> would essentially be changing interpretation of \u201clocal\u201d op codes (rather than setting how they should be interpreted at a global level).</p>\n<p>In my example we would be combining these numbering systems within the same Script. If the <code>leaf_version</code> path is taken, we can reason at a global level in the interpreter that all arithmetic ops should be interpreted as 64 bit ops.</p>",
  "post_number": 11,
  "post_type": 1,
  "updated_at": "2024-01-11T17:19:08.767Z",
  "reply_count": 2,
  "reply_to_post_number": 10,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 9,
  "readers_count": 8,
  "score": 11.4,
  "yours": false,
  "topic_id": 397,
  "topic_slug": "64-bit-arithmetic-soft-fork",
  "topic_title": "64 bit arithmetic soft fork",
  "topic_html_title": "64 bit arithmetic soft fork",
  "category_id": 7,
  "display_username": "Chris Stewart",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"ProofOfKeags, post:10, topic:397\"]\nDoing something like `OP_ENABLE64BIT` would introduce some third `VMInterpreterState` and I think that will dramatically increase the surface area of potential consensus issues. Correct me if I\u2019m wrong but this would be a fundamentally new structural change to the VM formalism.\n[/quote]\n\nI think Scripts like this would be confusing imo\n\n```\nOP_ADD OP_SUB OP_ENABLE64BIT OP_ADD OP_SUB ...\n```\n\nSo `ENABLE64BIT` would essentially be changing interpretation of \"local\" op codes (rather than setting how they should be interpreted at a global level).\n\nIn my example we would be combining these numbering systems within the same Script. If the `leaf_version` path is taken, we can reason at a global level in the interpreter that all arithmetic ops should be interpreted as 64 bit ops.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 193,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}