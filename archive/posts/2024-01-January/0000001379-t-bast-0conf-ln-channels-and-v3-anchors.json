{
  "id": 1379,
  "name": "Bastien Teinturier",
  "username": "t-bast",
  "avatar_template": "/user_avatar/delvingbitcoin.org/t-bast/{size}/98_2.png",
  "created_at": "2024-01-30T10:24:58.122Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"MattCorallo\" data-post=\"1\" data-topic=\"494\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/m/e47c2d/48.png\" class=\"avatar\"> MattCorallo:</div>\n<blockquote>\n<p>I\u2019m not sure what the correct fix is for tweaking v3 to allow this, maybe the funding transaction could be restricted to no unconfirmed inputs and then we simply allow an A \u2192 B \u2192 {C, D, CPFP bump} topology.</p>\n</blockquote>\n</aside>\n<p>I\u2019m not sure that\u2019s sufficient, because you usually want to allow having a chain of unconfirmed splices. The topologies that v3 would then need to support would probably be too complex to analyze before cluster mempool\u2026</p>\n<aside class=\"quote no-group\" data-username=\"MattCorallo\" data-post=\"1\" data-topic=\"494\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/m/e47c2d/48.png\" class=\"avatar\"> MattCorallo:</div>\n<blockquote>\n<p>If the funding transaction confirms on its own (or via CPFP if B has a change output on it, though that\u2019s certainly not a requirement we\u2019d like to require) then we\u2019re fine</p>\n</blockquote>\n</aside>\n<p>My plan was to have a change output on the funding/splice transaction on B\u2019s side to ensure that it could be CPFP-ed. This is indeed far from ideal, but that\u2019s something we already need today if we want to protect against pinning, so v3 doesn\u2019t make it worse?</p>",
  "post_number": 2,
  "post_type": 1,
  "updated_at": "2024-01-30T10:24:58.122Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 15,
  "readers_count": 14,
  "score": 3.0,
  "yours": false,
  "topic_id": 494,
  "topic_slug": "0conf-ln-channels-and-v3-anchors",
  "topic_title": "0conf LN channels and v3 anchors",
  "topic_html_title": "0conf LN channels and v3 anchors",
  "category_id": 7,
  "display_username": "Bastien Teinturier",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"MattCorallo, post:1, topic:494\"]\nI\u2019m not sure what the correct fix is for tweaking v3 to allow this, maybe the funding transaction could be restricted to no unconfirmed inputs and then we simply allow an A \u2192 B \u2192 {C, D, CPFP bump} topology.\n[/quote]\n\nI'm not sure that's sufficient, because you usually want to allow having a chain of unconfirmed splices. The topologies that v3 would then need to support would probably be too complex to analyze before cluster mempool...\n\n[quote=\"MattCorallo, post:1, topic:494\"]\nIf the funding transaction confirms on its own (or via CPFP if B has a change output on it, though that\u2019s certainly not a requirement we\u2019d like to require) then we\u2019re fine\n[/quote]\n\nMy plan was to have a change output on the funding/splice transaction on B's side to ensure that it could be CPFP-ed. This is indeed far from ideal, but that's something we already need today if we want to protect against pinning, so v3 doesn't make it worse?",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 101,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}