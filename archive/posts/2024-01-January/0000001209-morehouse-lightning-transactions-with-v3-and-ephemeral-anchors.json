{
  "id": 1209,
  "name": "Matt Morehouse",
  "username": "morehouse",
  "avatar_template": "/letter_avatar_proxy/v4/letter/m/df705f/{size}.png",
  "created_at": "2024-01-18T18:06:19.613Z",
  "cooked": "<aside class=\"quote no-group quote-modified\" data-username=\"t-bast\" data-post=\"17\" data-topic=\"418\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/t-bast/48/98_2.png\" class=\"avatar\"> t-bast:</div>\n<blockquote>\n<aside class=\"quote no-group\" data-username=\"morehouse\" data-post=\"12\" data-topic=\"418\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/m/df705f/48.png\" class=\"avatar\"> morehouse:</div>\n<blockquote>\n<p>I think v3 also prevents MitM pinning attacks where someone extracts the <code>SIGHASH_SINGLE | SIGHASH_ANYONECANPAY</code> signature and uses it to construct and pin a low feerate conflicting transaction.</p>\n</blockquote>\n</aside>\n<p>Can you explain that? I don\u2019t see how someone can do anything with the <code>SIGHASH_SINGLE | SIGHASH_ANYONECANPAY</code> signature extracted from the witness, as it\u2019s not sufficient to spend the output, they also need a second signature from the owner of the HTLC tx, which will be using <code>SIGHASH_ALL</code>?</p>\n</blockquote>\n</aside>\n<p>You\u2019re right, I forgot about the second signature with <code>SIGHASH_ALL</code>.</p>\n<p>Of course, v3 on HTLC transactions is still useful for package relay and saving space on chain.</p>\n<aside class=\"quote no-group\" data-username=\"instagibbs\" data-post=\"13\" data-topic=\"418\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/instagibbs/48/28_2.png\" class=\"avatar\"> instagibbs:</div>\n<blockquote>\n<p>v3 alone probably isn\u2019t enough, as adversary can use the ANYONECANPAY-nature of owned-by-remote HTLC-Success paths to inflate their data to generate a pin. Switching to v3+epehemeral anchor would mitigate the pin, at the cost of extra vb in benign cases <img src=\"https://delvingbitcoin.org/images/emoji/twitter/frowning.png?v=12\" title=\":frowning:\" class=\"emoji\" alt=\":frowning:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n</blockquote>\n</aside>\n<p>IIUC this isn\u2019t needed, for the reason <a class=\"mention\" href=\"/u/t-bast\">@t-bast</a> pointed out above?</p>\n<aside class=\"quote no-group quote-modified\" data-username=\"instagibbs\" data-post=\"13\" data-topic=\"418\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/instagibbs/48/28_2.png\" class=\"avatar\"> instagibbs:</div>\n<blockquote>\n<aside class=\"quote no-group\" data-username=\"morehouse\" data-post=\"12\" data-topic=\"418\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/m/df705f/48.png\" class=\"avatar\"> morehouse:</div>\n<blockquote>\n<p>At a minimum, we probably want to make HTLC transactions v3. If we really want to fix pinning, we may also need to make <em>all</em> HTLC spending paths use presigned v3 transactions.</p>\n</blockquote>\n</aside>\n<p>Huh! I hadn\u2019t considered the fact that <em>revoked</em> states would allow <em>HLTC-Timeout paths</em> to create pins. Another symptom of layered transactions if I\u2019m thinking about this right. So I think you\u2019re right, not only would you need to lock down HTLC-Success paths, as I\u2019d thought and previously proposed, but you\u2019ll also need to pre-sign HTLC-Timeout paths.</p>\n</blockquote>\n</aside>\n<p>Upon more reflection, I think your original intuition was correct \u2013 we need to presign remote v3 preimage spends but not remote timeout spends.</p>\n<p>The edge case I had in mind was where Alice tries to get an HTLC-Success confirmed at the same time that the timeout path becomes spendable.  But really Alice is screwed in that case even if we prevent Mallory from pinning her timeout path spend, since Mallory can just outbid Alice on fees for the timeout transaction while claiming the preimage spend path upstream.  Really Alice needs to avoid getting so close to the timeout in the first place.</p>\n<aside class=\"quote no-group quote-modified\" data-username=\"t-bast\" data-post=\"17\" data-topic=\"418\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/t-bast/48/98_2.png\" class=\"avatar\"> t-bast:</div>\n<blockquote>\n<aside class=\"quote no-group\" data-username=\"morehouse\" data-post=\"12\" data-topic=\"418\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/m/df705f/48.png\" class=\"avatar\"> morehouse:</div>\n<blockquote>\n<p>Because Mallory\u2019s preimage spend can opt out of v3 policy, she is able to pin her transaction in mempools while preventing Alice from learning the preimage or confirming her HTLC-timeout transaction.</p>\n</blockquote>\n</aside>\n<p>True, that\u2019s another pinning attack (that ariard described a while ago if I remember correctly). I\u2019m not sure this one needs to be fixed by v3 though. When we discussed it a long time ago, we realized that:</p>\n<ul>\n<li>the attacked node doesn\u2019t necessarily need their HTLC-timeout tx to confirm: if they learn the preimage, they don\u2019t need to claim the output at all</li>\n<li>the attacker is taking some risk, because the attacked node can potentially still learn the preimage <strong>and</strong> get their HTLC-timeout confirmed, in which case the attacker is losing money</li>\n</ul>\n</blockquote>\n</aside>\n<p>Yes, there\u2019s some risk to the attacker.  But as long as the attacker achieves a greater than 50% success rate, the pin pays off.  Do we have strong evidence that an attacker cannot achieve that today?</p>\n<aside class=\"quote no-group\">\n<blockquote>\n<ul>\n<li>a simple preimage gossip mechanism over lightning would fix that</li>\n<li>a mechanism in bitcoind that would let us inspect conflicting peer transactions to potentially extract the preimage would also fix that</li>\n</ul>\n<p>I don\u2019t think we should go down the rabbit hole of trying to exchange signatures to require a 2nd-stage HTLC transaction when spending from the remote commit: we simply cannot do this with the current <code>commit_sig</code> / <code>revoke_and_ack</code> protocol, as there\u2019s a chicken-and-egg issue where you don\u2019t know beforehand what you should be signing (we had the same issue when investigating that change for liquidity ads: <a href=\"https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-November/004219.html\" rel=\"noopener nofollow ugc\">[Lightning-dev] Liquidity Ads: Updated Spec Posted, please review</a>)</p>\n</blockquote>\n</aside>\n<p>Yeah, we\u2019d need a new message to transmit HTLC signatures prior to the commitment signature.  Naively, this doesn\u2019t seem more complicated than adding new features to bitcoind or creating a preimage relay network.  And it has the benefit that it actually fixes pinning, while the other solutions are only probabilistic ways to learn the preimage.</p>",
  "post_number": 20,
  "post_type": 1,
  "updated_at": "2024-01-18T18:06:19.613Z",
  "reply_count": 0,
  "reply_to_post_number": 17,
  "quote_count": 3,
  "incoming_link_count": 0,
  "reads": 5,
  "readers_count": 4,
  "score": 1.0,
  "yours": false,
  "topic_id": 418,
  "topic_slug": "lightning-transactions-with-v3-and-ephemeral-anchors",
  "topic_title": "Lightning transactions with v3 and ephemeral anchors",
  "topic_html_title": "Lightning transactions with v3 and ephemeral anchors",
  "category_id": 7,
  "display_username": "Matt Morehouse",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"t-bast, post:17, topic:418\"]\n[quote=\"morehouse, post:12, topic:418\"]\nI think v3 also prevents MitM pinning attacks where someone extracts the `SIGHASH_SINGLE | SIGHASH_ANYONECANPAY` signature and uses it to construct and pin a low feerate conflicting transaction.\n[/quote]\n\nCan you explain that? I don\u2019t see how someone can do anything with the `SIGHASH_SINGLE | SIGHASH_ANYONECANPAY` signature extracted from the witness, as it\u2019s not sufficient to spend the output, they also need a second signature from the owner of the HTLC tx, which will be using `SIGHASH_ALL`?\n[/quote]\n\nYou're right, I forgot about the second signature with `SIGHASH_ALL`.\n\nOf course, v3 on HTLC transactions is still useful for package relay and saving space on chain.\n\n[quote=\"instagibbs, post:13, topic:418\"]\nv3 alone probably isn\u2019t enough, as adversary can use the ANYONECANPAY-nature of owned-by-remote HTLC-Success paths to inflate their data to generate a pin. Switching to v3+epehemeral anchor would mitigate the pin, at the cost of extra vb in benign cases :frowning:\n[/quote]\n\nIIUC this isn't needed, for the reason @t-bast pointed out above?\n\n[quote=\"instagibbs, post:13, topic:418\"]\n[quote=\"morehouse, post:12, topic:418\"]\nAt a minimum, we probably want to make HTLC transactions v3. If we really want to fix pinning, we may also need to make *all* HTLC spending paths use presigned v3 transactions.\n[/quote]\n\nHuh! I hadn\u2019t considered the fact that *revoked* states would allow *HLTC-Timeout paths* to create pins. Another symptom of layered transactions if I\u2019m thinking about this right. So I think you\u2019re right, not only would you need to lock down HTLC-Success paths, as I\u2019d thought and previously proposed, but you\u2019ll also need to pre-sign HTLC-Timeout paths.\n[/quote]\n\nUpon more reflection, I think your original intuition was correct -- we need to presign remote v3 preimage spends but not remote timeout spends.\n\nThe edge case I had in mind was where Alice tries to get an HTLC-Success confirmed at the same time that the timeout path becomes spendable.  But really Alice is screwed in that case even if we prevent Mallory from pinning her timeout path spend, since Mallory can just outbid Alice on fees for the timeout transaction while claiming the preimage spend path upstream.  Really Alice needs to avoid getting so close to the timeout in the first place.\n\n\n[quote=\"t-bast, post:17, topic:418\"]\n[quote=\"morehouse, post:12, topic:418\"]\nBecause Mallory\u2019s preimage spend can opt out of v3 policy, she is able to pin her transaction in mempools while preventing Alice from learning the preimage or confirming her HTLC-timeout transaction.\n[/quote]\n\nTrue, that\u2019s another pinning attack (that ariard described a while ago if I remember correctly). I\u2019m not sure this one needs to be fixed by v3 though. When we discussed it a long time ago, we realized that:\n\n* the attacked node doesn\u2019t necessarily need their HTLC-timeout tx to confirm: if they learn the preimage, they don\u2019t need to claim the output at all\n* the attacker is taking some risk, because the attacked node can potentially still learn the preimage **and** get their HTLC-timeout confirmed, in which case the attacker is losing money\n[/quote]\n\nYes, there's some risk to the attacker.  But as long as the attacker achieves a greater than 50% success rate, the pin pays off.  Do we have strong evidence that an attacker cannot achieve that today?\n\n[quote]\n* a simple preimage gossip mechanism over lightning would fix that\n* a mechanism in bitcoind that would let us inspect conflicting peer transactions to potentially extract the preimage would also fix that\n\nI don\u2019t think we should go down the rabbit hole of trying to exchange signatures to require a 2nd-stage HTLC transaction when spending from the remote commit: we simply cannot do this with the current `commit_sig` / `revoke_and_ack` protocol, as there\u2019s a chicken-and-egg issue where you don\u2019t know beforehand what you should be signing (we had the same issue when investigating that change for liquidity ads: [[Lightning-dev] Liquidity Ads: Updated Spec Posted, please review](https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-November/004219.html))\n[/quote]\n\nYeah, we'd need a new message to transmit HTLC signatures prior to the commitment signature.  Naively, this doesn't seem more complicated than adding new features to bitcoind or creating a preimage relay network.  And it has the benefit that it actually fixes pinning, while the other solutions are only probabilistic ways to learn the preimage.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 47,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}