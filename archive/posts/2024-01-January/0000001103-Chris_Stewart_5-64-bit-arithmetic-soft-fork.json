{
  "id": 1103,
  "name": "Chris Stewart",
  "username": "Chris_Stewart_5",
  "avatar_template": "/letter_avatar_proxy/v4/letter/c/da6949/{size}.png",
  "created_at": "2024-01-13T14:59:37.726Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"Chris_Stewart_5\" data-post=\"9\" data-topic=\"397\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/c/da6949/48.png\" class=\"avatar\"> Chris_Stewart_5:</div>\n<blockquote>\n<p>Just to make sure we are talking about the same thing, by literals you mean <code>OP_1,OP_2..</code> etc right? I think this is a fair critique as \u2013 IIUC \u2013 now you would have to have <code>OP_1</code> and <code>OP_1_64</code> or something like that I believe? Or else you would have to have special interpretation logic for pushing 8 byte values or 1 byte values onto the stack based on what the witness/leaf version is?</p>\n</blockquote>\n</aside>\n<p><a href=\"https://delvingbitcoin.org/t/deploying-new-taproot-leaf-versions/406\">I\u2019ve added another post to talk about altering interpretation of op codes based on leaf version</a>. My suggestion would be to alter the interpretation of <code>OP_0,OP_1</code> etc to push 8 byte values onto the stack (instead of minimal encodings) if a specific leaf version is found.</p>\n<p>This would maintain our invariant that numeric values are always 8 bytes when they are pushed onto the stack, but not necessarily 8 bytes (the exception is our literals, <code>OP_0,OP_1..</code>) when in the script.</p>",
  "post_number": 23,
  "post_type": 1,
  "updated_at": "2024-01-13T14:59:37.726Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 14,
  "readers_count": 13,
  "score": 2.8,
  "yours": false,
  "topic_id": 397,
  "topic_slug": "64-bit-arithmetic-soft-fork",
  "topic_title": "64 bit arithmetic soft fork",
  "topic_html_title": "64 bit arithmetic soft fork",
  "category_id": 7,
  "display_username": "Chris Stewart",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"Chris_Stewart_5, post:9, topic:397\"]\nJust to make sure we are talking about the same thing, by literals you mean `OP_1,OP_2..` etc right? I think this is a fair critique as \u2013 IIUC \u2013 now you would have to have `OP_1` and `OP_1_64` or something like that I believe? Or else you would have to have special interpretation logic for pushing 8 byte values or 1 byte values onto the stack based on what the witness/leaf version is?\n[/quote]\n\n[I've added another post to talk about altering interpretation of op codes based on leaf version](https://delvingbitcoin.org/t/deploying-new-taproot-leaf-versions/406). My suggestion would be to alter the interpretation of `OP_0,OP_1` etc to push 8 byte values onto the stack (instead of minimal encodings) if a specific leaf version is found. \n\nThis would maintain our invariant that numeric values are always 8 bytes when they are pushed onto the stack, but not necessarily 8 bytes (the exception is our literals, `OP_0,OP_1..`) when in the script.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 193,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}