{
  "id": 1217,
  "name": "Bastien Teinturier",
  "username": "t-bast",
  "avatar_template": "/user_avatar/delvingbitcoin.org/t-bast/{size}/98_2.png",
  "created_at": "2024-01-19T09:00:03.084Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"morehouse\" data-post=\"20\" data-topic=\"418\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/m/df705f/48.png\" class=\"avatar\"> morehouse:</div>\n<blockquote>\n<p>Yes, there\u2019s some risk to the attacker. But as long as the attacker achieves a greater than 50% success rate, the pin pays off. Do we have strong evidence that an attacker cannot achieve that today?</p>\n</blockquote>\n</aside>\n<p>No, I don\u2019t have any evidence of that, and I think it\u2019s really hard to evaluate! I honestly don\u2019t know how feasible such an eclipse attack is. In this specific case it <em>feels</em> very hard to pull off, because lightning nodes should be running multiple independent bitcoin nodes that would let them easily monitor conflicting transactions (and thus learn preimages in that specific case). But I have no idea how to quantify the difficulty.</p>\n<aside class=\"quote no-group\" data-username=\"morehouse\" data-post=\"20\" data-topic=\"418\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/m/df705f/48.png\" class=\"avatar\"> morehouse:</div>\n<blockquote>\n<p>Yeah, we\u2019d need a new message to transmit HTLC signatures prior to the commitment signature.</p>\n</blockquote>\n</aside>\n<p>My gut feeling is that we should wait for PTLCs to do this work, because we most likely need something similar for PTLC to exchange partial signatures (as detailed in <a href=\"https://github.com/t-bast/lightning-docs/blob/398a1b78250f564f7c86a414810f7e87e5af23ba/taproot-updates.md#point-time-locked-contracts\">my old writeup</a> with the <code>commitment_proposed</code> message).</p>\n<p>Meanwhile, I think we can live with the simple mitigation of discovering the preimage in the mempool of our \u201cbackup\u201d bitcoin nodes.</p>\n<aside class=\"quote no-group\" data-username=\"ajtowns\" data-post=\"21\" data-topic=\"418\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ajtowns/48/3_2.png\" class=\"avatar\"> ajtowns:</div>\n<blockquote>\n<p>At that point the channel funds may be difficult for Alice to access indefinitely, as far as I can see.</p>\n</blockquote>\n</aside>\n<p>True, there is a potential for a griefing attack here. This is annoying, but not as terrible as an attack where Bob steals from Alice! Lightning node operators should configure their <code>max_htlc_value_in_flight_msat</code> to bound their exposure to that kind of attack: it\u2019s not very satisfying, but is probably good enough in practice?</p>\n<p>Long term we\u2019ll eventually fix that, but we can probably live with it until then.</p>",
  "post_number": 22,
  "post_type": 1,
  "updated_at": "2024-01-19T09:05:05.281Z",
  "reply_count": 0,
  "reply_to_post_number": 20,
  "quote_count": 2,
  "incoming_link_count": 0,
  "reads": 1,
  "readers_count": 0,
  "score": 0.2,
  "yours": false,
  "topic_id": 418,
  "topic_slug": "lightning-transactions-with-v3-and-ephemeral-anchors",
  "topic_title": "Lightning transactions with v3 and ephemeral anchors",
  "topic_html_title": "Lightning transactions with v3 and ephemeral anchors",
  "category_id": 7,
  "display_username": "Bastien Teinturier",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"morehouse, post:20, topic:418\"]\nYes, there\u2019s some risk to the attacker. But as long as the attacker achieves a greater than 50% success rate, the pin pays off. Do we have strong evidence that an attacker cannot achieve that today?\n[/quote]\n\nNo, I don't have any evidence of that, and I think it's really hard to evaluate! I honestly don't know how feasible such an eclipse attack is. In this specific case it _feels_ very hard to pull off, because lightning nodes should be running multiple independent bitcoin nodes that would let them easily monitor conflicting transactions (and thus learn preimages in that specific case). But I have no idea how to quantify the difficulty.\n\n[quote=\"morehouse, post:20, topic:418\"]\nYeah, we\u2019d need a new message to transmit HTLC signatures prior to the commitment signature.\n[/quote]\n\nMy gut feeling is that we should wait for PTLCs to do this work, because we most likely need something similar for PTLC to exchange partial signatures (as detailed in [my old writeup](https://github.com/t-bast/lightning-docs/blob/398a1b78250f564f7c86a414810f7e87e5af23ba/taproot-updates.md#point-time-locked-contracts) with the `commitment_proposed` message).\n\nMeanwhile, I think we can live with the simple mitigation of discovering the preimage in the mempool of our \"backup\" bitcoin nodes.\n\n[quote=\"ajtowns, post:21, topic:418\"]\nAt that point the channel funds may be difficult for Alice to access indefinitely, as far as I can see.\n[/quote]\n\nTrue, there is a potential for a griefing attack here. This is annoying, but not as terrible as an attack where Bob steals from Alice! Lightning node operators should configure their `max_htlc_value_in_flight_msat` to bound their exposure to that kind of attack: it's not very satisfying, but is probably good enough in practice?\n\nLong term we'll eventually fix that, but we can probably live with it until then.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 101,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": "Github link was replaced with a permanent link",
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}