{
  "id": 1047,
  "name": "Gregory Sanders",
  "username": "instagibbs",
  "avatar_template": "/user_avatar/delvingbitcoin.org/instagibbs/{size}/28_2.png",
  "created_at": "2024-01-09T17:58:21.928Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"rustynail\" data-post=\"30\" data-topic=\"340\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/r/cc9497/48.png\" class=\"avatar\"> rustynail:</div>\n<blockquote>\n<p>But then why would you use an ephemeral anchor which can be maliciously pinned by <strong>anyone</strong> instead of a normal anchor with a checksig? Why make the attackers able to attack more stuff?</p>\n</blockquote>\n</aside>\n<p>Assuming we\u2019re talking specifically about LN, every choice has tradeoffs. From what I can see we have these shorter term choices:</p>\n<ol>\n<li>2 Keyed anchors: Relies on CPFP carveout(<a href=\"https://delvingbitcoin.org/t/an-overview-of-the-cluster-mempool-proposal/393#the-cpfp-carveout-rule-can-no-longer-be-supported-12\">which is going away eventually due to incoherence in cluster mempool world</a>). Not really viable.</li>\n<li>1 Keyed Anchor(with no sharing): Relies V3 + package RBF which means you have to pay for absolute fee of counter-party\u2019s package + incremental bytes (slightly worse than replacing just child with adversarial counterparty).</li>\n<li>1 Shared Keyed Anchor: Relies on V3 + package RBF. Both parties can independently spend the same anchor. Pinning bounded by the child tx size rule. Requires all other outputs be relative timelocked for at least one block, and costs the additional vbytes for a keyspend. Output must be above dust value. Allows for package RBF or direct RBF against anchor spends. Allows for \u201ctheft\u201d of base anchor value.</li>\n<li>Keyless anchor: In benign cases, strictly cheaper to spend, and results in smaller commitment transactions. Allows using any outputs previously encumbered by <code>1 CSV</code> to be unlocked for potential CPFP. Downside is it allows general adversaries to try and pin in the same reduced way as the highly motivated counter-party could in (3).</li>\n</ol>\n<p>For more general smart contracting, it has plenty of benefits over CPFP-carveout based solutions: <a href=\"https://github.com/instagibbs/bips/blob/527b007dbf5b9a89895017030183370e05468ae6/bip-ephemeralanchors.mediawiki#motivation\">https://github.com/instagibbs/bips/blob/527b007dbf5b9a89895017030183370e05468ae6/bip-ephemeralanchors.mediawiki#motivation</a></p>\n<aside class=\"quote no-group\" data-username=\"rustynail\" data-post=\"31\" data-topic=\"340\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/r/cc9497/48.png\" class=\"avatar\"> rustynail:</div>\n<blockquote>\n<p><a class=\"mention\" href=\"/u/glozow\">@glozow</a> Is this true? Why aren\u2019t we figuring out this stuff now while the spec is developing? I thought V3 was supposed to fix all these pinning issues.</p>\n</blockquote>\n</aside>\n<p>It was previously investigated by me, presented to LN spec group last year in NYC in person, and shelved because all HTLC-Success paths must be pre-signed to commit to some sort of opt-in policy, and either:</p>\n<ol>\n<li>If using V3+ephemeral anchors, additional overhead bytes for HLTCs and protocol changes (icy reception to additional bytes)</li>\n<li>Some sort of \u201cV4\u201d transaction which helps directly with 1-input-1-output case (Investigated this twice; not many people seemed to like this either).</li>\n</ol>\n<p>In summation, we\u2019re trying to offer something people can use to safely replace CPFP carveout, whatever that is, while also improving the situation for wallets who would prefer some anti-pin features.</p>",
  "post_number": 32,
  "post_type": 1,
  "updated_at": "2024-01-09T19:42:52.645Z",
  "reply_count": 0,
  "reply_to_post_number": 31,
  "quote_count": 2,
  "incoming_link_count": 0,
  "reads": 14,
  "readers_count": 13,
  "score": 2.8,
  "yours": false,
  "topic_id": 340,
  "topic_slug": "v3-transaction-policy-for-anti-pinning",
  "topic_title": "V3 transaction policy for anti-pinning",
  "topic_html_title": "V3 transaction policy for anti-pinning",
  "category_id": 7,
  "display_username": "Gregory Sanders",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 5,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"rustynail, post:30, topic:340\"]\nBut then why would you use an ephemeral anchor which can be maliciously pinned by **anyone** instead of a normal anchor with a checksig? Why make the attackers able to attack more stuff?\n[/quote]\n\nAssuming we're talking specifically about LN, every choice has tradeoffs. From what I can see we have these shorter term choices:  \n1) 2 Keyed anchors: Relies on CPFP carveout([which is going away eventually due to incoherence in cluster mempool world](https://delvingbitcoin.org/t/an-overview-of-the-cluster-mempool-proposal/393#the-cpfp-carveout-rule-can-no-longer-be-supported-12)). Not really viable.  \n2) 1 Keyed Anchor(with no sharing): Relies V3 + package RBF which means you have to pay for absolute fee of counter-party's package + incremental bytes (slightly worse than replacing just child with adversarial counterparty).  \n3) 1 Shared Keyed Anchor: Relies on V3 + package RBF. Both parties can independently spend the same anchor. Pinning bounded by the child tx size rule. Requires all other outputs be relative timelocked for at least one block, and costs the additional vbytes for a keyspend. Output must be above dust value. Allows for package RBF or direct RBF against anchor spends. Allows for \"theft\" of base anchor value.\n4) Keyless anchor: In benign cases, strictly cheaper to spend, and results in smaller commitment transactions. Allows using any outputs previously encumbered by `1 CSV` to be unlocked for potential CPFP. Downside is it allows general adversaries to try and pin in the same reduced way as the highly motivated counter-party could in (3).\n\nFor more general smart contracting, it has plenty of benefits over CPFP-carveout based solutions: https://github.com/instagibbs/bips/blob/527b007dbf5b9a89895017030183370e05468ae6/bip-ephemeralanchors.mediawiki#motivation\n\n[quote=\"rustynail, post:31, topic:340\"]\n@glozow Is this true? Why aren\u2019t we figuring out this stuff now while the spec is developing? I thought V3 was supposed to fix all these pinning issues.\n[/quote]\n\nIt was previously investigated by me, presented to LN spec group last year in NYC in person, and shelved because all HTLC-Success paths must be pre-signed to commit to some sort of opt-in policy, and either:\n1) If using V3+ephemeral anchors, additional overhead bytes for HLTCs and protocol changes (icy reception to additional bytes)\n2) Some sort of \"V4\" transaction which helps directly with 1-input-1-output case (Investigated this twice; not many people seemed to like this either).\n\nIn summation, we're trying to offer something people can use to safely replace CPFP carveout, whatever that is, while also improving the situation for wallets who would prefer some anti-pin features.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 31,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [
    {
      "id": "heart",
      "type": "emoji",
      "count": 3
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 3,
  "current_user_used_main_reaction": false
}