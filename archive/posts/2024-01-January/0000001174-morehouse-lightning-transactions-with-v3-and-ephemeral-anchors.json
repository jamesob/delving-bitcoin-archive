{
  "id": 1174,
  "name": "Matt Morehouse",
  "username": "morehouse",
  "avatar_template": "/letter_avatar_proxy/v4/letter/m/df705f/{size}.png",
  "created_at": "2024-01-17T22:45:18.634Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"t-bast\" data-post=\"1\" data-topic=\"418\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/t-bast/48/98_2.png\" class=\"avatar\"> t-bast:</div>\n<blockquote>\n<h2>HTLC transactions</h2>\n<p>When using <code>option_anchors_zero_fee_htlc_tx</code>, HTLC transactions don\u2019t pay any mining fees: they are signed with <code>SIGHASH_SINGLE | SIGHASH_ANYONECANPAY</code> to allow the broadcaster to add inputs. We don\u2019t need to change this behavior, it will keep working exactly the same after changing the format of the commitment transaction. I don\u2019t think we should change anything for HTLC transactions, but maybe I\u2019m missing an interesting opportunity here?</p>\n</blockquote>\n</aside>\n<p>At a minimum, we probably want to make HTLC transactions v3.  If we really want to fix pinning, we may also need to make <em>all</em> HTLC spending paths use presigned v3 transactions.</p>\n<h4><a name=\"why-make-htlc-transactions-v3-1\" class=\"anchor\" href=\"#why-make-htlc-transactions-v3-1\"></a>Why make HTLC transactions v3?</h4>\n<ul>\n<li>v3 allows them to be relayed as part of the commitment package.</li>\n<li>I think v3 also prevents MitM pinning attacks where someone extracts the <code>SIGHASH_SINGLE | SIGHASH_ANYONECANPAY</code> signature and uses it to construct and pin a low feerate conflicting transaction.</li>\n</ul>\n<h4><a name=\"fixing-htlc-pinning-2\" class=\"anchor\" href=\"#fixing-htlc-pinning-2\"></a>Fixing HTLC pinning</h4>\n<p>With no other changes, HTLC transactions are still vulnerable to pinning attacks since the remote path can be spent by non-v3 transactions.  For example:</p>\n<ol>\n<li>Alice offers HTLC1 to Mallory, which times out at block T.  Alice also offers HTLC2 to Mallory, which times out at block T+5.</li>\n<li>Mallory has preimages for both HTLCs, but she withholds them.</li>\n<li>At block T-1, Alice broadcasts her commitment with a single child transaction that spends the ephemeral anchor, Alice\u2019s local balance, and HTLC1 via the presigned HTLC-timeout transaction.\n<ul>\n<li>Mallory is unable to pin any competing transaction in this case, due to v3 policy.</li>\n</ul>\n</li>\n<li>The commitment and child transaction confirm in block T.</li>\n<li>At block T+4, Alice broadcasts her HTLC-timeout transaction claiming HTLC2.  At the same time, Mallory broadcasts a low feerate preimage spend of HTLC2 and pins it in mempools.  With good connectivity and timing, Mallory can partition mempools such that Alice\u2019s mempool contains the HTLC-timeout and all other mempools contain the pinned preimage spend.</li>\n</ol>\n<p>Because Mallory\u2019s preimage spend can opt out of v3 policy, she is able to pin her transaction in mempools while preventing Alice from learning the preimage or confirming her HTLC-timeout transaction.</p>\n<p>One way to fix this pinning vector is to start requiring presigned v3 transactions for HTLC remote spends.</p>",
  "post_number": 12,
  "post_type": 1,
  "updated_at": "2024-01-17T22:45:18.634Z",
  "reply_count": 3,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 1,
  "reads": 17,
  "readers_count": 16,
  "score": 23.4,
  "yours": false,
  "topic_id": 418,
  "topic_slug": "lightning-transactions-with-v3-and-ephemeral-anchors",
  "topic_title": "Lightning transactions with v3 and ephemeral anchors",
  "topic_html_title": "Lightning transactions with v3 and ephemeral anchors",
  "category_id": 7,
  "display_username": "Matt Morehouse",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"t-bast, post:1, topic:418\"]\n## HTLC transactions\n\nWhen using `option_anchors_zero_fee_htlc_tx`, HTLC transactions don\u2019t pay any mining fees: they are signed with `SIGHASH_SINGLE | SIGHASH_ANYONECANPAY` to allow the broadcaster to add inputs. We don\u2019t need to change this behavior, it will keep working exactly the same after changing the format of the commitment transaction. I don\u2019t think we should change anything for HTLC transactions, but maybe I\u2019m missing an interesting opportunity here?\n[/quote]\n\nAt a minimum, we probably want to make HTLC transactions v3.  If we really want to fix pinning, we may also need to make *all* HTLC spending paths use presigned v3 transactions.\n\n#### Why make HTLC transactions v3?\n- v3 allows them to be relayed as part of the commitment package.\n- I think v3 also prevents MitM pinning attacks where someone extracts the `SIGHASH_SINGLE | SIGHASH_ANYONECANPAY` signature and uses it to construct and pin a low feerate conflicting transaction.\n\n#### Fixing HTLC pinning\n\nWith no other changes, HTLC transactions are still vulnerable to pinning attacks since the remote path can be spent by non-v3 transactions.  For example:\n\n1. Alice offers HTLC1 to Mallory, which times out at block T.  Alice also offers HTLC2 to Mallory, which times out at block T+5.\n1. Mallory has preimages for both HTLCs, but she withholds them.\n1. At block T-1, Alice broadcasts her commitment with a single child transaction that spends the ephemeral anchor, Alice's local balance, and HTLC1 via the presigned HTLC-timeout transaction.\n    - Mallory is unable to pin any competing transaction in this case, due to v3 policy.\n1. The commitment and child transaction confirm in block T.\n1. At block T+4, Alice broadcasts her HTLC-timeout transaction claiming HTLC2.  At the same time, Mallory broadcasts a low feerate preimage spend of HTLC2 and pins it in mempools.  With good connectivity and timing, Mallory can partition mempools such that Alice's mempool contains the HTLC-timeout and all other mempools contain the pinned preimage spend.\n\nBecause Mallory's preimage spend can opt out of v3 policy, she is able to pin her transaction in mempools while preventing Alice from learning the preimage or confirming her HTLC-timeout transaction.\n\nOne way to fix this pinning vector is to start requiring presigned v3 transactions for HTLC remote spends.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 47,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}