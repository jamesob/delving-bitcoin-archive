{
  "id": 1093,
  "name": "Rusty Russell",
  "username": "rustyrussell",
  "avatar_template": "/user_avatar/delvingbitcoin.org/rustyrussell/{size}/154_2.png",
  "created_at": "2024-01-12T16:22:29.735Z",
  "cooked": "<p>I think the modal hack is awkward, and mildly prefer a new set of opcodes, but I prefer them to be general rather than require conversion codes. This can be done most simply by having new opcodes only deal with unsigned numbers.</p>\n<p>I also have a preference for larger precision: 64 bits can be limiting (though not as limiting as 31 in a protocol with larger amounts!).</p>\n<p>Finally, it\u2019s worth considering carefully what interactions would occur with reenabling MUL, LSHIFT, SUBSTR and the like.</p>\n<p>In case you missed it, please consider: <a href=\"https://rusty.ozlabs.org/2023/12/30/arithmetic-opcodes.html\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Arithmetic Opcodes: What Could They Look Like? | Rusty Russell\u2019s Quiet Corner of The Internet</a></p>",
  "post_number": 19,
  "post_type": 1,
  "updated_at": "2024-01-12T16:22:29.735Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 14,
  "readers_count": 13,
  "score": 32.8,
  "yours": false,
  "topic_id": 397,
  "topic_slug": "64-bit-arithmetic-soft-fork",
  "topic_title": "64 bit arithmetic soft fork",
  "topic_html_title": "64 bit arithmetic soft fork",
  "category_id": 7,
  "display_username": "Rusty Russell",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "I think the modal hack is awkward, and mildly prefer a new set of opcodes, but I prefer them to be general rather than require conversion codes. This can be done most simply by having new opcodes only deal with unsigned numbers.\n\nI also have a preference for larger precision: 64 bits can be limiting (though not as limiting as 31 in a protocol with larger amounts!).\n\nFinally, it's worth considering carefully what interactions would occur with reenabling MUL, LSHIFT, SUBSTR and the like.\n\nIn case you missed it, please consider: https://rusty.ozlabs.org/2023/12/30/arithmetic-opcodes.html",
  "actions_summary": [
    {
      "id": 2,
      "count": 2
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 137,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 2
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 2,
  "current_user_used_main_reaction": false
}