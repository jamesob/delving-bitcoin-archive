{
  "id": 1097,
  "name": "Suhas Daftuar",
  "username": "sdaftuar",
  "avatar_template": "/letter_avatar_proxy/v4/letter/s/0ea827/{size}.png",
  "created_at": "2024-01-12T19:27:17.249Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"harding\" data-post=\"5\" data-topic=\"393\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/harding/48/6_2.png\" class=\"avatar\"> harding:</div>\n<blockquote>\n<p>I think we can reformulate carveout\u2019s rules as used by LN:</p>\n<ol>\n<li>A carveout is 1,000 vbytes or less</li>\n<li>A carveout has exactly one unconfirmed ancestor (it\u2019s parent)</li>\n<li>A carveout\u2019s parent has no unconfirmed ancestors</li>\n<li>A carveout is either the first or second spent output of a transaction that has fewer than three of its outputs spent so far</li>\n</ol>\n</blockquote>\n</aside>\n<p>Just thought it is worth noting here that in trying to think about what the LN carveout rule should match for, rules 2, 3 and 4 are all about the transaction graph topology \u2013 and yet currently, the LN anchors have no enforced topology restrictions (beyond their construction of having 2 spendable outputs \u2013 but those outputs can be spent arbitrarily).  If we had a way to enforce that spends of an anchor output were not permitted to have additional children or pull in additional parents, then this problem again becomes easy \u2013 which is exactly what v3 contemplates.</p>",
  "post_number": 7,
  "post_type": 1,
  "updated_at": "2024-01-12T19:27:17.249Z",
  "reply_count": 0,
  "reply_to_post_number": 5,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 7,
  "readers_count": 6,
  "score": 1.4,
  "yours": false,
  "topic_id": 393,
  "topic_slug": "an-overview-of-the-cluster-mempool-proposal",
  "topic_title": "An overview of the cluster mempool proposal",
  "topic_html_title": "An overview of the cluster mempool proposal",
  "category_id": 8,
  "display_username": "Suhas Daftuar",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"harding, post:5, topic:393\"]\nI think we can reformulate carveout\u2019s rules as used by LN:\n\n1. A carveout is 1,000 vbytes or less\n2. A carveout has exactly one unconfirmed ancestor (it\u2019s parent)\n3. A carveout\u2019s parent has no unconfirmed ancestors\n4. A carveout is either the first or second spent output of a transaction that has fewer than three of its outputs spent so far\n[/quote]\n\nJust thought it is worth noting here that in trying to think about what the LN carveout rule should match for, rules 2, 3 and 4 are all about the transaction graph topology -- and yet currently, the LN anchors have no enforced topology restrictions (beyond their construction of having 2 spendable outputs -- but those outputs can be spent arbitrarily).  If we had a way to enforce that spends of an anchor output were not permitted to have additional children or pull in additional parents, then this problem again becomes easy -- which is exactly what v3 contemplates.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 95,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [
    {
      "id": "heart",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false
}