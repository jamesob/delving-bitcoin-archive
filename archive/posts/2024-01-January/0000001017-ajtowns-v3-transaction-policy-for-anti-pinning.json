{
  "id": 1017,
  "name": "Anthony Towns",
  "username": "ajtowns",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/3_2.png",
  "created_at": "2024-01-08T10:53:07.926Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"harding\" data-post=\"6\" data-topic=\"340\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/harding/48/6_2.png\" class=\"avatar\"> harding:</div>\n<blockquote>\n<p>However, it\u2019s easy to turn those rules into consensus rules: a block may only include a parent ephemeral anchor if it also includes the child spend.</p>\n</blockquote>\n</aside>\n<p>I don\u2019t think that works: if you get to the point where miners offer an API for out of band fee payments that\u2019s trustworthy enough and discounted enough that it sees wide adoption, leading to a centralisation risk, then if you did have a soft fork to require ephemeral anchors be spent, then those miners could work around your soft fork as follows:</p>\n<ul>\n<li>create a \u201cnouveau ephemeral anchors\u201d BIP, with the same behaviour as before the soft-fork, but with a different <code>scriptPubKey</code> pattern</li>\n<li>flood the network with nodes that relay according to the new BIP, have those nodes preferentially peer with each other to ensure there aren\u2019t disconnected subgraphs</li>\n<li>get this implemented by the devs that had already integrated with their API</li>\n<li>push the patch to core noting that it\u2019s in wide use on the network</li>\n<li>profit</li>\n</ul>\n<p>I think the sort of soft-fork you be okay if it was in line with economic incentives (ie, the only time an ephemeral anchor is in a block but not immediately spent is people testing things on regtest/signet/testnet, or due to bugs), but if the economic incentives are strongly pushing the other way (miners, wallet devs and users all collaborating to save a buck despite the centralisation risk), I don\u2019t think a soft fork here would actually help.</p>\n<p>(The other soft-fork approach would be: \u201can ephemeral anchor output can only be spent in the same block that it was created; it\u2019s removed from the utxo set once the block is completely processed\u201d. That resolves the \u201cbugs lead to dust in the utxo set\u201d issue, but doesn\u2019t touch out-of-band-payment incentives, and introduces the potential for the child tx to become invalid in a reorg, if for some reason it isn\u2019t included in the same block as its parent)</p>",
  "post_number": 24,
  "post_type": 1,
  "updated_at": "2024-01-08T10:53:07.926Z",
  "reply_count": 0,
  "reply_to_post_number": 6,
  "quote_count": 1,
  "incoming_link_count": 3,
  "reads": 15,
  "readers_count": 14,
  "score": 33.0,
  "yours": false,
  "topic_id": 340,
  "topic_slug": "v3-transaction-policy-for-anti-pinning",
  "topic_title": "V3 transaction policy for anti-pinning",
  "topic_html_title": "V3 transaction policy for anti-pinning",
  "category_id": 7,
  "display_username": "Anthony Towns",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"harding, post:6, topic:340\"]\nHowever, it\u2019s easy to turn those rules into consensus rules: a block may only include a parent ephemeral anchor if it also includes the child spend.\n[/quote]\n\nI don't think that works: if you get to the point where miners offer an API for out of band fee payments that's trustworthy enough and discounted enough that it sees wide adoption, leading to a centralisation risk, then if you did have a soft fork to require ephemeral anchors be spent, then those miners could work around your soft fork as follows:\n\n * create a \"nouveau ephemeral anchors\" BIP, with the same behaviour as before the soft-fork, but with a different `scriptPubKey` pattern\n * flood the network with nodes that relay according to the new BIP, have those nodes preferentially peer with each other to ensure there aren't disconnected subgraphs\n * get this implemented by the devs that had already integrated with their API\n * push the patch to core noting that it's in wide use on the network\n * profit\n\nI think the sort of soft-fork you be okay if it was in line with economic incentives (ie, the only time an ephemeral anchor is in a block but not immediately spent is people testing things on regtest/signet/testnet, or due to bugs), but if the economic incentives are strongly pushing the other way (miners, wallet devs and users all collaborating to save a buck despite the centralisation risk), I don't think a soft fork here would actually help.\n\n(The other soft-fork approach would be: \"an ephemeral anchor output can only be spent in the same block that it was created; it's removed from the utxo set once the block is completely processed\". That resolves the \"bugs lead to dust in the utxo set\" issue, but doesn't touch out-of-band-payment incentives, and introduces the potential for the child tx to become invalid in a reorg, if for some reason it isn't included in the same block as its parent)",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": true,
  "admin": true,
  "staff": true,
  "user_id": 3,
  "hidden": false,
  "trust_level": 4,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false
}