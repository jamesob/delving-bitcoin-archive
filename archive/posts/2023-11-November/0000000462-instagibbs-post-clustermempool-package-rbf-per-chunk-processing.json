{
  "id": 462,
  "name": "Gregory Sanders",
  "username": "instagibbs",
  "avatar_template": "/user_avatar/delvingbitcoin.org/instagibbs/{size}/28_2.png",
  "created_at": "2023-11-22T17:03:03.522Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"sipa\" data-post=\"1\" data-topic=\"190\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/sipa/48/1100_2.png\" class=\"avatar\"> sipa:</div>\n<blockquote>\n<ul>\n<li>\n<ol>\n<li><strong>Deduplication</strong>: remove from <code>PKG</code> any transaction that\u2019s already in the receiver\u2019s mempool.</li>\n</ol>\n</li>\n</ul>\n</blockquote>\n</aside>\n<p>speaking of this step, I\u2019m wondering if it would make sense to consider same-txid-different-wtxid as an RBF conflict? Today we simply drop the new tx and report the existing wtxid in the mempool.</p>\n<p>Post-cluster mempool if the conflicting tx is larger, dedup it with smaller. If it is smaller than existing and is in a new chunk that satisfies the package RBF rules, I think wtxid-replacement works naturally without introducing free relay. As a side benefit it \u201cprefers\u201d smaller witnesses for relay, reducing benefits of witness stuffing, e.g., inscriptions during a coinjoin.</p>",
  "post_number": 10,
  "post_type": 1,
  "posts_count": 16,
  "updated_at": "2023-11-22T17:03:43.226Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 47,
  "reads": 27,
  "readers_count": 26,
  "score": 255.4,
  "yours": false,
  "topic_id": 190,
  "topic_slug": "post-clustermempool-package-rbf-per-chunk-processing",
  "topic_title": "Post-clustermempool package RBF: per-chunk processing",
  "topic_html_title": "Post-clustermempool package RBF: per-chunk processing",
  "category_id": 8,
  "display_username": "Gregory Sanders",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"sipa, post:1, topic:190\"]\n* 1. **Deduplication**: remove from `PKG` any transaction that\u2019s already in the receiver\u2019s mempool.\n[/quote]\n\nspeaking of this step, I'm wondering if it would make sense to consider same-txid-different-wtxid as an RBF conflict? Today we simply drop the new tx and report the existing wtxid in the mempool.\n\nPost-cluster mempool if the conflicting tx is larger, dedup it with smaller. If it is smaller than existing and is in a new chunk that satisfies the package RBF rules, I think wtxid-replacement works naturally without introducing free relay. As a side benefit it \"prefers\" smaller witnesses for relay, reducing benefits of witness stuffing, e.g., inscriptions during a coinjoin.",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 31,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "speaking of this step, I\u2019m wondering if it would make sense to consider same-txid-different-wtxid as an RBF conflict? Today we simply drop the new tx and report the existing wtxid in the mempool. \nPost-cluster mempool if the conflicting tx is larger, dedup it with smaller. If it is smaller than exi&hellip;",
  "truncated": true,
  "post_url": "/t/post-clustermempool-package-rbf-per-chunk-processing/190/10",
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}