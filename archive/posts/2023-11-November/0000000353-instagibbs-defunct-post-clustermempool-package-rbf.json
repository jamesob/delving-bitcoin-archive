{
  "id": 353,
  "name": "Gregory Sanders",
  "username": "instagibbs",
  "avatar_template": "/user_avatar/delvingbitcoin.org/instagibbs/{size}/28_2.png",
  "created_at": "2023-11-08T22:35:42.625Z",
  "cooked": "<p>How does <code>minrelay</code> fit into this paradigm?</p>\n<aside class=\"quote no-group\" data-username=\"sipa\" data-post=\"1\" data-topic=\"173\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/sipa/48/1100_2.png\" class=\"avatar\"> sipa:</div>\n<blockquote>\n<p><strong>Pre-eviction</strong>: remove from <code>PKG</code> any chunk whose feerate is below <code>mempoolminfee</code> or below <code>incremental_relay_feerate</code>. [DoS protection]</p>\n</blockquote>\n</aside>\n<p>I think this links back to our conversation yesterday. If you have two same-unit-size txs, A and B, where A is 0-fee, B is 1 fee, and <code>mempoolminfee</code> is 1, then B would be accepted when submitted by itself, but rejected as a package <code>A+B</code>. In this scenario of course, we\u2019re only considering \u201cchunks\u201d since we\u2019re not connecting the package to the mempool clusters.</p>\n<p>Once this check is run, we know everything in these chunks \u201cpays for itself\u201d, and can continue on safely, even if <code>A+B</code> ends up with a chunk score less than <code>minrelay</code>.</p>\n<aside class=\"quote no-group\" data-username=\"sipa\" data-post=\"1\" data-topic=\"173\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/sipa/48/1100_2.png\" class=\"avatar\"> sipa:</div>\n<blockquote>\n<p><strong>Verification</strong>: verify all transactions in <code>PKG</code> using policy/standardness rules, against UTXOs gathered from chain, mempool, and <code>PKG</code> itself.</p>\n</blockquote>\n</aside>\n<p>I assume this is where scripts are being run as well?</p>\n<aside class=\"quote no-group\" data-username=\"sipa\" data-post=\"1\" data-topic=\"173\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/sipa/48/1100_2.png\" class=\"avatar\"> sipa:</div>\n<blockquote>\n<p><strong>Addition</strong> One by one, add the transactions of <code>PKG</code> to mempool performing consensus validation.</p>\n</blockquote>\n</aside>\n<p>What kind of failures are possible here if any?</p>\n<p>I assume <code>TimeToSize</code> is another step we want, after 12.</p>\n<p>edit: misunderstood the Q2 scenario, deleted</p>",
  "post_number": 2,
  "post_type": 1,
  "posts_count": 11,
  "updated_at": "2023-11-08T22:44:10.093Z",
  "reply_count": 1,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 17,
  "readers_count": 16,
  "score": 8.4,
  "yours": false,
  "topic_id": 173,
  "topic_slug": "defunct-post-clustermempool-package-rbf",
  "topic_title": "[DEFUNCT] Post-clustermempool Package RBF",
  "topic_html_title": "[DEFUNCT] Post-clustermempool Package RBF",
  "category_id": 8,
  "display_username": "Gregory Sanders",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "How does `minrelay` fit into this paradigm?\n\n[quote=\"sipa, post:1, topic:173\"]\n**Pre-eviction**: remove from `PKG` any chunk whose feerate is below `mempoolminfee` or below `incremental_relay_feerate`. [DoS protection]\n[/quote]\n\nI think this links back to our conversation yesterday. If you have two same-unit-size txs, A and B, where A is 0-fee, B is 1 fee, and `mempoolminfee` is 1, then B would be accepted when submitted by itself, but rejected as a package `A+B`. In this scenario of course, we're only considering \"chunks\" since we're not connecting the package to the mempool clusters. \n\nOnce this check is run, we know everything in these chunks \"pays for itself\", and can continue on safely, even if `A+B` ends up with a chunk score less than `minrelay`.\n\n[quote=\"sipa, post:1, topic:173\"]\n**Verification**: verify all transactions in `PKG` using policy/standardness rules, against UTXOs gathered from chain, mempool, and `PKG` itself.\n[/quote]\n\nI assume this is where scripts are being run as well?\n\n[quote=\"sipa, post:1, topic:173\"]\n**Addition** One by one, add the transactions of `PKG` to mempool performing consensus validation.\n[/quote]\n\nWhat kind of failures are possible here if any?\n\nI assume `TimeToSize` is another step we want, after 12.\n\nedit: misunderstood the Q2 scenario, deleted",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 31,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "How does minrelay fit into this paradigm? \n\nI think this links back to our conversation yesterday. If you have two same-unit-size txs, A and B, where A is 0-fee, B is 1 fee, and mempoolminfee is 1, then B would be accepted when submitted by itself, but rejected as a package A+B. In this scenario of &hellip;",
  "truncated": true,
  "post_url": "/t/defunct-post-clustermempool-package-rbf/173/2",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}