{
  "id": 357,
  "name": "Anthony Towns",
  "username": "ajtowns",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/417_2.png",
  "created_at": "2023-11-09T00:30:37.503Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"sipa\" data-post=\"1\" data-topic=\"173\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/sipa/48/1100_2.png\" class=\"avatar\"> sipa:</div>\n<blockquote>\n<p><strong>Pre-eviction</strong>: remove from <code>PKG</code> any chunk whose feerate is below <code>mempoolminfee</code> or below <code>incremental_relay_feerate</code>. [DoS protection]</p>\n</blockquote>\n</aside>\n<p>Anything done before script-validation isn\u2019t really DoS protection, it\u2019s just an optimisation?</p>\n<aside class=\"quote no-group\" data-username=\"sipa\" data-post=\"1\" data-topic=\"173\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/sipa/48/1100_2.png\" class=\"avatar\"> sipa:</div>\n<blockquote>\n<p><strong>Verification</strong>: verify all transactions in <code>PKG</code> using policy/standardness rules, against UTXOs gathered from chain, mempool, and <code>PKG</code> itself.</p>\n</blockquote>\n</aside>\n<aside class=\"quote no-group\" data-username=\"sipa\" data-post=\"1\" data-topic=\"173\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/sipa/48/1100_2.png\" class=\"avatar\"> sipa:</div>\n<blockquote>\n<p>(At this point the package is valid)</p>\n</blockquote>\n</aside>\n<p>\u201cAt this point the package is <em>desirable</em>\u201d perhaps? We\u2019ve established it\u2019s got a nice feerate, etc, but not done the consensus checks from 12, so it may actually be garbage. Could call it the \u201cqualification\u201d stage or something.</p>\n<aside class=\"quote no-group\" data-username=\"sipa\" data-post=\"1\" data-topic=\"173\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/sipa/48/1100_2.png\" class=\"avatar\"> sipa:</div>\n<blockquote>\n<p>Q1. Do we need to run the sequence of operations inside (3) separately for each connected component inside <code>PKG</code></p>\n</blockquote>\n</aside>\n<p>I think we should do something along these lines for packages received over p2p, as otherwise it seems like something you could use for targeted tx eviction? But that could be as simple as restricting p2p package relay to packages made up of a single tx and its ancestors?</p>\n<aside class=\"quote no-group quote-modified\" data-username=\"sipa\" data-post=\"1\" data-topic=\"173\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/sipa/48/1100_2.png\" class=\"avatar\"> sipa:</div>\n<blockquote>\n<p>Q2. More generally, is this \u201cgood enough\u201d? One example is this:  [\u2026]</p>\n</blockquote>\n</aside>\n<p>Pictures:</p>\n<pre data-code-height=\"169\" data-code-wrap=\"mermaid\"><code class=\"lang-mermaid\">graph TD\n    A[A: 100]--&gt;B[B: 4]\n    A--&gt;C[C: 5]\n    C'[ C': 6] x-- conflicts --x C\n</code></pre>\n<p>Treating <code>A+B+C</code> as a unit has your mempool do this:</p>\n<pre data-code-height=\"84\" data-code-wrap=\"mermaid\"><code class=\"lang-mermaid\">graph LR\n  m1[C': 6] -- +ABC --&gt; m2[A, C, B: 100, 5, 4] -- +C --&gt; m3[A,C', B: 100, 6, 4]\n</code></pre>\n<p>Doing ancestor-first package acceptance would work for this case: your mempool would be:</p>\n<pre data-code-height=\"59\" data-code-wrap=\"mermaid\"><code class=\"lang-mermaid\">graph LR\n  m1[C': 6] -- +A --&gt; m2[A, C': 100, 6] -- rej C --&gt; m3[A, C': 100, 6] -- +B --&gt; m4[A,C', B: 100, 6, 4]\n</code></pre>\n<p>Maybe you can do ancestor-first package acceptance via chunking? Once you linearise <code>NEW</code> go through the chunks with new txs in order, and add just those txs to the mempool; updating <code>OLD</code>, <code>NEW</code> and <code>CON</code> as you go? If you get a chunk that\u2019s not worth adding to the mempool (or that fails validation), abort completely.</p>",
  "post_number": 3,
  "post_type": 1,
  "posts_count": 11,
  "updated_at": "2023-11-09T00:30:37.503Z",
  "reply_count": 1,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 14,
  "readers_count": 13,
  "score": 7.8,
  "yours": false,
  "topic_id": 173,
  "topic_slug": "defunct-post-clustermempool-package-rbf",
  "topic_title": "[DEFUNCT] Post-clustermempool Package RBF",
  "topic_html_title": "[DEFUNCT] Post-clustermempool Package RBF",
  "category_id": 8,
  "display_username": "Anthony Towns",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"sipa, post:1, topic:173\"]\n**Pre-eviction**: remove from `PKG` any chunk whose feerate is below `mempoolminfee` or below `incremental_relay_feerate`. [DoS protection]\n[/quote]\n\nAnything done before script-validation isn't really DoS protection, it's just an optimisation?\n\n\n[quote=\"sipa, post:1, topic:173\"]\n**Verification**: verify all transactions in `PKG` using policy/standardness rules, against UTXOs gathered from chain, mempool, and `PKG` itself.\n[/quote]\n\n[quote=\"sipa, post:1, topic:173\"]\n(At this point the package is valid)\n[/quote]\n\n\"At this point the package is *desirable*\" perhaps? We've established it's got a nice feerate, etc, but not done the consensus checks from 12, so it may actually be garbage. Could call it the \"qualification\" stage or something.\n\n[quote=\"sipa, post:1, topic:173\"]\nQ1. Do we need to run the sequence of operations inside (3) separately for each connected component inside `PKG`\n[/quote]\n\nI think we should do something along these lines for packages received over p2p, as otherwise it seems like something you could use for targeted tx eviction? But that could be as simple as restricting p2p package relay to packages made up of a single tx and its ancestors?\n\n[quote=\"sipa, post:1, topic:173\"]\nQ2. More generally, is this \u201cgood enough\u201d? One example is this:  [...]\n[/quote]\n\nPictures:\n\n```mermaid height=169,auto\ngraph TD\n    A[A: 100]-->B[B: 4]\n    A-->C[C: 5]\n    C'[ C': 6] x-- conflicts --x C\n```\n\nTreating `A+B+C` as a unit has your mempool do this:\n\n```mermaid height=84,auto\ngraph LR\n  m1[C': 6] -- +ABC --> m2[A, C, B: 100, 5, 4] -- +C --> m3[A,C', B: 100, 6, 4]\n```\n\nDoing ancestor-first package acceptance would work for this case: your mempool would be:\n\n```mermaid height=59,auto\ngraph LR\n  m1[C': 6] -- +A --> m2[A, C': 100, 6] -- rej C --> m3[A, C': 100, 6] -- +B --> m4[A,C', B: 100, 6, 4]\n```\n\nMaybe you can do ancestor-first package acceptance via chunking? Once you linearise `NEW` go through the chunks with new txs in order, and add just those txs to the mempool; updating `OLD`, `NEW` and `CON` as you go? If you get a chunk that's not worth adding to the mempool (or that fails validation), abort completely.",
  "actions_summary": [],
  "moderator": true,
  "admin": true,
  "staff": true,
  "user_id": 3,
  "hidden": false,
  "trust_level": 4,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Anything done before script-validation isn\u2019t really DoS protection, it\u2019s just an optimisation? \n\n\n\u201cAt this point the package is desirable\u201d perhaps? We\u2019ve established it\u2019s got a nice feerate, etc, but not done the consensus checks from 12, so it may actually be garbage. Could call it the \u201cqualificat&hellip;",
  "truncated": true,
  "post_url": "/t/defunct-post-clustermempool-package-rbf/173/3",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}