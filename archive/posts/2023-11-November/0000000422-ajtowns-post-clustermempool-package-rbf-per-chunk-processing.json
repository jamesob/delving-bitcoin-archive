{
  "id": 422,
  "name": "Anthony Towns",
  "username": "ajtowns",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/417_2.png",
  "created_at": "2023-11-16T02:44:48.213Z",
  "cooked": "<aside class=\"quote no-group quote-modified\" data-username=\"sipa\" data-post=\"7\" data-topic=\"190\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/sipa/48/1100_2.png\" class=\"avatar\"> sipa:</div>\n<blockquote>\n<aside class=\"quote no-group\" data-username=\"instagibbs\" data-post=\"6\" data-topic=\"190\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/instagibbs/48/28_2.png\" class=\"avatar\"> instagibbs:</div>\n<blockquote>\n<p>If we get some \u201cmalicious\u201d failure like signature failure I think it makes sense to drop the rest of the package potentially. ala 26711.</p>\n</blockquote>\n</aside>\n<p>What if it\u2019s a failure due to recent softfork or so?</p>\n</blockquote>\n</aside>\n<p>Hmm, a possible example:</p>\n<ul>\n<li>Node X: supports taproot, some annex features, mempool=300MB, minfee=10sat/vb</li>\n<li>Node Y: support taproot only, mempool=1GB, minfee=5sat/vb</li>\n<li>Tx P: normal taproot tx, feerate=6sat/vb</li>\n<li>Tx C: uses new annex feature when spending P, feerate=20sat/vb</li>\n</ul>\n<p>X will only accept P because it\u2019s CPFPed by C and will put them in the same chunk, and perhaps relay them together; but Y will reject C because it can\u2019t validate the new annex feature that C is using.</p>\n<p>However, if our logic is:</p>\n<ol>\n<li>X accepts new txs P and C</li>\n<li>X sorts txs by depth/ancestor count, then fee rate, so P then C</li>\n<li>X considers relaying P: it\u2019s above Y\u2019s minfee, so relay it</li>\n<li>X considers relaying C: it\u2019s above Y\u2019s minfee, relay it too</li>\n</ol>\n<p>Then Y will accept P at step 3 and reject C at step 4 and everything is fine. And if X was relaying to Z which was running the same software/parameters as X, it would look like:</p>\n<ol>\n<li>X accepts new txs P and C</li>\n<li>X sorts txs by depth/ancestor count, then fee rate, so P then C</li>\n<li>X considers relaying P: it\u2019s below Z\u2019s minfee, so skip it</li>\n<li>X considers relaying C: it\u2019s above Z\u2019s minfee, relay it</li>\n<li>Z does orphan resolution, asking for C\u2019s chunk</li>\n<li>X says the chunk is P+C</li>\n<li>Z requests P</li>\n<li>Z accepts new txs P and C</li>\n</ol>\n<p>Note that if Z decided to reject C, there wouldn\u2019t be much point reconsidering P \u2013 if it has been above minfee, it would have already been relayed in its own right.</p>",
  "post_number": 8,
  "post_type": 1,
  "posts_count": 16,
  "updated_at": "2023-11-16T02:44:48.213Z",
  "reply_count": 0,
  "reply_to_post_number": 7,
  "quote_count": 2,
  "incoming_link_count": 2,
  "reads": 27,
  "readers_count": 26,
  "score": 45.4,
  "yours": false,
  "topic_id": 190,
  "topic_slug": "post-clustermempool-package-rbf-per-chunk-processing",
  "topic_title": "Post-clustermempool package RBF: per-chunk processing",
  "topic_html_title": "Post-clustermempool package RBF: per-chunk processing",
  "category_id": 8,
  "display_username": "Anthony Towns",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"sipa, post:7, topic:190\"]\n[quote=\"instagibbs, post:6, topic:190\"]\nIf we get some \u201cmalicious\u201d failure like signature failure I think it makes sense to drop the rest of the package potentially. ala 26711.\n[/quote]\n\nWhat if it\u2019s a failure due to recent softfork or so?\n[/quote]\n\nHmm, a possible example:\n\n * Node X: supports taproot, some annex features, mempool=300MB, minfee=10sat/vb\n * Node Y: support taproot only, mempool=1GB, minfee=5sat/vb\n * Tx P: normal taproot tx, feerate=6sat/vb\n * Tx C: uses new annex feature when spending P, feerate=20sat/vb\n\nX will only accept P because it's CPFPed by C and will put them in the same chunk, and perhaps relay them together; but Y will reject C because it can't validate the new annex feature that C is using.\n\nHowever, if our logic is:\n\n 1. X accepts new txs P and C\n 2. X sorts txs by depth/ancestor count, then fee rate, so P then C\n 3. X considers relaying P: it's above Y's minfee, so relay it\n 4. X considers relaying C: it's above Y's minfee, relay it too\n\nThen Y will accept P at step 3 and reject C at step 4 and everything is fine. And if X was relaying to Z which was running the same software/parameters as X, it would look like:\n\n 1. X accepts new txs P and C\n 2. X sorts txs by depth/ancestor count, then fee rate, so P then C\n 3. X considers relaying P: it's below Z's minfee, so skip it\n 4. X considers relaying C: it's above Z's minfee, relay it\n 5. Z does orphan resolution, asking for C's chunk\n 6. X says the chunk is P+C\n 7. Z requests P\n 8. Z accepts new txs P and C\n\nNote that if Z decided to reject C, there wouldn't be much point reconsidering P -- if it has been above minfee, it would have already been relayed in its own right.",
  "actions_summary": [
    {
      "id": 2,
      "count": 2
    }
  ],
  "moderator": true,
  "admin": true,
  "staff": true,
  "user_id": 3,
  "hidden": false,
  "trust_level": 4,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "What if it\u2019s a failure due to recent softfork or so? \n\n\nHmm, a possible example: \n\nNode X: supports taproot, some annex features, mempool=300MB, minfee=10sat/vb\nNode Y: support taproot only, mempool=1GB, minfee=5sat/vb\nTx P: normal taproot tx, feerate=6sat/vb\nTx C: uses new annex feature when spend&hellip;",
  "truncated": true,
  "post_url": "/t/post-clustermempool-package-rbf-per-chunk-processing/190/8",
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 2
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 2,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}