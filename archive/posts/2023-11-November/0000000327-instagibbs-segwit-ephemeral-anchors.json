{
  "id": 327,
  "name": "Gregory Sanders",
  "username": "instagibbs",
  "avatar_template": "/user_avatar/delvingbitcoin.org/instagibbs/{size}/28_2.png",
  "created_at": "2023-11-02T17:14:32.871Z",
  "cooked": "<p>Ephemeral Anchors are the concept where we can have a key-less output type that is allowed to have dusty values, provided they are atomically spent in the mempool.</p>\n<p>Implementation and BIP text here for more background: <a href=\"https://github.com/bitcoin/bitcoin/pull/26403\" class=\"inline-onebox\">policy: Ephemeral anchors by instagibbs \u00b7 Pull Request #26403 \u00b7 bitcoin/bitcoin \u00b7 GitHub</a></p>\n<p>One large drawback of this approach is that it relies on Bitcoin\u2019s legacy script. This means that the transaction <em>spending</em> the anchor is txid-malleable by miners. This is due to legacy script\u2019s lack of CLEANSTACK consensus rules. This means composition with other protocols like splicing can be problematic, where the pre-signed transaction chains can be broken unless a new signature type like ANYPREVOUT or similar is used.</p>\n<p>At first blush, something like wsh(OP_TRUE) neatly solves this, at the expense of 33 more output vbytes, and a witness script of \u201cOP_TRUE\u201d being revealed. This seems pretty costly, and theoretically could also already be used in mainnet, both for output creation and redemption.</p>\n<p>Instead, why not just utilize bip141\u2019s softfork for witness programs, and use an otherwise undefined witness program? For example, replace the script \u201cOP_TRUE\u201d with \u201cOP_TRUE 0xffff\u201d which triggers the scriptSig rule in bip141:</p>\n<blockquote>\n<p>The scriptSig must be exactly empty or validation fails.</p>\n</blockquote>\n<p>But is otherwise undefined, allowing an empty witness to spend. This is 3 additional vbytes over the original proposal total, and is implemented here:</p>\n<aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://github.com/instagibbs/bitcoin/commits/ephemeral-anchors-segwit\">\n  <header class=\"source\">\n      <img src=\"https://github.githubassets.com/favicons/favicon.svg\" class=\"site-icon\" width=\"32\" height=\"32\">\n\n      <a href=\"https://github.com/instagibbs/bitcoin/commits/ephemeral-anchors-segwit\" target=\"_blank\" rel=\"noopener\">GitHub</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:690/344;\"><img src=\"https://delvingbitcoin.org/uploads/default/optimized/1X/9ec08019148e64e4512988e78d3624c82c2ad92f_2_690x345.png\" class=\"thumbnail\" data-dominant-color=\"F5F3F4\" width=\"690\" height=\"345\"></div>\n\n<h3><a href=\"https://github.com/instagibbs/bitcoin/commits/ephemeral-anchors-segwit\" target=\"_blank\" rel=\"noopener\">Commits \u00b7 instagibbs/bitcoin</a></h3>\n\n  <p>Bitcoin integration/staging tree. Contribute to instagibbs/bitcoin development by creating an account on GitHub.</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>Note that these (non-dust)outputs are already standard to <em>create</em>, but not to spend, which is the additional relay relaxation in the commit.</p>\n<p>The branch will actually get smaller since I\u2019m not messing with OP_TRUE outputs anymore which tests in master love to use.</p>",
  "post_number": 1,
  "post_type": 1,
  "updated_at": "2023-11-02T17:50:55.522Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 11,
  "reads": 9,
  "readers_count": 8,
  "score": 51.4,
  "yours": false,
  "topic_id": 160,
  "topic_slug": "segwit-ephemeral-anchors",
  "topic_title": "Segwit Ephemeral Anchors",
  "topic_html_title": "Segwit Ephemeral Anchors",
  "category_id": 7,
  "display_username": "Gregory Sanders",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 3,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Ephemeral Anchors are the concept where we can have a key-less output type that is allowed to have dusty values, provided they are atomically spent in the mempool.\n\nImplementation and BIP text here for more background: https://github.com/bitcoin/bitcoin/pull/26403\n\nOne large drawback of this approach is that it relies on Bitcoin's legacy script. This means that the transaction *spending* the anchor is txid-malleable by miners. This is due to legacy script's lack of CLEANSTACK consensus rules. This means composition with other protocols like splicing can be problematic, where the pre-signed transaction chains can be broken unless a new signature type like ANYPREVOUT or similar is used.\n\nAt first blush, something like wsh(OP_TRUE) neatly solves this, at the expense of 33 more output vbytes, and a witness script of \"OP_TRUE\" being revealed. This seems pretty costly, and theoretically could also already be used in mainnet, both for output creation and redemption.\n\nInstead, why not just utilize bip141's softfork for witness programs, and use an otherwise undefined witness program? For example, replace the script \"OP_TRUE\" with \"OP_TRUE 0xffff\" which triggers the scriptSig rule in bip141:\n\n> The scriptSig must be exactly empty or validation fails.\n\nBut is otherwise undefined, allowing an empty witness to spend. This is 3 additional vbytes over the original proposal total, and is implemented here:\n\nhttps://github.com/instagibbs/bitcoin/commits/ephemeral-anchors-segwit\n\nNote that these (non-dust)outputs are already standard to *create*, but not to spend, which is the additional relay relaxation in the commit.\n\nThe branch will actually get smaller since I'm not messing with OP_TRUE outputs anymore which tests in master love to use.",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 31,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false
}