{
  "id": 404,
  "name": "Anthony Towns",
  "username": "ajtowns",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/417_2.png",
  "created_at": "2023-11-14T16:54:13.167Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"ajtowns\" data-post=\"7\" data-topic=\"173\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ajtowns/48/3_2.png\" class=\"avatar\"> ajtowns:</div>\n<blockquote>\n<p>That requires that an honest peer actually knows enough to even try relaying the right solution.</p>\n</blockquote>\n</aside>\n<p>FWIW, I lightly convinced myself that trying to find the best subset of a proposed package is probably too hard (ie, depends on the state of all affected clusters in the mempool, and if replacement is involved, there\u2019s no nice greedy way of working out which part to try first).</p>\n<p>So in that case, I think maybe something like this could work?</p>\n<ul>\n<li>Get a proposed package from a peer. Resolve any missing parents. Try adding it to your mempool atomically via the method described at the top of this thread \u2013 if it evicts something it shouldn\u2019t, that\u2019s fine \u2013 two steps forward, one step back still adds up to one step forward.</li>\n<li>Update your clusters, relinearise, do cheap optimisations.</li>\n<li>Relay the newly added transactions (individually) to your peers.</li>\n<li>If any of your peers ask for you to give them an \u201cancestor\u201d package for a tx <code>T</code>, find the chunk that <code>T</code> is in, and give them a package containing all the txs in that chunk as well as all those txs\u2019 in-mempool ancestors. (Then they do the same thing, and repeat)</li>\n</ul>\n<p>I think that approach would minimise the spread of unnecessary-evictions, while also being fairly simple. Changing \u201cancestor\u201d packages to \u201cchunk\u201d packages is a bit hand-wavy, but I don\u2019t think requires different messages compared to the current bip 331 draft?</p>\n<p>Push-relay of chunk packages might allow you to propagate hard-to-find optimal chunks across the network though. One way to get \u201cinfinite computation\u201d might be to use the p2p network as a distributed system \u2013 each node picks a random cluster that\u2019s near the top of the mempool to optimise every now and then, and if they find something good, they spread it out to everyone.</p>",
  "post_number": 8,
  "post_type": 1,
  "posts_count": 11,
  "updated_at": "2023-11-14T16:54:13.167Z",
  "reply_count": 1,
  "reply_to_post_number": 7,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 9,
  "readers_count": 8,
  "score": 6.8,
  "yours": false,
  "topic_id": 173,
  "topic_slug": "defunct-post-clustermempool-package-rbf",
  "topic_title": "[DEFUNCT] Post-clustermempool Package RBF",
  "topic_html_title": "[DEFUNCT] Post-clustermempool Package RBF",
  "category_id": 8,
  "display_username": "Anthony Towns",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"ajtowns, post:7, topic:173\"]\nThat requires that an honest peer actually knows enough to even try relaying the right solution.\n[/quote]\n\nFWIW, I lightly convinced myself that trying to find the best subset of a proposed package is probably too hard (ie, depends on the state of all affected clusters in the mempool, and if replacement is involved, there's no nice greedy way of working out which part to try first).\n\nSo in that case, I think maybe something like this could work?\n\n * Get a proposed package from a peer. Resolve any missing parents. Try adding it to your mempool atomically via the method described at the top of this thread -- if it evicts something it shouldn't, that's fine -- two steps forward, one step back still adds up to one step forward.\n * Update your clusters, relinearise, do cheap optimisations.\n * Relay the newly added transactions (individually) to your peers.\n * If any of your peers ask for you to give them an \"ancestor\" package for a tx `T`, find the chunk that `T` is in, and give them a package containing all the txs in that chunk as well as all those txs' in-mempool ancestors. (Then they do the same thing, and repeat)\n\nI think that approach would minimise the spread of unnecessary-evictions, while also being fairly simple. Changing \"ancestor\" packages to \"chunk\" packages is a bit hand-wavy, but I don't think requires different messages compared to the current bip 331 draft?\n\nPush-relay of chunk packages might allow you to propagate hard-to-find optimal chunks across the network though. One way to get \"infinite computation\" might be to use the p2p network as a distributed system -- each node picks a random cluster that's near the top of the mempool to optimise every now and then, and if they find something good, they spread it out to everyone.",
  "actions_summary": [],
  "moderator": true,
  "admin": true,
  "staff": true,
  "user_id": 3,
  "hidden": false,
  "trust_level": 4,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "FWIW, I lightly convinced myself that trying to find the best subset of a proposed package is probably too hard (ie, depends on the state of all affected clusters in the mempool, and if replacement is involved, there\u2019s no nice greedy way of working out which part to try first). \nSo in that case, I &hellip;",
  "truncated": true,
  "post_url": "/t/defunct-post-clustermempool-package-rbf/173/8",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}