{
  "id": 463,
  "name": "David A. Harding",
  "username": "harding",
  "avatar_template": "/user_avatar/delvingbitcoin.org/harding/{size}/6_2.png",
  "created_at": "2023-11-23T02:35:32.368Z",
  "cooked": "<p>I think the major efficiency gains that this depends on requires that each participant be a member of the multisig (so the contract is trustless) and then also be available after all tickets have been settled in order to sign a non-contracted payment back to the market maker.  The more signers that are required, and the more time that passes between setup and teardown, the less likely it is that all signers will be available, requiring all of the individual outcome transactions to go on chain.</p>\n<p>To support the above claim, here\u2019s how I understand your proposal:</p>\n<ul>\n<li>\n<p>A maker agrees to work with Alice and Bob.  The maker proposes (but does not sign) a transaction paying the n-of-n multisig {A, B, M}.  Alice and Bob sign a timelocked refund from that transaction back to the maker, ensuring the maker can reclaim their funds even if Alice or Bob later become unavailable.  The maker signs and broadcasts the funding transaction.</p>\n</li>\n<li>\n<p>The maker then sells tickets to Alice and Bob over LN.  I think this likely requires PTLCs given that DLCs are working with signatures.  If you have more details on how that would work, I\u2019d appreciate them.</p>\n</li>\n<li>\n<p>Alice wins.  Her winning ticket is an output that can be spent by her unilaterally after a certain delay, or which can be spent by the maker at any time if they learn a preimage from Alice (or PTLC scalar).  Alice uses LN or ecash to sell the preimage to the maker.</p>\n</li>\n<li>\n<p>In the meantime, Alice and Bob have bought and settled 99 other tickets with the maker in the same way.</p>\n</li>\n<li>\n<p>The maker now has enough information to claim all 100 outputs onchain, but that would be just as inefficient as Alice and Bob claiming them individually.  If Alice and Bob cooperate, they and the maker can sign an alternative transaction with a single output paying back to the maker\u2014but this requires Alice and Bob to be available.  As the number of participants increases, the likelihood of everyone being available decreases.</p>\n</li>\n<li>\n<p>The maker needs to settle all of the claims before the timelocks on the unilateral spends expires, or the participants can take back the funds they\u2019ve swapped over LN or ecash.  This deadline for the participants also needs to be earlier than the timelocked refund to the maker (or the maker would\u2019ve been able to steal from the participants), so the maker won\u2019t be able to just wait and sweep all unclaimed funds.</p>\n</li>\n</ul>\n<p>I\u2019m not sure I fully understood your idea, so please let me know if I missed something.</p>",
  "post_number": 2,
  "post_type": 1,
  "updated_at": "2023-11-23T02:35:32.368Z",
  "reply_count": 1,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 5,
  "readers_count": 4,
  "score": 6.0,
  "yours": false,
  "topic_id": 214,
  "topic_slug": "off-chain-dlc-ticketing-systems",
  "topic_title": "Off Chain DLC Ticketing Systems",
  "topic_html_title": "Off Chain DLC Ticketing Systems",
  "category_id": 7,
  "display_username": "David A. Harding",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "I think the major efficiency gains that this depends on requires that each participant be a member of the multisig (so the contract is trustless) and then also be available after all tickets have been settled in order to sign a non-contracted payment back to the market maker.  The more signers that are required, and the more time that passes between setup and teardown, the less likely it is that all signers will be available, requiring all of the individual outcome transactions to go on chain.\n\nTo support the above claim, here's how I understand your proposal:\n\n- A maker agrees to work with Alice and Bob.  The maker proposes (but does not sign) a transaction paying the n-of-n multisig {A, B, M}.  Alice and Bob sign a timelocked refund from that transaction back to the maker, ensuring the maker can reclaim their funds even if Alice or Bob later become unavailable.  The maker signs and broadcasts the funding transaction.\n\n- The maker then sells tickets to Alice and Bob over LN.  I think this likely requires PTLCs given that DLCs are working with signatures.  If you have more details on how that would work, I'd appreciate them.\n\n- Alice wins.  Her winning ticket is an output that can be spent by her unilaterally after a certain delay, or which can be spent by the maker at any time if they learn a preimage from Alice (or PTLC scalar).  Alice uses LN or ecash to sell the preimage to the maker.\n\n- In the meantime, Alice and Bob have bought and settled 99 other tickets with the maker in the same way.\n\n- The maker now has enough information to claim all 100 outputs onchain, but that would be just as inefficient as Alice and Bob claiming them individually.  If Alice and Bob cooperate, they and the maker can sign an alternative transaction with a single output paying back to the maker---but this requires Alice and Bob to be available.  As the number of participants increases, the likelihood of everyone being available decreases.\n\n- The maker needs to settle all of the claims before the timelocks on the unilateral spends expires, or the participants can take back the funds they've swapped over LN or ecash.  This deadline for the participants also needs to be earlier than the timelocked refund to the maker (or the maker would've been able to steal from the participants), so the maker won't be able to just wait and sweep all unclaimed funds.\n\nI'm not sure I fully understood your idea, so please let me know if I missed something.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 6,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}