{
  "id": 506,
  "name": "Pieter Wuille",
  "username": "sipa",
  "avatar_template": "/user_avatar/delvingbitcoin.org/sipa/{size}/1100_2.png",
  "created_at": "2023-11-28T13:13:05.796Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"ajtowns\" data-post=\"25\" data-topic=\"209\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ajtowns/48/3_2.png\" class=\"avatar\"> ajtowns:</div>\n<blockquote>\n<p>I don\u2019t like that assumption; you can only check it after you\u2019ve done all the work, rather than beforehand, and it conceivably could turn out to be false.</p>\n</blockquote>\n</aside>\n<p>It can be checked beforehand: it\u2019s just the feerate of the first chunk of <span class=\"math\">L \\setminus T</span> is <span class=\"math\">\\leq f</span>.</p>\n<aside class=\"quote no-group\" data-username=\"ajtowns\" data-post=\"25\" data-topic=\"209\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ajtowns/48/3_2.png\" class=\"avatar\"> ajtowns:</div>\n<blockquote>\n<p>I think a better assumption would be \u201cThe first chunk of <span class=\"math\">L</span> has a feerate <span class=\"math\">f_0</span> which does not exceed <span class=\"math\">f</span></p>\n</blockquote>\n</aside>\n<p>Hmm, indeed, that would be a better starting point, as it exactly matches the conditions in the actual prefix-intersection merging algorithm. And it\u2019s not equivalent to mine (as your example at the end of your post shows; in that example the highest chunk feerate of bad transactions is 7.5 which exceeds <span class=\"math\">f=5</span>). I\u2019ll think about generalizing it.</p>\n<aside class=\"quote no-group\" data-username=\"ajtowns\" data-post=\"25\" data-topic=\"209\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ajtowns/48/3_2.png\" class=\"avatar\"> ajtowns:</div>\n<blockquote>\n<p>I think by \u201ctopologically valid\u201d you\u2019re meaning that no parents follow their child, <strong>and</strong> that all parents are included</p>\n</blockquote>\n</aside>\n<p>Indeed, something like this needs to be included in the proof. Also further, it\u2019s currently unclear why it\u2019s even allowed to move the <span class=\"math\">c_t \\cap T</span> transactions to the front of <span class=\"math\">c_t</span>.</p>\n<aside class=\"quote no-group\" data-username=\"ajtowns\" data-post=\"25\" data-topic=\"209\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ajtowns/48/3_2.png\" class=\"avatar\"> ajtowns:</div>\n<blockquote>\n<p>I think you could rewrite this slightly:</p>\n</blockquote>\n</aside>\n<p>I don\u2019t think you need an argument about what happens to <span class=\"math\">c_t</span> after rechunking. It\u2019s sufficient that progress was made by moving a nonzero number of transactions towards the front. If you can keep doing that, all of them will end up at the front of <span class=\"math\">L</span>. And we prove progress will keep being made until they are all at the front of <span class=\"math\">L</span>, so that is indeed the end state.</p>\n<aside class=\"quote no-group\" data-username=\"ajtowns\" data-post=\"25\" data-topic=\"209\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ajtowns/48/3_2.png\" class=\"avatar\"> ajtowns:</div>\n<blockquote>\n<p>because all the reordered chunks have precisely the same feerate.</p>\n</blockquote>\n</aside>\n<p>Note that I started off by merging equal-feerate chunks, so there can be at most one chunk for any given feerate.</p>\n<aside class=\"quote no-group\" data-username=\"ajtowns\" data-post=\"25\" data-topic=\"209\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ajtowns/48/3_2.png\" class=\"avatar\"> ajtowns:</div>\n<blockquote>\n<p>Also, I think your theorem needs a tweak</p>\n</blockquote>\n</aside>\n<p>Right, this example does capture a situation we want the theorem to cover, but it currently doesn\u2019t.</p>",
  "post_number": 26,
  "post_type": 1,
  "posts_count": 46,
  "updated_at": "2023-11-28T13:13:05.796Z",
  "reply_count": 0,
  "reply_to_post_number": 25,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 29,
  "readers_count": 28,
  "score": 5.8,
  "yours": false,
  "topic_id": 209,
  "topic_slug": "merging-incomparable-linearizations",
  "topic_title": "Merging incomparable linearizations",
  "topic_html_title": "Merging incomparable linearizations",
  "category_id": 8,
  "display_username": "Pieter Wuille",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"ajtowns, post:25, topic:209\"]\nI don\u2019t like that assumption; you can only check it after you\u2019ve done all the work, rather than beforehand, and it conceivably could turn out to be false.\n[/quote]\n\nIt can be checked beforehand: it's just the feerate of the first chunk of $L \\setminus T$ is $\\leq f$.\n\n[quote=\"ajtowns, post:25, topic:209\"]\nI think a better assumption would be \u201cThe first chunk of $L$ has a feerate $f_0$ which does not exceed $f$\n[/quote]\n\nHmm, indeed, that would be a better starting point, as it exactly matches the conditions in the actual prefix-intersection merging algorithm. And it's not equivalent to mine (as your example at the end of your post shows; in that example the highest chunk feerate of bad transactions is 7.5 which exceeds $f=5$). I'll think about generalizing it.\n\n[quote=\"ajtowns, post:25, topic:209\"]\nI think by \u201ctopologically valid\u201d you\u2019re meaning that no parents follow their child, **and** that all parents are included\n[/quote]\n\nIndeed, something like this needs to be included in the proof. Also further, it's currently unclear why it's even allowed to move the $c_t \\cap T$ transactions to the front of $c_t$.\n\n[quote=\"ajtowns, post:25, topic:209\"]\nI think you could rewrite this slightly:\n[/quote]\n\nI don't think you need an argument about what happens to $c_t$ after rechunking. It's sufficient that progress was made by moving a nonzero number of transactions towards the front. If you can keep doing that, all of them will end up at the front of $L$. And we prove progress will keep being made until they are all at the front of $L$, so that is indeed the end state.\n\n[quote=\"ajtowns, post:25, topic:209\"]\nbecause all the reordered chunks have precisely the same feerate.\n[/quote]\n\nNote that I started off by merging equal-feerate chunks, so there can be at most one chunk for any given feerate.\n\n[quote=\"ajtowns, post:25, topic:209\"]\nAlso, I think your theorem needs a tweak\n[/quote]\n\nRight, this example does capture a situation we want the theorem to cover, but it currently doesn't.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 96,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "It can be checked beforehand: it\u2019s just the feerate of the first chunk of L \\setminus T is \\leq f. \n\nHmm, indeed, that would be a better starting point, as it exactly matches the conditions in the actual prefix-intersection merging algorithm. And it\u2019s not equivalent to mine (as your example at the &hellip;",
  "truncated": true,
  "post_url": "/t/merging-incomparable-linearizations/209/26",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}