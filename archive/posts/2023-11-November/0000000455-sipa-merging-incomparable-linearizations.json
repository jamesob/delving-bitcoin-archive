{
  "id": 455,
  "name": "Pieter Wuille",
  "username": "sipa",
  "avatar_template": "/user_avatar/delvingbitcoin.org/sipa/{size}/1100_2.png",
  "created_at": "2023-11-20T21:45:30.680Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"ajtowns\" data-post=\"2\" data-topic=\"209\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/ajtowns/48/3_2.png\" class=\"avatar\"> ajtowns:</div>\n<blockquote>\n<p>One way of characterising a chunk is by listing its childless-descendants; for BACFE, those would be E and F. But in this case F\u2019s feerate alone is 11, while BACFE\u2019s is 13.2; which gives you an easy clue that splitting that chunk into [BACE,F] would be an improvement.</p>\n</blockquote>\n</aside>\n<p>Right, the childless-descendants in an optimal chunk are always higher feerate than the chunk itself (or more generally, any \u201cbottom\u201d subset (a subset that includes all its descendants) must have higher feerate than the chunk itself - if not, that subset could be removed without breaking topology, and doing so would increase the feerate).</p>\n<p>This could be the basis for another general post-processing step (e.g. try all bottom subsets of 1 or 2 transactions, and if they have lower or equal feerate than the overall chunk, split them up). Similarly for top transactions with higher or equal feerate than the overall chunk. Of course, we could also hope to build linearization algorithms that just don\u2019t give rise to such chunkings in the first place.</p>\n<p>FWIW, I think that relaying the set of childless-descendants for each chunk to a peer is another hypothetical way of conveying knowledge of linearizations. It could be made Erlay-compatible as it has set semantics, and with that set one can reconstruct the same linearization (and likely gives a decent result even if the clusters don\u2019t exactly match).</p>\n<aside class=\"quote no-group\" data-username=\"sdaftuar\" data-post=\"4\" data-topic=\"209\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/letter_avatar_proxy/v4/letter/s/0ea827/48.png\" class=\"avatar\"> sdaftuar:</div>\n<blockquote>\n<p>I haven\u2019t processed this whole post yet, but just wanted to add an aside/reminder for the sake of our intuition: even if a linearization is strictly better than another one, it may still be the case that merging the two (even using our most naive algorithm) would produce a linearization better than either.</p>\n</blockquote>\n</aside>\n<p>Yes, absolutely. I\u2019ve changed the text to say \u201ccould\u201d instead of \u201cshould\u201d. I think we\u2019ll want to run prefix-intersection merging (or some further iteration of this idea) anytime we have distinct linearizations of the same transactions. It even works when the input linearizations don\u2019t cover the exact same transactions but there is some overlap, though I haven\u2019t run tests for that.</p>",
  "post_number": 5,
  "post_type": 1,
  "posts_count": 46,
  "updated_at": "2023-11-20T21:47:34.629Z",
  "reply_count": 0,
  "reply_to_post_number": 2,
  "quote_count": 2,
  "incoming_link_count": 0,
  "reads": 37,
  "readers_count": 36,
  "score": 22.4,
  "yours": false,
  "topic_id": 209,
  "topic_slug": "merging-incomparable-linearizations",
  "topic_title": "Merging incomparable linearizations",
  "topic_html_title": "Merging incomparable linearizations",
  "category_id": 8,
  "display_username": "Pieter Wuille",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"ajtowns, post:2, topic:209\"]\nOne way of characterising a chunk is by listing its childless-descendants; for BACFE, those would be E and F. But in this case F\u2019s feerate alone is 11, while BACFE\u2019s is 13.2; which gives you an easy clue that splitting that chunk into [BACE,F] would be an improvement.\n[/quote]\n\nRight, the childless-descendants in an optimal chunk are always higher feerate than the chunk itself (or more generally, any \"bottom\" subset (a subset that includes all its descendants) must have higher feerate than the chunk itself - if not, that subset could be removed without breaking topology, and doing so would increase the feerate).\n\nThis could be the basis for another general post-processing step (e.g. try all bottom subsets of 1 or 2 transactions, and if they have lower or equal feerate than the overall chunk, split them up). Similarly for top transactions with higher or equal feerate than the overall chunk. Of course, we could also hope to build linearization algorithms that just don't give rise to such chunkings in the first place.\n\nFWIW, I think that relaying the set of childless-descendants for each chunk to a peer is another hypothetical way of conveying knowledge of linearizations. It could be made Erlay-compatible as it has set semantics, and with that set one can reconstruct the same linearization (and likely gives a decent result even if the clusters don't exactly match).\n\n[quote=\"sdaftuar, post:4, topic:209\"]\nI haven\u2019t processed this whole post yet, but just wanted to add an aside/reminder for the sake of our intuition: even if a linearization is strictly better than another one, it may still be the case that merging the two (even using our most naive algorithm) would produce a linearization better than either.\n[/quote]\n\nYes, absolutely. I've changed the text to say \"could\" instead of \"should\". I think we'll want to run prefix-intersection merging (or some further iteration of this idea) anytime we have distinct linearizations of the same transactions. It even works when the input linearizations don't cover the exact same transactions but there is some overlap, though I haven't run tests for that.",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 96,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Right, the childless-descendants in an optimal chunk are always higher feerate than the chunk itself (or more generally, any \u201cbottom\u201d subset (a subset that includes all its descendants) must have higher feerate than the chunk itself - if not, that subset could be removed without breaking topology, &hellip;",
  "truncated": true,
  "post_url": "/t/merging-incomparable-linearizations/209/5",
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}