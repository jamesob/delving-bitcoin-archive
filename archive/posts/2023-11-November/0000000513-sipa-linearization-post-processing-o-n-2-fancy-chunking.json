{
  "id": 513,
  "name": "Pieter Wuille",
  "username": "sipa",
  "avatar_template": "/user_avatar/delvingbitcoin.org/sipa/{size}/102_2.png",
  "created_at": "2023-11-29T21:16:20.939Z",
  "cooked": "<p>FWIW, experimentally it seems that ancestor sort will optimally sort every cluster up to 4 transactions, and post-processing according to the algorithm above does not change that.</p>\n<p>The simplest cluster that I\u2019ve been able to find which does <em>not</em> sort optimally under ancestor sort (with or without post-processing) is this:</p>\n<pre data-code-height=\"234\" data-code-wrap=\"mermaid\"><code class=\"lang-mermaid\">graph BT\n   T0[\"B: 5\"] --&gt; T1;\n   T1[\"A: 1\"];\n   T2[\"C: 5\"] --&gt; T1;\n   T3[\"D: 3\"];\n   T4[\"E: 4\"] --&gt; T2;\n   T4 --&gt; T3;\n</code></pre>\n<ul>\n<li>Ancestor sort yields [A,C,D,E,B], chunked as [ACDEB] (ACDE is picked first, but then B is chunked together with it).</li>\n<li>Optimal sort is [A,B,C,D,E], chunked as [ABC,DE].</li>\n</ul>",
  "post_number": 7,
  "post_type": 1,
  "updated_at": "2023-11-30T04:25:45.567Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 4,
  "readers_count": 3,
  "score": 0.8,
  "yours": false,
  "topic_id": 201,
  "topic_slug": "linearization-post-processing-o-n-2-fancy-chunking",
  "topic_title": "Linearization post-processing (O(n^2) fancy chunking)",
  "topic_html_title": "Linearization post-processing (O(n^2) fancy chunking)",
  "category_id": 9,
  "display_username": "Pieter Wuille",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "version": 3,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "FWIW, experimentally it seems that ancestor sort will optimally sort every cluster up to 4 transactions, and post-processing according to the algorithm above does not change that.\n\nThe simplest cluster that I've been able to find which does *not* sort optimally under ancestor sort (with or without post-processing) is this:\n\n```mermaid height=234,auto\ngraph BT\n   T0[\"B: 5\"] --> T1;\n   T1[\"A: 1\"];\n   T2[\"C: 5\"] --> T1;\n   T3[\"D: 3\"];\n   T4[\"E: 4\"] --> T2;\n   T4 --> T3;\n```\n\n* Ancestor sort yields [A,C,D,E,B], chunked as [ACDEB] (ACDE is picked first, but then B is chunked together with it).\n* Optimal sort is [A,B,C,D,E], chunked as [ABC,DE].",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 96,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}