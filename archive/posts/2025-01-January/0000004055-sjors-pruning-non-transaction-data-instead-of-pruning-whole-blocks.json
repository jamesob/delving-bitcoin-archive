{
  "id": 4055,
  "name": "Sjors Provoost",
  "username": "sjors",
  "avatar_template": "/user_avatar/delvingbitcoin.org/sjors/{size}/59_2.png",
  "created_at": "2025-01-14T13:35:46.072Z",
  "cooked": "<p>Removing parts of a block creates a fragmentation issue. Additionally there\u2019s not much utility in keeping incomplete blocks around, as you can\u2019t serve those to peers.</p>\n<p>There\u2019s one exception though: you <em>can</em> serve blocks without witness data. The following pull request could be revived to implement that:</p>\n<aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/bitcoin/bitcoin/pull/27050\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/bitcoin/bitcoin/pull/27050\" target=\"_blank\" rel=\"noopener\">github.com/bitcoin/bitcoin</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\" data-github-private-repo=\"false\">\n\n\n\n    <div class=\"github-icon-container\" title=\"Pull Request\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 12 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>\n    </div>\n\n  <div class=\"github-info-container\">\n\n\n\n      <h4>\n        <a href=\"https://github.com/bitcoin/bitcoin/pull/27050\" target=\"_blank\" rel=\"noopener\">p2p, validation: Don't download witnesses for assumed-valid blocks when running in prune mode</a>\n      </h4>\n\n    <div class=\"branches\">\n      <code>bitcoin:master</code> \u2190 <code>dergoegge:2023-02-av-wit-\ud83e\uddd9</code>\n    </div>\n\n      <div class=\"github-info\">\n        <div class=\"date\">\n          opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2023-02-06\" data-time=\"15:11:29\" data-timezone=\"UTC\">03:11PM - 06 Feb 23 UTC</span>\n        </div>\n\n        <div class=\"user\">\n          <a href=\"https://github.com/dergoegge\" target=\"_blank\" rel=\"noopener\">\n            <img alt=\"\" src=\"https://delvingbitcoin.org/uploads/default/original/1X/b0703700ddb1bfa143f117cb89fecbf5d399def4.jpeg\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"707676\">\n            dergoegge\n          </a>\n        </div>\n\n        <div class=\"lines\" title=\"10 commits changed 11 files with 278 additions and 41 deletions\">\n          <a href=\"https://github.com/bitcoin/bitcoin/pull/27050/files\" target=\"_blank\" rel=\"noopener\">\n            <span class=\"added\">+278</span>\n            <span class=\"removed\">-41</span>\n          </a>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">I got a little nerd sniped by this idea, so I created this draft. I have done ve<span class=\"show-more-container\"><a href=\"https://github.com/bitcoin/bitcoin/pull/27050\" target=\"_blank\" rel=\"noopener\" class=\"show-more\">\u2026</a></span><span class=\"excerpt hidden\">ry little testing so far (syncing signet worked, currently syncing mainnet).\n\nThis PR does two things when running in prune mode: (a) assume witness merkle roots to be valid for assumed-valid blocks and (b) request assumed-valid blocks without `MSG_WITNESS_FLAG`.\n\nIn theory this is a good idea, because witnesses are not validated (i.e. they are assumed valid up to a certain block `-assumevalid`) and get pruned anyway when running in prune mode, so not downloading them (for assumed-valid blocks) reduces the bandwidth that is needed for IBD (don't have any numbers on this yet).\n\nOne downside is that nodes serving blocks without witnesses can't serve them directly from disk. They have to un-serialize and re-serialize without the witnesses before sending them.\n\nEven though this is a draft, conceptual and approach review is very welcome.\n\n---\n\nTODO:\n\n- [ ] a bunch of tests\n- [ ] edge cases around manually pruned nodes (https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1419751142)\n- [ ] make sure we are not advertising blocks with witnesses when we in fact do not have the witnesses (https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1419443888, https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1419751142)\n- [ ] edge case when restarting with different assume valid settings (https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1419751142)\n- [ ] document that it's a change in what constitutes assumevalid (https://github.com/bitcoin/bitcoin/pull/27050#issuecomment-1419611954)\n- [ ] always serve pre-segwit blocks straight from disk (https://github.com/bitcoin/bitcoin/pull/27050#discussion_r1097532417)</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<blockquote>\n<p>content that some node owners might not want to store on their hard drive</p>\n</blockquote>\n<p>Something you don\u2019t want on your harddrive could be embedded in the non-witness part of a block. E.g. Counterparty, used more recently with STAMPS, puts data in a bare multisig <code>scriptPubKey</code>. Even pruning won\u2019t get this removed from your hard disk, because it\u2019s part of the UTXO set, which is stored in the <code>chainstate</code> directory. And these outputs may never get spent.</p>\n<p>A project like Utreexo <em>would</em> remove them from your hard disk (if that is your goal).</p>",
  "post_number": 2,
  "post_type": 1,
  "posts_count": 4,
  "updated_at": "2025-01-14T13:37:09.603Z",
  "reply_count": 1,
  "reply_to_post_number": null,
  "quote_count": 0,
  "incoming_link_count": 2,
  "reads": 35,
  "readers_count": 34,
  "score": 52.0,
  "yours": false,
  "topic_id": 1385,
  "topic_slug": "pruning-non-transaction-data-instead-of-pruning-whole-blocks",
  "topic_title": "Pruning non-transaction data instead of pruning whole blocks?",
  "topic_html_title": "Pruning non-transaction data instead of pruning whole blocks?",
  "category_id": 8,
  "display_username": "Sjors Provoost",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "Removing parts of a block creates a fragmentation issue. Additionally there's not much utility in keeping incomplete blocks around, as you can't serve those to peers.\n\nThere's one exception though: you _can_ serve blocks without witness data. The following pull request could be revived to implement that:\n\nhttps://github.com/bitcoin/bitcoin/pull/27050\n\n> content that some node owners might not want to store on their hard drive\n\nSomething you don't want on your harddrive could be embedded in the non-witness part of a block. E.g. Counterparty, used more recently with STAMPS, puts data in a bare multisig `scriptPubKey`. Even pruning won't get this removed from your hard disk, because it's part of the UTXO set, which is stored in the `chainstate` directory. And these outputs may never get spent.\n\nA project like Utreexo _would_ remove them from your hard disk (if that is your goal).",
  "actions_summary": [
    {
      "id": 2,
      "count": 2
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 71,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Removing parts of a block creates a fragmentation issue. Additionally there\u2019s not much utility in keeping incomplete blocks around, as you can\u2019t serve those to peers. \nThere\u2019s one exception though: you can serve blocks without witness data. The following pull request could be revived to implement th&hellip;",
  "truncated": true,
  "post_url": "/t/pruning-non-transaction-data-instead-of-pruning-whole-blocks/1385/2",
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 2
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 2,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}