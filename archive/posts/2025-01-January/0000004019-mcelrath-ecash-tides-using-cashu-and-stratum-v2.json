{
  "id": 4019,
  "name": "Bob McElrath",
  "username": "mcelrath",
  "avatar_template": "/user_avatar/delvingbitcoin.org/mcelrath/{size}/521_2.png",
  "created_at": "2025-01-08T14:37:25.828Z",
  "cooked": "<p>Really cool that you\u2019re actually building this. Kudos!</p>\n<p>How do people validate shares? A share is a full bitcoin block, including all transactions, but having a PoW less than Bitcoin\u2019s difficulty target\u2026 This means a \u201cshare\u201d is up to 4MB of data. See <a href=\"https://github.com/braidpool/braidpool/blob/6bc7785c7ee61ea1379ae971ecf8ebca1f976332/docs/general_considerations.md\" rel=\"noopener nofollow ugc\">General Considerations for Decentralized Mining Pools for Bitcoin</a> for details on this. If block templates are truly arbitrary, this means that any share mining a tx that is not in the share-validator\u2019s mempool cannot be validated. Even if all txs are known at best I have to store and download the txid list for every share. At worst I have to download an entire 4MB graffiti block full of txs I\u2019ve never seen before.</p>\n<p>Let me suggest something. <a href=\"https://github.com/braidpool/braidool/\" rel=\"noopener nofollow ugc\">Braidpool</a> will be a public blockchain (DAG) with each entry (bead) in the DAG being a share. I\u2019ve proposed using using <a href=\"https://github.com/braidpool/braidpool/discussions/69\" rel=\"noopener nofollow ugc\">Deterministic Block Templates</a> to mitigate this problem. The idea being that Braidpool beads carry bitcoin transactions, which for any given set of braid tips defines a committed mempool. Tx selection can then proceed using any deterministic algorithm on this committed mempool. Proof of a share is then only the share header (bead ~ 2kb or so), which implicitly commits to a tx set in a committed mempool, and a block header independently computable via the defined deterministic algorithm. Thus the block template nor its txs need to be separately stored and or transmitted for verification (as long as the share verifier is running a Braidpool node \u2013 the data within is entirely public).</p>\n<p>Now, this is really only possible with a consensus algorithm on that mempool. Because TIDES and Cashu don\u2019t have any such publicly known list of txs or consensus, that means that shares in your scheme require transporting or storing a tremendous amount of data.</p>\n<p>Braidpool is limited on the size of shares it can support, by the restriction on how many beads (shares) can be mined in a given period of time and consensus decide upon them. This is limited by the latency of transmitting shares, and given the 600s block time and observed latencies, this is a bead time around 250ms - 1000ms, so for round numbers let\u2019s call it 600ms or 1000x shares per Bitcoin block. If a miner wins one share per bitcoin block (so has 0.1% of the bitcoin hashrate) he\u2019d have a monthly revenue variance of about 1.5%. Variance reduction is the main point of pools in the first place, and this is really the floor in variance of where miners want to be, given their margins. If you\u2019re a smaller miner than that you either accept higher variance or want to find another payout solution. However 0.1% of the network at today\u2019s hashrate of 800M Th/s is about 4000 S21-class devices. This is a fairly large operation corresponding to 13MW of power. For miners smaller than 4000 devices we need to find another solution.</p>\n<p>This is where I think an eCash mint can come in. I\u2019ve proposed Braidpool sub-pools for this, which is another instance of Braidpool that takes payment from shares in the parent pool, instead of Bitcoin. Shares in this sub-pool could be eCash tokens leveraging the corresponding Braidpool sub-pool instance for share information and validation. This could get us down to ~1.5% monthly variance for miners having as few as ~4 S21-class devices. Smaller miners than this (e.g. Bitaxe) could use sub-sub-pools, but at this point the payouts are so small that it\u2019s even difficult to put them on-chain because of the dust limit, so Lightning or eCash tokens are really required because of the small denominations.</p>\n<p>I don\u2019t know that it makes much sense to worry about the BitAxe folks though, they\u2019re really playing a lottery, not expecting steady income. Running a BitAxe on a sub-pool is still a pretty nice lottery.</p>\n<p>Cheers,\n\u2013 Bob</p>",
  "post_number": 34,
  "post_type": 1,
  "updated_at": "2025-01-08T14:42:29.272Z",
  "reply_count": 0,
  "reply_to_post_number": 32,
  "quote_count": 0,
  "incoming_link_count": 1,
  "reads": 19,
  "readers_count": 18,
  "score": 8.6,
  "yours": false,
  "topic_id": 870,
  "topic_slug": "ecash-tides-using-cashu-and-stratum-v2",
  "topic_title": "Ecash TIDES using Cashu and Stratum v2",
  "topic_html_title": "Ecash TIDES using Cashu and Stratum v2",
  "category_id": 8,
  "display_username": "Bob McElrath",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 2,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "username": "vnprc",
    "name": "Evan",
    "avatar_template": "/user_avatar/delvingbitcoin.org/vnprc/{size}/983_2.png"
  },
  "bookmarked": false,
  "raw": "Really cool that you're actually building this. Kudos!\n\nHow do people validate shares? A share is a full bitcoin block, including all transactions, but having a PoW less than Bitcoin's difficulty target.. This means a \"share\" is up to 4MB of data. See [General Considerations for Decentralized Mining Pools for Bitcoin](https://github.com/braidpool/braidpool/blob/6bc7785c7ee61ea1379ae971ecf8ebca1f976332/docs/general_considerations.md) for details on this. If block templates are truly arbitrary, this means that any share mining a tx that is not in the share-validator's mempool cannot be validated. Even if all txs are known at best I have to store and download the txid list for every share. At worst I have to download an entire 4MB graffiti block full of txs I've never seen before.\n\nLet me suggest something. [Braidpool](https://github.com/braidpool/braidool/) will be a public blockchain (DAG) with each entry (bead) in the DAG being a share. I've proposed using using [Deterministic Block Templates](https://github.com/braidpool/braidpool/discussions/69) to mitigate this problem. The idea being that Braidpool beads carry bitcoin transactions, which for any given set of braid tips defines a committed mempool. Tx selection can then proceed using any deterministic algorithm on this committed mempool. Proof of a share is then only the share header (bead ~ 2kb or so), which implicitly commits to a tx set in a committed mempool, and a block header independently computable via the defined deterministic algorithm. Thus the block template nor its txs need to be separately stored and or transmitted for verification (as long as the share verifier is running a Braidpool node -- the data within is entirely public).\n\nNow, this is really only possible with a consensus algorithm on that mempool. Because TIDES and Cashu don't have any such publicly known list of txs or consensus, that means that shares in your scheme require transporting or storing a tremendous amount of data.\n\nBraidpool is limited on the size of shares it can support, by the restriction on how many beads (shares) can be mined in a given period of time and consensus decide upon them. This is limited by the latency of transmitting shares, and given the 600s block time and observed latencies, this is a bead time around 250ms - 1000ms, so for round numbers let's call it 600ms or 1000x shares per Bitcoin block. If a miner wins one share per bitcoin block (so has 0.1% of the bitcoin hashrate) he'd have a monthly revenue variance of about 1.5%. Variance reduction is the main point of pools in the first place, and this is really the floor in variance of where miners want to be, given their margins. If you're a smaller miner than that you either accept higher variance or want to find another payout solution. However 0.1% of the network at today's hashrate of 800M Th/s is about 4000 S21-class devices. This is a fairly large operation corresponding to 13MW of power. For miners smaller than 4000 devices we need to find another solution.\n\nThis is where I think an eCash mint can come in. I've proposed Braidpool sub-pools for this, which is another instance of Braidpool that takes payment from shares in the parent pool, instead of Bitcoin. Shares in this sub-pool could be eCash tokens leveraging the corresponding Braidpool sub-pool instance for share information and validation. This could get us down to ~1.5% monthly variance for miners having as few as ~4 S21-class devices. Smaller miners than this (e.g. Bitaxe) could use sub-sub-pools, but at this point the payouts are so small that it's even difficult to put them on-chain because of the dust limit, so Lightning or eCash tokens are really required because of the small denominations.\n\nI don't know that it makes much sense to worry about the BitAxe folks though, they're really playing a lottery, not expecting steady income. Running a BitAxe on a sub-pool is still a pretty nice lottery.\n\nCheers,\n-- Bob",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 406,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": "Github link was replaced with a permanent link",
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}