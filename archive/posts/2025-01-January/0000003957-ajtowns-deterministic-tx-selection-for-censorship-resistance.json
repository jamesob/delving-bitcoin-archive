{
  "id": 3957,
  "name": "Anthony Towns",
  "username": "ajtowns",
  "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/417_2.png",
  "created_at": "2025-01-04T07:56:50.468Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"harding\" data-post=\"3\" data-topic=\"842\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/harding/48/925_2.png\" class=\"avatar\"> harding:</div>\n<blockquote>\n<p>But if 100% of miners use your described pool, they\u2019ll have to mine any transaction that was previously included in a share before they can mine any transactions of their own choosing.</p>\n</blockquote>\n</aside>\n<p>I think there\u2019s two ways in which this isn\u2019t true \u2013 if your deterministic algorithm is \u201chighest feerate txs\u201d, then by including some very high feerate txs you could be able to mine them into your block immediately just by following the deterministic algorithm. But in addition you could also allow for 5% of the block space to be free-use (similar to the old space for mining txs by priority) after having filled up 95% of the block space deterministically.</p>\n<p>Maintaining a deterministic mempool at pool-consensus level is likely fairly complicated in practice; particularly in rolling out upgrades/changes to relay policy (eg TRUC relay, different RBF policies, new soft fork features, changes to min fee rates or limits).</p>\n<p>It\u2019s also likely a bit more complex if you have to be able to efficiently calculate the top of the mempool from a previous state, for dealing with beads when the braid has width greater than 1.</p>\n<p>At ~1/1000th the difficulty of a block, with a pool at 10% hashrate, you\u2019re receiving a new bead every 6 seconds, so probably don\u2019t want to receive 2MB of new tx data every bead. Probably it would work to take <code>sha256(sharehash)</code> as a random seed and then allow 10% of beads to include 150kvB of tx data that will be incorporated into descendants, while the remaining 90% of beads can only include 5kvB of tx data \u2013 that\u2019s about ~2MvB tx data relayed over 100 beads (which is 600s for 10% hashrate at 1/100th difficulty).</p>",
  "post_number": 7,
  "post_type": 1,
  "updated_at": "2025-01-04T07:56:50.468Z",
  "reply_count": 0,
  "reply_to_post_number": 3,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 7,
  "readers_count": 6,
  "score": 1.4,
  "yours": false,
  "topic_id": 842,
  "topic_slug": "deterministic-tx-selection-for-censorship-resistance",
  "topic_title": "Deterministic tx selection for censorship resistance",
  "topic_html_title": "Deterministic tx selection for censorship resistance",
  "category_id": 7,
  "display_username": "Anthony Towns",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"harding, post:3, topic:842\"]\nBut if 100% of miners use your described pool, they\u2019ll have to mine any transaction that was previously included in a share before they can mine any transactions of their own choosing.\n[/quote]\n\nI think there's two ways in which this isn't true -- if your deterministic algorithm is \"highest feerate txs\", then by including some very high feerate txs you could be able to mine them into your block immediately just by following the deterministic algorithm. But in addition you could also allow for 5% of the block space to be free-use (similar to the old space for mining txs by priority) after having filled up 95% of the block space deterministically.\n\nMaintaining a deterministic mempool at pool-consensus level is likely fairly complicated in practice; particularly in rolling out upgrades/changes to relay policy (eg TRUC relay, different RBF policies, new soft fork features, changes to min fee rates or limits). \n\nIt's also likely a bit more complex if you have to be able to efficiently calculate the top of the mempool from a previous state, for dealing with beads when the braid has width greater than 1.\n\nAt ~1/1000th the difficulty of a block, with a pool at 10% hashrate, you're receiving a new bead every 6 seconds, so probably don't want to receive 2MB of new tx data every bead. Probably it would work to take `sha256(sharehash)` as a random seed and then allow 10% of beads to include 150kvB of tx data that will be incorporated into descendants, while the remaining 90% of beads can only include 5kvB of tx data -- that's about ~2MvB tx data relayed over 100 beads (which is 600s for 10% hashrate at 1/100th difficulty).",
  "actions_summary": [],
  "moderator": true,
  "admin": true,
  "staff": true,
  "user_id": 3,
  "hidden": false,
  "trust_level": 4,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}