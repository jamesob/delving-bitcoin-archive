{
  "id": 4024,
  "name": "average_gary",
  "username": "marathon-gary",
  "avatar_template": "/user_avatar/delvingbitcoin.org/marathon-gary/{size}/796_2.png",
  "created_at": "2025-01-08T19:26:22.934Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"vnprc\" data-post=\"32\" data-topic=\"870\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/vnprc/48/983_2.png\" class=\"avatar\"> vnprc:</div>\n<blockquote>\n<p>I think all you need is a lookup table of block template, header, and nonce data and a merkle sum tree of block header hashes. In order to prove an individual share\u2019s validity you look up the block template, header, and nonce data, combine them into a full bitcoin block (with insufficient proof of work, probably), hash the header and provide a merkle proof for that header. The merkle sum tree is used to attest to the sum of difficulty of accepted shares. Ehash tokens are denominated in difficulty so this value can be directly compared to the sum of liabilities (mint proofs minus burn proofs (not including ecash redemptions)) from the Proof of Liabilities report. I haven\u2019t fully scoped out the idea but it seems like a fairly straight-forward problem. Am I missing anything?</p>\n</blockquote>\n</aside>\n<aside class=\"quote no-group\" data-username=\"vnprc\" data-post=\"33\" data-topic=\"870\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/vnprc/48/983_2.png\" class=\"avatar\"> vnprc:</div>\n<blockquote>\n<p>What payout formula should we use? Basic PPLNS, TIDES, or some other tweaked PPLNS algorithm?</p>\n</blockquote>\n</aside>\n<p>I recommend checking out the <a href=\"https://delvingbitcoin.org/t/pplns-with-job-declaration/1099\">PPLN-JD post</a> as it offers a complimentary/orthogonal solution to share accounting and auditing. I believe eHash is doable using the PPLNS-JD accounting schema.</p>",
  "post_number": 35,
  "post_type": 1,
  "posts_count": 35,
  "updated_at": "2025-01-08T19:26:22.934Z",
  "reply_count": 0,
  "reply_to_post_number": 32,
  "quote_count": 2,
  "incoming_link_count": 4,
  "reads": 22,
  "readers_count": 21,
  "score": 39.4,
  "yours": false,
  "topic_id": 870,
  "topic_slug": "ecash-tides-using-cashu-and-stratum-v2",
  "topic_title": "Ecash TIDES using Cashu and Stratum v2",
  "topic_html_title": "Ecash TIDES using Cashu and Stratum v2",
  "category_id": 8,
  "display_username": "average_gary",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": "",
  "bookmarked": false,
  "raw": "[quote=\"vnprc, post:32, topic:870\"]\nI think all you need is a lookup table of block template, header, and nonce data and a merkle sum tree of block header hashes. In order to prove an individual share\u2019s validity you look up the block template, header, and nonce data, combine them into a full bitcoin block (with insufficient proof of work, probably), hash the header and provide a merkle proof for that header. The merkle sum tree is used to attest to the sum of difficulty of accepted shares. Ehash tokens are denominated in difficulty so this value can be directly compared to the sum of liabilities (mint proofs minus burn proofs (not including ecash redemptions)) from the Proof of Liabilities report. I haven\u2019t fully scoped out the idea but it seems like a fairly straight-forward problem. Am I missing anything?\n[/quote]\n\n[quote=\"vnprc, post:33, topic:870\"]\nWhat payout formula should we use? Basic PPLNS, TIDES, or some other tweaked PPLNS algorithm?\n[/quote]\n\nI recommend checking out the [PPLN-JD post](https://delvingbitcoin.org/t/pplns-with-job-declaration/1099) as it offers a complimentary/orthogonal solution to share accounting and auditing. I believe eHash is doable using the PPLNS-JD accounting schema.",
  "actions_summary": [
    {
      "id": 2,
      "count": 1
    }
  ],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 526,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "I recommend checking out the <a href=\"https://delvingbitcoin.org/t/pplns-with-job-declaration/1099\">PPLN-JD post</a> as it offers a complimentary/orthogonal solution to share accounting and auditing. I believe eHash is doable using the PPLNS-JD accounting schema.",
  "truncated": true,
  "post_url": "/t/ecash-tides-using-cashu-and-stratum-v2/870/35",
  "reactions": [
    {
      "id": "+1",
      "type": "emoji",
      "count": 1
    }
  ],
  "current_user_reaction": null,
  "reaction_users_count": 1,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}