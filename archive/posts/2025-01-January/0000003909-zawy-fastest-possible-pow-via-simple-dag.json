{
  "id": 3909,
  "name": "Zawy",
  "username": "zawy",
  "avatar_template": "/user_avatar/delvingbitcoin.org/zawy/{size}/750_2.png",
  "created_at": "2025-01-01T00:52:04.407Z",
  "cooked": "<p>I used constant latency between all nodes to see pure results. I\u2019ll answer in detail later. The simulator is coming out good. Here\u2019s the response of different algorithms to 2x increases in hashrate and latency.  The n values are filters to slow and smooth response (and in SMA its the actual averaging window, not a fliter). I chose them to give the same std dev in difficulty adjustment when hashrate is constant. Then the fastest response to changes is the best algorithm. Here SMA (simple moving average) won hashrate changes easily but is very time consuming to calculate in DAGs, and it has no awareness of latency changes. The Nb/Nc method counts bradpools \u201csingle block cohort\u201d (Nc) in past 20 Nb blocks as indicated in the chart title. SMA has to go back 660 to 800 blocks instead. Bob will probably focus on the parent method since it\u2019s so easy to calculate and is faster in responding. Notice parents= 1.44 for the parent method is the target instead of 2. I had an error in the simulation. 1.44 turned out best and proved equivalent to Bob\u2019s Nb/Nc = 2.42 method backed by his derivation. 2.42 = 1+1/Q where Q solves 1/Q = Q  * e^Q\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://delvingbitcoin.org/uploads/default/original/1X/75337854c27966b77dd0d33578f06cb9077fc5ee.png\" data-download-href=\"https://delvingbitcoin.org/uploads/default/75337854c27966b77dd0d33578f06cb9077fc5ee\" title=\"17356923948868316595468585569479\"><img src=\"https://delvingbitcoin.org/uploads/default/optimized/1X/75337854c27966b77dd0d33578f06cb9077fc5ee_2_690x324.png\" alt=\"17356923948868316595468585569479\" data-base62-sha1=\"gIO8yRwwrPaqLrjUkmROFZJk702\" width=\"690\" height=\"324\" srcset=\"https://delvingbitcoin.org/uploads/default/optimized/1X/75337854c27966b77dd0d33578f06cb9077fc5ee_2_690x324.png, https://delvingbitcoin.org/uploads/default/optimized/1X/75337854c27966b77dd0d33578f06cb9077fc5ee_2_1035x486.png 1.5x, https://delvingbitcoin.org/uploads/default/optimized/1X/75337854c27966b77dd0d33578f06cb9077fc5ee_2_1380x648.png 2x\" data-dominant-color=\"F7F7F5\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">17356923948868316595468585569479</span><span class=\"informations\">1585\u00d7746 88 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>",
  "post_number": 5,
  "post_type": 1,
  "updated_at": "2025-01-01T01:21:03.301Z",
  "reply_count": 0,
  "reply_to_post_number": 4,
  "quote_count": 0,
  "incoming_link_count": 0,
  "reads": 15,
  "readers_count": 14,
  "score": 3.0,
  "yours": false,
  "topic_id": 1331,
  "topic_slug": "fastest-possible-pow-via-simple-dag",
  "topic_title": "Fastest-possible PoW via Simple DAG",
  "topic_html_title": "Fastest-possible PoW via Simple DAG",
  "category_id": 5,
  "display_username": "Zawy",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 3,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "username": "ajtowns",
    "name": "Anthony Towns",
    "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/417_2.png"
  },
  "bookmarked": false,
  "raw": "I used constant latency between all nodes to see pure results. I'll answer in detail later. The simulator is coming out good. Here's the response of different algorithms to 2x increases in hashrate and latency.  The n values are filters to slow and smooth response (and in SMA its the actual averaging window, not a fliter). I chose them to give the same std dev in difficulty adjustment when hashrate is constant. Then the fastest response to changes is the best algorithm. Here SMA (simple moving average) won hashrate changes easily but is very time consuming to calculate in DAGs, and it has no awareness of latency changes. The Nb/Nc method counts bradpools \"single block cohort\" (Nc) in past 20 Nb blocks as indicated in the chart title. SMA has to go back 660 to 800 blocks instead. Bob will probably focus on the parent method since it's so easy to calculate and is faster in responding. Notice parents= 1.44 for the parent method is the target instead of 2. I had an error in the simulation. 1.44 turned out best and proved equivalent to Bob's Nb/Nc = 2.42 method backed by his derivation. 2.42 = 1+1/Q where Q solves 1/Q = Q  * e^Q\n![17356923948868316595468585569479|690x324](upload://gIO8yRwwrPaqLrjUkmROFZJk702.png)",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 502,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}