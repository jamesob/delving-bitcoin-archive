{
  "id": 4108,
  "name": "Johan T. Halseth",
  "username": "halseth",
  "avatar_template": "/user_avatar/delvingbitcoin.org/halseth/{size}/198_2.png",
  "created_at": "2025-01-29T11:22:02.630Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"sanket1729\" data-post=\"2\" data-topic=\"1407\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/sanket1729/48/13_2.png\" class=\"avatar\"> sanket1729:</div>\n<blockquote>\n<p>How does this interact with lightning channel closures? I am not familiar with lighting routing messages for channel close, or if the node directly figures it out by observing the blockchain.</p>\n</blockquote>\n</aside>\n<p>Currently, an LN node backed by a Bitcoin full node definitely will watch the chain and remove channels when their output is spent. Light clients can\u2019t effectively do this, and as roasbeef mentions fall back to using the <code>channel_updates</code> as a liveness signal (or use some trusted source for graph/routing information).</p>\n<aside class=\"quote no-group\" data-username=\"roasbeef\" data-post=\"3\" data-topic=\"1407\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/roasbeef/48/160_2.png\" class=\"avatar\"> roasbeef:</div>\n<blockquote>\n<p>This is a more agressive version of the graph pruning that nodes do today (dropping channels that you haven\u2019t received a channel update for in 2 weeks)</p>\n</blockquote>\n</aside>\n<p>Exactly. A channel being unspent on-chain is no guarantee that it is still usable, so it is nice to get some kind of heartbeat from the nodes. This is why I think requiring a refreshed <code>channel_announcement</code> every few weeks is not a bad option.</p>\n<aside class=\"quote no-group\" data-username=\"sanket1729\" data-post=\"2\" data-topic=\"1407\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/sanket1729/48/13_2.png\" class=\"avatar\"> sanket1729:</div>\n<blockquote>\n<p>Will the ZK benefits go away if the channel_id is leaked when we close the channel?</p>\n</blockquote>\n</aside>\n<p>I definitely think that would be a big loss, since closing channels then will be discouraged since it hurts privacy.</p>\n<aside class=\"quote no-group\" data-username=\"roasbeef\" data-post=\"3\" data-topic=\"1407\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/roasbeef/48/160_2.png\" class=\"avatar\"> roasbeef:</div>\n<blockquote>\n<p>As far as what\u2019s revealed on open, as formulated the scheme still has the channel capacity in plain text, with the verifier using that as public input to verify that the committed output has a value that matches the channel capacity.</p>\n</blockquote>\n</aside>\n<p>In my current implementation, I prove in ZK that the advertised capacity is <em>less or equal</em> to the on-chain output. This leaves some obfuscation to what (taproot) outputs it could be. In a production implementation I would imagine a floating range could work, as roasbeef suggests.</p>\n<aside class=\"quote no-group\" data-username=\"roasbeef\" data-post=\"3\" data-topic=\"1407\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/roasbeef/48/160_2.png\" class=\"avatar\"> roasbeef:</div>\n<blockquote>\n<p>This leaks a bit of information as a verifier can scan on-chain using the utreexo checkpoint height as a starting point (new channel can only be created after the checkpoint).</p>\n</blockquote>\n</aside>\n<p>It is worth mentioning that there\u2019s no way to tell whether the channel was open or not before the checkpoint. So a privacy conscious node could open the channel on-chain, but wait several weeks before announcing it (they could actually start using it as a private channel right away, then later make it public).</p>",
  "post_number": 4,
  "post_type": 1,
  "updated_at": "2025-01-29T11:22:02.630Z",
  "reply_count": 0,
  "reply_to_post_number": 2,
  "quote_count": 2,
  "incoming_link_count": 0,
  "reads": 15,
  "readers_count": 14,
  "score": 3.0,
  "yours": false,
  "topic_id": 1407,
  "topic_slug": "zk-gossip-for-lightning-channel-announcements",
  "topic_title": "ZK-gossip for lightning channel announcements",
  "topic_html_title": "ZK-gossip for lightning channel announcements",
  "category_id": 7,
  "display_username": "Johan T. Halseth",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "bookmarked": false,
  "raw": "[quote=\"sanket1729, post:2, topic:1407\"]\nHow does this interact with lightning channel closures? I am not familiar with lighting routing messages for channel close, or if the node directly figures it out by observing the blockchain.\n[/quote]\n\nCurrently, an LN node backed by a Bitcoin full node definitely will watch the chain and remove channels when their output is spent. Light clients can't effectively do this, and as roasbeef mentions fall back to using the `channel_updates` as a liveness signal (or use some trusted source for graph/routing information).\n\n\n[quote=\"roasbeef, post:3, topic:1407\"]\nThis is a more agressive version of the graph pruning that nodes do today (dropping channels that you haven\u2019t received a channel update for in 2 weeks)\n[/quote]\n\nExactly. A channel being unspent on-chain is no guarantee that it is still usable, so it is nice to get some kind of heartbeat from the nodes. This is why I think requiring a refreshed `channel_announcement` every few weeks is not a bad option.\n\n[quote=\"sanket1729, post:2, topic:1407\"]\nWill the ZK benefits go away if the channel_id is leaked when we close the channel?\n[/quote]\nI definitely think that would be a big loss, since closing channels then will be discouraged since it hurts privacy.\n\n[quote=\"roasbeef, post:3, topic:1407\"]\nAs far as what\u2019s revealed on open, as formulated the scheme still has the channel capacity in plain text, with the verifier using that as public input to verify that the committed output has a value that matches the channel capacity.\n[/quote]\nIn my current implementation, I prove in ZK that the advertised capacity is _less or equal_ to the on-chain output. This leaves some obfuscation to what (taproot) outputs it could be. In a production implementation I would imagine a floating range could work, as roasbeef suggests. \n\n[quote=\"roasbeef, post:3, topic:1407\"]\nThis leaks a bit of information as a verifier can scan on-chain using the utreexo checkpoint height as a starting point (new channel can only be created after the checkpoint).\n[/quote]\nIt is worth mentioning that there's no way to tell whether the channel was open or not before the checkpoint. So a privacy conscious node could open the channel on-chain, but wait several weeks before announcing it (they could actually start using it as a private channel right away, then later make it public).",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 163,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}