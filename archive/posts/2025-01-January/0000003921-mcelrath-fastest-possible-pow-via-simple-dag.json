{
  "id": 3921,
  "name": "Bob McElrath",
  "username": "mcelrath",
  "avatar_template": "/user_avatar/delvingbitcoin.org/mcelrath/{size}/521_2.png",
  "created_at": "2025-01-02T17:18:06.007Z",
  "cooked": "<p>Zawy used a constant \u2018a\u2019 in his simulations but in my simulations and in practice \u2018a\u2019 is measured by the average \u201cwidth\u201d of the DAG: Nb/Nc which is the ratio of beads (share-chain blocks) to the number of total-ordered consensus \u201ccuts\u201d in the graph (aka \u201ccohorts\u201d). <a class=\"mention\" href=\"/u/sipa\">@sipa</a> this is exactly a difficulty adjustment based on \u201cblocks not in the main chain\u201d, I\u2019m just using some more graph theory to describe the same concept. If you could dig up that reference (probably related to HoneybadgerBFT?) I\u2019d appreciate it and will credit Andrew.</p>\n<p>Zawy\u2019s observation is that if you write the bead time and cohort time in units of \u2018a\u2019, (Tb/a and Tc/a) you\u2019re left with a function of only one dimensionless variable a<em>x</em>lambda where x is the target and lambda is the hashrate. This gives us a clock-free way to do retargeting by targeting having the most possible graph cuts (global consensus points). This is pretty cool because it eliminates a lot of timewarp and DAA manipulation games.</p>\n<p>The doc <a class=\"mention\" href=\"/u/harding\">@harding</a> linked above is a work in progress and doesn\u2019t yet include this observation. You can see my first stab at this there which is MUCH more complicated than targeting either a fixed number of parents or a fixed Nb/Nc (which seems to be equivalent).</p>\n<p>As far as not punishing latency, the algorithm will pay miners proportional to their work as long as their latency isn\u2019t excessive. At high latencies the miner is likely to create Bitcoin orphans and reduce the profit of the pool. So we need to incentivize latency all a level similar to bitcoin\u2019s natural orphan rate, but if we further incentivize latency below the natural propagation time of shares, we\u2019re incentivizing geographic centralization. High latency corresponds to large cohorts, and for cohorts over a certain size (probably around 25 beads) I want to sort the beads \u201cfarthest\u201d from the highest work path through the cohort, and start dropping the highest latency beads from the payment pool. Bitcoin\u2019s orphan rate is around 1% so rough numbers: a=250ms, so a 25 bead cohort corresponds to 5-6s and corresponds to the orphan rate. This deeply assumes all miners are on planet earth and edge cases exist which will use a minimum allowable latency that corresponds to the size of the earth. We\u2019re not offering a solution for mining on the moon. With 3s additional round trip to the moon, mining on the moon is marginal when considering bitcoin\u2019s orphan rate, but mining in Mars is impossible. This should not incentivize geographic centralization. (On earth)</p>\n<p>The above idea is contrary to Zawy\u2019s suggestion to orphan high latency beads, I want to include them but not pay them.</p>",
  "post_number": 8,
  "post_type": 1,
  "posts_count": 21,
  "updated_at": "2025-01-02T17:18:06.007Z",
  "reply_count": 2,
  "reply_to_post_number": 4,
  "quote_count": 0,
  "incoming_link_count": 41,
  "reads": 36,
  "readers_count": 35,
  "score": 222.2,
  "yours": false,
  "topic_id": 1331,
  "topic_slug": "fastest-possible-pow-via-simple-dag",
  "topic_title": "Fastest-possible PoW via Simple DAG",
  "topic_html_title": "Fastest-possible PoW via Simple DAG",
  "category_id": 7,
  "display_username": "Bob McElrath",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": null,
  "reply_to_user": {
    "id": 3,
    "username": "ajtowns",
    "name": "Anthony Towns",
    "avatar_template": "/user_avatar/delvingbitcoin.org/ajtowns/{size}/417_2.png"
  },
  "bookmarked": false,
  "raw": "Zawy used a constant 'a' in his simulations but in my simulations and in practice 'a' is measured by the average \"width\" of the DAG: Nb/Nc which is the ratio of beads (share-chain blocks) to the number of total-ordered consensus \"cuts\" in the graph (aka \"cohorts\"). @sipa this is exactly a difficulty adjustment based on \"blocks not in the main chain\", I'm just using some more graph theory to describe the same concept. If you could dig up that reference (probably related to HoneybadgerBFT?) I'd appreciate it and will credit Andrew.\n\nZawy's observation is that if you write the bead time and cohort time in units of 'a', (Tb/a and Tc/a) you're left with a function of only one dimensionless variable a*x*lambda where x is the target and lambda is the hashrate. This gives us a clock-free way to do retargeting by targeting having the most possible graph cuts (global consensus points). This is pretty cool because it eliminates a lot of timewarp and DAA manipulation games.\n\nThe doc @harding linked above is a work in progress and doesn't yet include this observation. You can see my first stab at this there which is MUCH more complicated than targeting either a fixed number of parents or a fixed Nb/Nc (which seems to be equivalent).\n\nAs far as not punishing latency, the algorithm will pay miners proportional to their work as long as their latency isn't excessive. At high latencies the miner is likely to create Bitcoin orphans and reduce the profit of the pool. So we need to incentivize latency all a level similar to bitcoin's natural orphan rate, but if we further incentivize latency below the natural propagation time of shares, we're incentivizing geographic centralization. High latency corresponds to large cohorts, and for cohorts over a certain size (probably around 25 beads) I want to sort the beads \"farthest\" from the highest work path through the cohort, and start dropping the highest latency beads from the payment pool. Bitcoin's orphan rate is around 1% so rough numbers: a=250ms, so a 25 bead cohort corresponds to 5-6s and corresponds to the orphan rate. This deeply assumes all miners are on planet earth and edge cases exist which will use a minimum allowable latency that corresponds to the size of the earth. We're not offering a solution for mining on the moon. With 3s additional round trip to the moon, mining on the moon is marginal when considering bitcoin's orphan rate, but mining in Mars is impossible. This should not incentivize geographic centralization. (On earth)\n\nThe above idea is contrary to Zawy's suggestion to orphan high latency beads, I want to include them but not pay them.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 406,
  "hidden": false,
  "trust_level": 2,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "excerpt": "Zawy used a constant \u2018a\u2019 in his simulations but in my simulations and in practice \u2018a\u2019 is measured by the average \u201cwidth\u201d of the DAG: Nb/Nc which is the ratio of beads (share-chain blocks) to the number of total-ordered consensus \u201ccuts\u201d in the graph (aka \u201ccohorts\u201d). <a class=\"mention\" href=\"/u/sipa\">@sipa</a> this is exactly a difficulty&hellip;",
  "truncated": true,
  "post_url": "/t/fastest-possible-pow-via-simple-dag/1331/8",
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false,
  "can_accept_answer": false,
  "can_unaccept_answer": false,
  "accepted_answer": false,
  "topic_accepted_answer": null
}