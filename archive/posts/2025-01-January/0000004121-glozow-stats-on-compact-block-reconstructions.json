{
  "id": 4121,
  "name": "Gloria Zhao",
  "username": "glozow",
  "avatar_template": "/user_avatar/delvingbitcoin.org/glozow/{size}/261_2.png",
  "created_at": "2025-01-31T13:30:22.579Z",
  "cooked": "<aside class=\"quote no-group\" data-username=\"0xB10C\" data-post=\"8\" data-topic=\"1052\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://delvingbitcoin.org/user_avatar/delvingbitcoin.org/0xb10c/48/15_2.png\" class=\"avatar\"> 0xB10C:</div>\n<blockquote>\n<p>These all seem to be orphans - It seems to me like they weren\u2019t in <a href=\"https://github.com/bitcoin/bitcoin/blob/89720b7a1b37af885f304350fa25f2479179ae3e/src/net_processing.cpp#L952C34-L952C53\"><code>vExtraTxnForCompact</code></a> (anymore). Two ideas:</p>\n<ul>\n<li>run a node with a larger <code>-blockreconstructionextratxn</code> than the default of 100 transactions to check if these perform significantly better</li>\n<li>look for the transactions in the orphan pool too</li>\n</ul>\n</blockquote>\n</aside>\n<p>Wow, that\u2019s new for me.</p>\n<p>(Using vextra as short for <code>vExtraTxnForCompact</code>) It seems very reasonable for vextra to be larger, or for it to only contain non-orphan transactions, and then <code>InitData</code> can look through the orphanage as well (the orphans in vextra are kind of \u201cfree\u201d memory-wise compared to the others).</p>\n<p>In addition to running with a larger <code>-blockreconstructionextratxn</code>, I wonder if we can try to analyze how well we use vextra. Broadly we have (1) replaced transactions (2) orphans (3) transactions that fail validation, you could have a patch that turns the buffer into pairs of <code>&lt;CTransactionRef, OriginEnum&gt;</code>. I wonder if one or two of these types of vextra transactions is usually more useful than the others. (More granular, are there certain <code>TxValidationResult</code>s that are particularly helpful/unhelpful? I think <code>TX_CONSENSUS</code> is skippable. I expect this is inconsequential though.)</p>\n<p>If most of the reconstructions are orphans, then perhaps we should consider iterating through the whole orphanage in addition to the vextra buffer. fwiw I\u2019m also currently working on a PR to that would make the number of transactions in orphanage potentially much larger, though (in the tens of thousands). So that might be a consideration if we\u2019re thinking about doing this.</p>",
  "post_number": 16,
  "post_type": 1,
  "updated_at": "2025-01-31T13:31:01.574Z",
  "reply_count": 1,
  "reply_to_post_number": null,
  "quote_count": 1,
  "incoming_link_count": 0,
  "reads": 10,
  "readers_count": 9,
  "score": 1.8,
  "yours": false,
  "topic_id": 1052,
  "topic_slug": "stats-on-compact-block-reconstructions",
  "topic_title": "Stats on compact block reconstructions",
  "topic_html_title": "Stats on compact block reconstructions",
  "category_id": 7,
  "display_username": "Gloria Zhao",
  "primary_group_name": null,
  "flair_name": null,
  "flair_url": null,
  "flair_bg_color": null,
  "flair_color": null,
  "flair_group_id": null,
  "badges_granted": [],
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_see_hidden_post": false,
  "can_wiki": false,
  "user_title": "",
  "bookmarked": false,
  "raw": "[quote=\"0xB10C, post:8, topic:1052\"]\nThese all seem to be orphans - It seems to me like they weren\u2019t in [`vExtraTxnForCompact`](https://github.com/bitcoin/bitcoin/blob/89720b7a1b37af885f304350fa25f2479179ae3e/src/net_processing.cpp#L952C34-L952C53) (anymore). Two ideas:\n\n* run a node with a larger `-blockreconstructionextratxn` than the default of 100 transactions to check if these perform significantly better\n* look for the transactions in the orphan pool too\n[/quote]\n\nWow, that's new for me.\n\n(Using vextra as short for `vExtraTxnForCompact`) It seems very reasonable for vextra to be larger, or for it to only contain non-orphan transactions, and then `InitData` can look through the orphanage as well (the orphans in vextra are kind of \"free\" memory-wise compared to the others).\n\nIn addition to running with a larger `-blockreconstructionextratxn`, I wonder if we can try to analyze how well we use vextra. Broadly we have (1) replaced transactions (2) orphans (3) transactions that fail validation, you could have a patch that turns the buffer into pairs of `<CTransactionRef, OriginEnum>`. I wonder if one or two of these types of vextra transactions is usually more useful than the others. (More granular, are there certain `TxValidationResult`s that are particularly helpful/unhelpful? I think `TX_CONSENSUS` is skippable. I expect this is inconsequential though.)\n\nIf most of the reconstructions are orphans, then perhaps we should consider iterating through the whole orphanage in addition to the vextra buffer. fwiw I'm also currently working on a PR to that would make the number of transactions in orphanage potentially much larger, though (in the tens of thousands). So that might be a consideration if we're thinking about doing this.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 7,
  "hidden": false,
  "trust_level": 3,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false,
  "reactions": [],
  "current_user_reaction": null,
  "reaction_users_count": 0,
  "current_user_used_main_reaction": false
}